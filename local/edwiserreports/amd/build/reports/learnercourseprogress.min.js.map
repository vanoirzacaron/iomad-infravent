{"version":3,"sources":["reports/learnercourseprogress.js"],"names":["define","$","ajax","Notification","common","CFG","SELECTOR","PAGE","SEARCH","LENGTH","LEARNER","SUMMARY","TABLE","FORMFILTER","DATE","DATEMENU","DATEITEM","DATEPICKER","DATEPICKERINPUT","flatpickr","dataTable","filter","enrolment","dir","attr","PROMISE","GET_DATA","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","JSON","stringify","GET_SUMMARY_CARD_DATA","call","methodname","args","report","filters","initializeDatatable","loader","show","learner","val","statuses","concat","util","get_string","done","response","destroy","never","DataTable","paging","deferRendering","columnDefs","className","targets","columns","render","width","tempdate","formatDate","Date","substring","timeFormatter","dom","language","info","infoEmpty","emptyTable","zeroRecords","paginate","previous","next","drawCallback","stylePaginationButton","this","hide","search","page","len","draw","fail","ex","exception","_init","updateTimeLabel","parse","find","select2","mode","altInput","altFormat","dateFormat","maxDate","appendTo","get","onOpen","addClass","setTimeout","offset","left","parent","css","closest","onChange","onClose","removeClass","date","dateAlternate","replace","stringarr","split","startdate","enddate","direction","text-align","includes","html","refreshSummarycard","clear","customDateSelected","on","text","column","value","handleSearchInput","handleReportCapability","init","document","ready"],"mappings":"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","sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Learner course progress report page.\n *\n * @package     local_edwiserreports\n * @author      Yogesh Shirsath\n * @copyright   2022 Wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine('local_edwiserreports/reports/learnercourseprogress', [\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'local_edwiserreports/common',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/select2',\n    'local_edwiserreports/flatpickr'\n], function(\n    $,\n    ajax,\n    Notification,\n    common,\n    CFG\n) {\n\n    /**\n     * Selector\n     */\n    var SELECTOR = {\n        PAGE: '#learnercourseprogress',\n        SEARCH: '#learnercourseprogress .table-search-input input',\n        LENGTH: '#learnercourseprogress .length-select',\n        LEARNER: '#learnercourseprogress .student-select',\n        SUMMARY: '#learnercourseprogress .summary-card',\n        TABLE: '#learnercourseprogress table',\n        FORMFILTER: '#learnercourseprogress .download-links [name=\"filter\"]',\n        DATE: '.edwiserreports-calendar',\n        DATEMENU: '.edwiserreports-calendar + .dropdown-menu',\n        DATEITEM: '.edwiserreports-calendar + .dropdown-menu .dropdown-item',\n        DATEPICKER: '.edwiserreports-calendar + .dropdown-menu .dropdown-calendar',\n        DATEPICKERINPUT: '.edwiserreports-calendar + .dropdown-menu .flatpickr'\n    };\n\n    /**\n     * Flat picker object.\n     */\n    let flatpickr = null;\n\n    /**\n     * Datatable object.\n     */\n    var dataTable = null;\n\n    /**\n     * Filter object.\n     */\n    var filter = {\n        enrolment: 'all',\n        dir: $('html').attr('dir')\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get learner course progress table data based on filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_DATA: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_learnercourseprogress_data',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify(filter)\n                },\n            });\n        },\n        /**\n         * Get summary card data.\n         *\n         * @param   {Integer}   courseid    Course id\n         * @param   {String}    cohortid   Cohort id all/id\n         * @param   {String}    groupid   group id all/id\n         * @returns {PROMISE}\n         */\n        GET_SUMMARY_CARD_DATA: function(filter) {\n            return ajax.call([{\n                methodname: 'local_edwiserreports_get_summary_card_data',\n                args: {\n                    report: \"\\\\local_edwiserreports\\\\reports\\\\learnercourseprogress\",\n                    filters: JSON.stringify(filter)\n                }\n            }], false)[0];\n        }\n    }\n\n    /**\n     * Initialize datable.\n     */\n    function initializeDatatable() {\n        common.loader.show(SELECTOR.PAGE);\n\n        if (!learner) {\n            // Updated export filter values.\n            filter.dir = $('html').attr('dir');\n            $(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n        }\n        let statuses = [\n            `<span class=\"danger-tag\">${M.util.get_string('notyetstarted', 'core_completion')}</span>`,\n            `<span class=\"success-tag\">${M.util.get_string('completed', 'core_completion')}</span>`,\n            `<span class=\"warning-tag\">${M.util.get_string('inprogress', 'core_completion')}</span>`\n        ];\n        PROMISE.GET_DATA(filter)\n            .done(function(response) {\n                if (dataTable !== null) {\n                    dataTable.destroy();\n                    dataTable = null;\n                }\n                let never = M.util.get_string('never', 'local_edwiserreports');\n                dataTable = $(SELECTOR.TABLE).DataTable({\n                    data: response,\n                    paging: true,\n                    deferRendering: true,\n                    columnDefs: [\n                        { className: \"fixed-column\", targets: 0 },\n                        { className: \"text-left\", targets: [0, 1] },\n                        { className: \"text-center\", targets: \"_all\" }\n                    ],\n                    columns: [\n                        {\n                            data: \"course\",\n                            render: function(data) {\n                                return '<span class=\"ed-reports-large-column\">' + data + '</span>';\n                            },\n                            width: \"12rem\"\n                        },\n                        {\n                            data: \"status\",\n                            render: function(data) {\n                                return statuses[data];\n                            },\n                            width: \"4rem\"\n                        },\n                        {\n                            data: \"enrolledon\",\n                            render: function(data) {\n                                let tempdate = common.formatDate(new Date(data * 1000), \"d MMM yyyy\");\n                                let rtl = $('html').attr('dir') == 'rtl' ? 1 : 0\n\n                                if(rtl){\n                                    tempdate = common.formatDate(new Date(data * 1000), \"yyyy MMM d\");\n                                }\n\n                                return `<p class=\"erp-time-rtl\"><span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? '-' : tempdate) + '</p>';\n                            },\n                            width: \"10rem\"\n                        },\n                        {\n                            data: \"completedon\",\n                            render: function(data) {\n                                let tempdate = common.formatDate(new Date(data * 1000), \"d MMM yyyy\");\n                                let rtl = $('html').attr('dir') == 'rtl' ? 1 : 0\n\n                                if(rtl){\n                                    tempdate = common.formatDate(new Date(data * 1000), \"yyyy MMM d\");\n                                }\n                                return `<p class=\"erp-time-rtl\"><span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? '-' : tempdate) + '</p>';\n                            },\n                            width: \"10rem\"\n                        },\n                        {\n                            data: \"lastaccess\",\n                            render: function(data) {\n                                let tempdate = common.formatDate(new Date(data * 1000), \"d MMM yyyy hh:mm TT\").substring(0,11) + '<br>' + common.formatDate(new Date(data * 1000), \"d MMM yyyy hh:mm TT\").substring(11,20);\n                                let rtl = $('html').attr('dir') == 'rtl' ? 1 : 0\n\n                                if(rtl){\n                                    tempdate = common.formatDate(new Date(data * 1000), \"TT mm:hh yyyy MMM d\").substring(8, 20) + '<br>' + common.formatDate(new Date(data * 1000), \"TT mm:hh yyyy MMM d\").substring(0,8);\n                                }\n                                return `<p class=\"erp-time-rtl\"><span class=\"d-none\">${data}</span>` +\n                                    (data == 0 ? never : tempdate) + '</p>';\n                            },\n                            width: \"10rem\"\n                        },\n                        { data: 'progress' },\n                        { data: \"grade\" },\n                        { data: \"totalactivities\", width: \"5rem\" },\n                        { data: \"completedactivities\", width: \"6rem\" },\n                        { data: \"attemptedactivities\", width: \"6rem\" },\n                        { data: \"visits\" },\n                        {\n                            data: \"timespent\",\n                            render: function(data) {\n                                return common.timeFormatter(data);\n                            }\n                        }\n                    ],\n                    dom: '<\"edwiserreports-table\"i<t><\"table-pagination\"p>>',\n                    language: {\n                        info: M.util.get_string('tableinfo', 'local_edwiserreports'),\n                        infoEmpty: M.util.get_string('infoempty', 'local_edwiserreports'),\n                        emptyTable: M.util.get_string('emptytable', 'local_edwiserreports'),\n                        zeroRecords: M.util.get_string('zerorecords', 'local_edwiserreports'),\n                        paginate: {\n                            previous: \" \",\n                            next: \" \"\n                        }\n                    },\n                    drawCallback: function() {\n                        common.stylePaginationButton(this);\n                        common.loader.hide(SELECTOR.PAGE);\n                    }\n                });\n                dataTable.columns(0).search($(SELECTOR.SEARCH).val());\n                dataTable.page.len($(SELECTOR.LENGTH).val()).draw();\n            })\n            .fail(function(ex) {\n                Notification.exception(ex);\n                common.loader.hide(SELECTOR.PAGE);\n            });\n    }\n\n    /**\n     * After Select Custom date get active users details.\n     */\n    function customDateSelected() {\n        let date = $(SELECTOR.DATEPICKERINPUT).val(); // Y-m-d format\n        let dateAlternate = $(SELECTOR.DATEPICKERINPUT).next().val().replace(\"to\", \"-\"); // d M Y format\n        // RTL support\n        // Split string in 2 parts\n        let stringarr = dateAlternate.split('-');\n        // Formating date for rtl\n        if(filter.dir == 'rtl'){\n            // format for rtl : yyyy mm dd\n            let startdate = stringarr[0].split(' ');\n            let enddate = stringarr[1].split(' ');\n\n            startdate = startdate[2] + ' ' + startdate[1] + ' ' + startdate[0];\n            enddate = enddate[3] + ' ' + enddate[2] + ' ' + enddate[1];\n            dateAlternate = enddate + '-' + startdate;\n\n            // Making direction ltr for date selector and aligning text to right\n            $(SELECTOR.DATE).css({'direction':'ltr','text-align': 'right'});\n            $(SELECTOR.DATEPICKERINPUT).css({'direction':'ltr','text-align': 'right'});\n        }\n\n        $(SELECTOR.DATEPICKERINPUT).next().val(dateAlternate);\n        /* If correct date is not selected then return false */\n        if (!date.includes(\" to \")) {\n            flatpickr.clear();\n            return;\n        }\n\n        // Set active class to custom date selector item.\n        $(SELECTOR.DATEITEM).removeClass('active');\n        $(SELECTOR.DATEITEM + '.custom').addClass('active');\n\n        // Show custom date to dropdown button.\n        $(SELECTOR.DATE).html(dateAlternate);\n\n        filter.enrolment = date;\n\n        // Fetching summary card data here\n        PROMISE.GET_SUMMARY_CARD_DATA(filter)\n        .done(function(response) {\n            response = JSON.parse(response);\n            common.refreshSummarycard('group', response, SELECTOR.SUMMARY, function() {\n            //     initializeDatatable();\n            });\n        });\n\n        initializeDatatable();\n        common.updateTimeLabel(date);\n    }\n\n    /**\n     * Initialize\n     */\n    function init() {\n\n        // Show time period in table info.\n        common.updateTimeLabel('all');\n\n        if (!learner) {\n            filter = JSON.parse($(SELECTOR.FORMFILTER).val());\n        }\n\n        $(SELECTOR.PAGE).find('.singleselect').select2();\n\n        flatpickr = $(SELECTOR.DATEPICKERINPUT).flatpickr({\n            mode: 'range',\n            altInput: true,\n            altFormat: \"d M Y\",\n            dateFormat: \"Y-m-d\",\n            maxDate: \"today\",\n            appendTo: $(SELECTOR.DATEPICKER).get(0),\n            onOpen: function() {\n                $(SELECTOR.DATEMENU).addClass('withcalendar');\n                setTimeout(function() {\n                    if ($(SELECTOR.DATEMENU).offset().left < $(SELECTOR.PAGE).parent().offset().left) {\n                        $(SELECTOR.DATEMENU).css('left', $(SELECTOR.DATEMENU).closest('.filter-selector').css('padding-left'));\n                    }\n                }, 500);\n            },\n            onChange: function() {\n                if ($(SELECTOR.DATEMENU).offset().left < $(SELECTOR.PAGE).parent().offset().left) {\n                    $(SELECTOR.DATEMENU).css('left', $(SELECTOR.DATEMENU).closest('.filter-selector').css('padding-left'));\n                }\n            },\n            onClose: function() {\n                $(SELECTOR.DATEMENU).removeClass('withcalendar');\n                customDateSelected();\n            }\n        });\n\n        /* Date selector listener */\n        $('body').on('click', SELECTOR.DATEITEM + \":not(.custom)\", function() {\n            // Set custom selected item as active.\n            $(SELECTOR.DATEITEM).removeClass('active');\n            $(this).addClass('active');\n\n            // Show selected item on dropdown button.\n            $(SELECTOR.DATE).html($(this).text());\n\n            // Clear custom date.\n            flatpickr.clear();\n\n            filter.enrolment = $(this).data('value');\n\n            // Fetching summary card data here\n            PROMISE.GET_SUMMARY_CARD_DATA(filter)\n            .done(function(response) {\n                response = JSON.parse(response);\n                common.refreshSummarycard('group', response, SELECTOR.SUMMARY, function() {\n                //     initializeDatatable();\n                });\n            });\n\n            initializeDatatable();\n            common.updateTimeLabel(filter.enrolment);\n        });\n\n        if (!learner) {\n            // Observer learner change.\n            $('body').on('change', SELECTOR.LEARNER, function() {\n                filter.learner = $(this).val();\n                // Fetching summary card data here\n                PROMISE.GET_SUMMARY_CARD_DATA(filter)\n                .done(function(response) {\n                    response = JSON.parse(response);\n                    common.refreshSummarycard('group', response, SELECTOR.SUMMARY, function() {\n                    //     initializeDatatable();\n                    });\n                });\n\n                initializeDatatable();\n            });\n        }\n\n        // Search in table.\n        $('body').on('input', SELECTOR.SEARCH, function() {\n            dataTable.column(0).search(this.value).draw();\n        });\n\n        // Observer length change.\n        $('body').on('change', SELECTOR.LENGTH, function() {\n            dataTable.page.len(this.value).draw();\n        });\n\n        initializeDatatable();\n        common.handleSearchInput();\n\n        // Handle report page capability manager.\n        common.handleReportCapability();\n    }\n\n    return {\n        init: function() {\n            $(document).ready(function() {\n                init();\n            });\n        }\n    };\n\n});\n"],"file":"learnercourseprogress.min.js"}
