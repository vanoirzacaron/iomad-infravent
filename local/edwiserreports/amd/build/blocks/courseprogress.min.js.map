{"version":3,"sources":["blocks/courseprogress.js"],"names":["define","$","ModalFactory","ModalEvents","Templates","ApexCharts","CFG","common","EdwiserReportsEvents","blockName","chart","position","attr","filter","cohort","course","group","dir","ranges","SELECTOR","PANEL","GRAPH","COHORT","COURSE","GROUP","INSIGHT","FORMFILTER","chartData","data","labels","donutChartDefault","plotOptions","pie","expandOnClick","id","type","height","events","dataPointSelection","event","chartContext","config","range","title","rangeSplit","dataPointIndex","concat","text","split","create","body","then","modal","modalRoot","getRoot","find","addClass","show","on","hidden","destroy","PROMISE","GET_TABLE_DATA","done","response","render","html","js","replaceNodeContents","getBody","fail","Notification","exception","colors","getColorTheme","fill","dataLabels","enabled","tooltip","custom","_ref","series","seriesIndex","w","value","tooltipStrings","single","plural","label","color","M","util","get_string","legend","formatter","seriesName","opts","globals","noData","GET_COURSEPROGRESS","ajax","url","requestUrl","requestType","dataType","requestDataType","action","secret","local_edwiserreports","lang","JSON","stringify","reloadFilter","types","callback","loader","renderGraph","graph","get","setTimeout","hide","loadGraph","val","error","errorcode","average","toPrecision","invalidUser","always","insight","Object","assign","length","reverse","init","select2","parseInt","this","trigger","document","EXPORTGRAPHPDF","graphElement","exportGraphPDF","width","EXPORTGRAPHJPEG","exportGraphJPEG","EXPORTGRAPHPNG","exportGraphPNG","EXPORTGRAPHSVG","exportGraphSVG","setInterval","newPosition","updateOptions","handleFilterSize","download","format","filename","animations","toggleClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine('local_edwiserreports/blocks/courseprogress', [\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/templates',\n    'local_edwiserreports/vendor/apexcharts',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/common',\n    'local_edwiserreports/events',\n    'local_edwiserreports/select2'\n], function(\n    $,\n    ModalFactory,\n    ModalEvents,\n    Templates,\n    ApexCharts,\n    CFG,\n    common,\n    EdwiserReportsEvents\n) {\n\n    /**\n     * Block name\n     */\n    let blockName = 'courseprogressblock';\n\n    /**\n     * Chart object.\n     */\n    let chart = null;\n\n    /**\n     * Position for legend.\n     */\n    let position = 'right';\n\n    let dirattr = $('html').attr('dir');\n    if (dirattr == 'rtl') {\n        position = 'left';\n    }\n\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        cohort: 0,\n        course: 0,\n        group: 0,\n        dir: $('html').attr('dir')\n    };\n\n    /**\n     * Ranges\n     */\n    var ranges = [\"81to100\", \"61to80\", \"41to60\", \"21to40\", \"0to20\"];\n\n    /**\n     * Selectors.\n     */\n    let SELECTOR = {\n        PANEL: '#courseprogressblock',\n        GRAPH: '.graph',\n        COHORT: '.cohort-select',\n        COURSE: '.course-select',\n        GROUP: '.group-select',\n        INSIGHT: '#courseprogressblock .insight',\n        FORMFILTER: '.download-links input[name=\"filter\"]'\n    };\n\n\n    /**\n     * Donut chart default config.\n     */\n    let chartData = {\n        data: [0, 0, 0, 0, 0, 0],\n        labels: [\n            '81% - 100%',\n            '61% - 80%',\n            '41% - 60%',\n            '21% - 40%',\n            '0% - 20%'\n        ]\n    };\n\n    /**\n     * Chart default.\n     */\n    let donutChartDefault = {\n        plotOptions: {\n            pie: {\n                expandOnClick: false\n            }\n        },\n        chart: {\n            id: 'courseprogress',\n            type: 'donut',\n            height: 350,\n            events: {\n                dataPointSelection: function(event, chartContext, config) {\n                    createCourseProgressTable(\n                        config.dataPointIndex,\n                        $(`${SELECTOR.PANEL} ${SELECTOR.COURSE} option:selected`).text()\n                    );\n                }\n            }\n        },\n        colors: CFG.getColorTheme(),\n        fill: {\n            type: 'solid',\n        },\n        dataLabels: {\n            enabled: false\n        },\n        tooltip: {\n            custom: function({ series, seriesIndex, dataPointIndex, w }) {\n                let value = series[seriesIndex];\n                let tooltip = value < 2 ? chartData.tooltipStrings.single : chartData.tooltipStrings.plural;\n                let label = w.config.labels[seriesIndex];\n                let color = w.config.colors[seriesIndex];\n                return `<div class=\"custom-donut-tooltip\" style=\"text-align:center\">\n                            <div style=\"color: ${color};\">\n                                <span style=\"font-weight: 500;\"> ${label}:</span>\n                                <span style=\"font-weight: 700;\"> ${value} ${M.util.get_string(tooltip, 'local_edwiserreports')}</span>\n                            </div>\n                            <span style=\"color: black; font-size: 0.871rem;\">${M.util.get_string('clickonchartformoreinfo', 'local_edwiserreports')}</span>\n                        </div>`;\n            }\n        },\n        legend: {\n            position: position,\n            formatter: function(seriesName, opts) {\n                return [seriesName + \": \" + opts.w.globals.series[opts.seriesIndex]]\n            }\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * All promises.\n     */\n    let PROMISE = {\n        /**\n         * Get course progress block chart data.\n         * @returns {PROMISE}\n         */\n        GET_COURSEPROGRESS: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_courseprogress_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify(filter)\n                }\n            });\n        },\n\n        /**\n         * Get table data for popup modal based on filters and range\n         * @param   {string}  range Grade range\n         * @returns {PROMISE}\n         */\n        GET_TABLE_DATA: function(range) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_courseprogress_modal_data',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter,\n                        range: range\n                    })\n                }\n            });\n        }\n    };\n\n    /**\n     * Create Course Progress Table.\n     * @param {string} range Progress range.\n     * @param {string} title Modal title.\n     */\n    function createCourseProgressTable(range, title) {\n        let rangeSplit = ranges[range].split('to');\n        ModalFactory.create({\n            body: `<label class=\"text-center w-100 py-2\">\n                    <i class=\"fa fa-circle-o-notch fa-spin\"></i>\n                </label>`,\n            title: `${title} (${rangeSplit[0]}% - ${rangeSplit[1]}%)`\n        }).then(function(modal) {\n            let modalRoot = modal.getRoot();\n            modalRoot.find('.modal-dialog').addClass('modal-lg');\n            modal.show();\n            modalRoot.on(ModalEvents.hidden, function() {\n                modal.destroy();\n            });\n\n            // Get data for modal table.\n            PROMISE.GET_TABLE_DATA(ranges[range])\n                .done(function(response) {\n                    Templates.render('local_edwiserreports/modal_table', response)\n                        .done(function(html, js) {\n                            Templates.replaceNodeContents(modal.getBody(), html, js);\n                        })\n                        .fail(Notification.exception);\n                });\n        }).fail(Notification.exception);\n    }\n\n    /**\n     * Reload filters.\n     * @param {Array}    types    Types of filter to refresh\n     * @param {Function} callback Callback functions\n     */\n    function reloadFilter(types, callback) {\n        common.loader.show(SELECTOR.PANEL);\n        common.reloadFilter(\n            SELECTOR.PANEL,\n            types,\n            filter.cohort,\n            filter.course,\n            filter.group,\n            callback\n        );\n    }\n\n    /**\n     * Render graph.\n     * @param {DOM} graph Graph element\n     * @param {Object} data Graph data\n     */\n    function renderGraph(graph, data) {\n        if (chart !== null) {\n            chart.destroy();\n        }\n        chart = new ApexCharts(graph.get(0), data);\n        chart.render();\n        setTimeout(function() {\n            common.loader.hide(SELECTOR.PANEL);\n        }, 1000);\n    }\n\n    /**\n     * Load graph data.\n     */\n    function loadGraph() {\n\n        // Set export filter to download link.\n        $(SELECTOR.PANEL).find(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n\n        // Show loader.\n        common.loader.show(SELECTOR.PANEL);\n\n        PROMISE.GET_COURSEPROGRESS()\n            .done(function(response) {\n                if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                    invalidUser('courseprogressblock', response);\n                    return;\n                }\n\n                chartData.data = response.data;\n                chartData.average = common.toPrecision(response.average, 2);\n                chartData.tooltipStrings = response.tooltip;\n            })\n            .fail(function(error) {\n                chartData.average = '0';\n            })\n            .always(function() {\n                common.insight(SELECTOR.INSIGHT, {\n                    'insight': {\n                        'value': chartData.average + '%',\n                        'title': 'averagecourseprogress'\n                    }\n                });\n                data = Object.assign({}, donutChartDefault);\n                if (chartData.data.length != 0) {\n                    data.labels = chartData.labels;\n                    data.series = chartData.data.reverse();\n                } else {\n                    data.labels = [];\n                    data.series = [];\n                }\n                // $(SELECTOR.PANEL).find(SELECTOR.GRAPH).toggleClass('empty-donut', chartData.data.length == 0);\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);;\n\n                // Hide loader.\n                common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n\n        if ($(SELECTOR.COURSE).length == 0 || $(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n\n        filter.course = $(`${SELECTOR.PANEL} ${SELECTOR.COURSE}`).val();\n        $(SELECTOR.PANEL + ' .singleselect').select2();\n\n        // Cohort selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COHORT}`, function() {\n            filter.cohort = parseInt($(this).val());\n            reloadFilter(['course', 'noallcourses'], function() {\n                setTimeout(function() {\n                    filter.course = $(`${SELECTOR.PANEL} ${SELECTOR.COURSE} option:first-child`).val();\n                    $(`${SELECTOR.PANEL} ${SELECTOR.COURSE}`).val(filter.course).trigger('change');\n                }, 50);\n            });\n        });\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            filter.course = parseInt($(this).val());\n            filter.group = 0;\n            reloadFilter(['group'], function() {\n                loadGraph();\n            });\n        });\n\n        // Group selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.GROUP}`, function() {\n            filter.group = parseInt($(this).val());\n            // Load graph data.\n            loadGraph();\n        });\n\n        // Export to PDF.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPDF + '-' + blockName, function() {\n            let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n            common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height());\n        });\n\n        // Export to JPEG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHJPEG + '-' + blockName, function() {\n            common.exportGraphJPEG(chart, filter);\n        });\n\n        // Export to PNG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPNG + '-' + blockName, function() {\n            common.exportGraphPNG(chart, filter);\n        });\n\n        // Export to SVG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHSVG + '-' + blockName, function() {\n            common.exportGraphSVG(chart, filter);\n        });\n\n        // Handling legend position based on width.\n        setInterval(function() {\n            if (chart === null) {\n                return;\n            }\n            let width = $(SELECTOR.PANEL).find('.apexcharts-canvas').width();\n            var attr = $('html').attr('dir');\n            let newPosition = width >= 400 ? 'right' : 'bottom';\n            if (attr == 'rtl') {\n                newPosition = width >= 400 ? 'left' : 'bottom';\n            }\n            if (newPosition == position) {\n                return;\n            }\n            position = newPosition;\n            chart.updateOptions({\n                legend: {\n                    position: position\n                }\n            })\n        }, 1000);\n        common.handleFilterSize(SELECTOR.PANEL);\n        loadGraph();\n    }\n\n    /**\n     * Download grade block's graph in specified format.\n     *\n     * @param {String} format   Format of downloading file\n     * @param {String} filename Name of file\n     * @param {String} data     Exported data\n     */\n    function download(format, filename, response) {\n        chartData.data = response.data;\n\n        data = Object.assign({}, donutChartDefault);\n        if (chartData.data.length != 0) {\n            data.labels = chartData.labels;\n            data.series = chartData.data.reverse();\n        } else {\n            data.labels = [];\n            data.series = [];\n        }\n        data.tooltip = {\n            enabled: false\n        };\n        data.chart.animations = {\n            enabled: false\n        };\n        $(SELECTOR.PANEL).find(SELECTOR.GRAPH).toggleClass('empty-donut', chartData.data.length == 0);\n        renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n\n        switch (format) {\n            case 'pdfimage':\n                let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n                common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height(), filename);\n                break;\n            case 'jpeg':\n                common.exportGraphJPEG(chart, filter, filename);\n                break;\n            case 'png':\n                common.exportGraphPNG(chart, filter, filename);\n                break;\n            case 'svg':\n                common.exportGraphSVG(chart, filter, filename);\n                break;\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init,\n        download: download\n    };\n});\n"],"file":"courseprogress.min.js"}
