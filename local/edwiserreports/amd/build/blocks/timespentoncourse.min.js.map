{"version":3,"sources":["blocks/timespentoncourse.js"],"names":["define","$","ApexCharts","common","CFG","EdwiserReportsEvents","blockName","SELECTOR","PANEL","INSIGHT","FORMFILTER","GRAPH","COHORT","COURSE","GROUP","STUDENT","PROMISE","GET_TIMESPENTONCOURSE","filter","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","JSON","stringify","date","cohort","course","group","student","dir","rtl","chart","lineChartDefault","series","id","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","stroke","curve","width","grid","borderColor","xaxis","categories","labels","hideOverlappingLabels","rotate","minHeight","maxHeight","rotateAlways","datetimeFormatter","year","month","day","hour","legend","horizontalAlign","itemMargin","horizontal","vertical","dataLabels","colors","getColorTheme","noData","text","util","get_string","barChartDefault","selection","zoomin","zoomout","pan","marker","plotOptions","bar","columnWidth","trim","tickPlacement","renderGraph","graph","destroy","get","render","setTimeout","loader","hide","loadGraph","invalidUser","find","val","done","response","Object","assign","dates","map","name","timespent","yaxis","timeFormatter","length","insight","value","dataPointIndex","short","replaceAll","details","fail","exception","reloadFilter","types","init","currentDate","select2","dateChange","on","concat","parseInt","this","document","EXPORTGRAPHPDF","graphElement","exportGraphPDF","EXPORTGRAPHJPEG","exportGraphJPEG","EXPORTGRAPHPNG","exportGraphPNG","EXPORTGRAPHSVG","exportGraphSVG","handleFilterSize","format","filename","animations"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Block service call and rendering defined in this file.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine('local_edwiserreports/blocks/timespentoncourse', [\n    'jquery',\n    'local_edwiserreports/vendor/apexcharts',\n    'local_edwiserreports/common',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/events'\n], function(\n    $,\n    ApexCharts,\n    common,\n    CFG,\n    EdwiserReportsEvents\n) {\n\n    /**\n     * Block name\n     */\n    let blockName = 'timespentoncourseblock';\n    /**\n     * DOM element selectors list.\n     */\n    let SELECTOR = {\n        PANEL: '#timespentoncourseblock',\n        INSIGHT: '#timespentoncourseblock .insight',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        GRAPH: '#apex-chart-timespentoncourse-block',\n        COHORT: '.cohort-select',\n        COURSE: '.course-select',\n        GROUP: '.group-select',\n        STUDENT: '.student-select'\n    };\n\n    let PROMISE = {\n        /**\n         * Get timespent on site using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONCOURSE: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_timespentoncourse_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Filter for ajax.\n     */\n    let filter = {\n        date: null,\n        cohort: 0,\n        course: 0,\n        group: 0,\n        student: 0,\n        dir: $('html').attr('dir'),\n        rtl: $('html').attr('dir') == 'rtl' ? 1 : 0\n    };\n\n    /**\n     * Chart object.\n     */\n    let chart = null;\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            id: 'timespentoncourse',\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            // labels: {\n            // },\n            labels: {\n                hideOverlappingLabels: true,\n                rotate: -45,\n                minHeight: 100,\n                maxHeight: 180,\n                rotateAlways: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: [CFG.getColorTheme()[2]],\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Bar chart default config.\n     */\n    const barChartDefault = {\n        series: [],\n        chart: {\n            id: 'timespentoncourse',\n            type: 'bar',\n            height: 350,\n            toolbar: {\n                show: true,\n                tools: {\n                    download: false,\n                    selection: true,\n                    zoom: true,\n                    zoomin: true,\n                    zoomout: true,\n                    pan: true,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            marker: {\n                show: true\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%'\n            }\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        xaxis: {\n            categories: null,\n            labels: {\n                hideOverlappingLabels: true,\n                rotate: -45,\n                minHeight: 100,\n                maxHeight: 180,\n                rotateAlways: true,\n                trim: true\n            },\n            tickPlacement: 'on'\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        colors: [CFG.getColorTheme()[2]],\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Render graph.\n     * @param {DOM} graph Graph element\n     * @param {Object} data Graph data\n     */\n    function renderGraph(graph, data) {\n        if (chart !== null) {\n            chart.destroy();\n        }\n        chart = new ApexCharts(graph.get(0), data);\n        chart.render();\n        setTimeout(function() {\n            common.loader.hide(SELECTOR.PANEL);\n        }, 1000);\n    }\n\n    /**\n     * Load graph\n     */\n    function loadGraph(invalidUser) {\n        common.loader.show(SELECTOR.PANEL);\n\n        // Set export filter to download link.\n        $(SELECTOR.PANEL).find(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n\n        PROMISE.GET_TIMESPENTONCOURSE(filter)\n            .done(function(response) {\n                let data;\n                if (filter.course == 0) {\n                    data = Object.assign({}, barChartDefault);\n                    data.xaxis.categories = response.labels;\n                } else {\n                    data = Object.assign({}, lineChartDefault);\n                    data.xaxis.categories = response.dates.map(date => date * 86400000);\n                }\n                data.series = [{\n                    name: M.util.get_string('timespentoncourse', 'local_edwiserreports'),\n                    data: response.timespent,\n                }];\n                data.yaxis = {\n                    labels: {\n                        formatter: common.timeFormatter\n                    }\n                };\n                data.chart.toolbar.show = response.labels.length > 29;\n                data.chart.zoom = {\n                    enabled: response.labels.length > 29\n                };\n                data.tooltip.y.title.formatter = () => {\n                    return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                }\n                response.insight.insight.value = common.timeFormatter(response.insight.insight.value, {\n                    dataPointIndex: 0,\n                    short: true\n                }, filter.rtl).replaceAll(',', ' ');\n                response.insight.details.data[0].value = common.timeFormatter(response.insight.details.data[0].value, {\n                    dataPointIndex: 0\n                }, filter.rtl);\n                common.insight(SELECTOR.INSIGHT, response.insight);\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            }).fail(function(exception) {\n                common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Reload filters.\n     */\n    function reloadFilter(types) {\n        common.loader.show(SELECTOR.PANEL);\n        common.reloadFilter(\n            SELECTOR.PANEL,\n            types,\n            filter.cohort,\n            filter.course,\n            filter.group,\n            function() {\n                loadGraph();\n            });\n    }\n\n    /**\n     * Initialize events.\n     */\n    function initEvents() {\n        // Date selector listener.\n        common.dateChange(function(date) {\n            filter.date = date;\n            loadGraph();\n        });\n\n        // Cohort selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COHORT}`, function() {\n            filter.cohort = parseInt($(this).val());\n            filter.course = 0;\n            filter.group = 0;\n            filter.student = 0;\n            reloadFilter(['course', 'group', 'student']);\n        });\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            filter.course = parseInt($(this).val());\n            filter.group = 0;\n            filter.student = 0;\n            reloadFilter(['group', 'student']);\n\n        });\n\n        // Group selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.GROUP}`, function() {\n            filter.group = parseInt($(this).val());\n            filter.student = 0;\n            reloadFilter(['student']);\n        });\n\n        // Student selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.STUDENT}`, function() {\n            filter.student = parseInt($(this).val());\n            // Load graph data.\n            loadGraph();\n        });\n\n        // Export to PDF.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPDF + '-' + blockName, function() {\n            let graphElement = $(SELECTOR.PANEL).find('.apexcharts-canvas');\n            common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height());\n        });\n\n        // Export to JPEG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHJPEG + '-' + blockName, function() {\n            common.exportGraphJPEG(chart, filter);\n        });\n\n        // Export to PNG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPNG + '-' + blockName, function() {\n            common.exportGraphPNG(chart, filter);\n        });\n\n        // Export to SVG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHSVG + '-' + blockName, function() {\n            common.exportGraphSVG(chart, filter);\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     * @param {String}   currentDate Current active date\n     */\n    function init(invalidUser, currentDate) {\n\n        // Assigning current date.\n        filter.date = currentDate;\n\n        if (!$(SELECTOR.PANEL).length) {\n            return;\n        }\n\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        initEvents();\n        common.handleFilterSize(SELECTOR.PANEL);\n        loadGraph(invalidUser);\n    }\n\n    /**\n     * Download grade block's graph in specified format.\n     *\n     * @param {String} format   Format of downloading file\n     * @param {String} filename Name of file\n     * @param {String} data     Exported data\n     */\n    function download(format, filename, response) {\n        let data;\n        if (response.dates === undefined) {\n            data = Object.assign({}, barChartDefault);\n            data.xaxis.categories = response.labels;\n        } else {\n            data = Object.assign({}, lineChartDefault);\n            data.xaxis.categories = response.dates.map(date => date * 86400000);\n        }\n        data.series = [{\n            name: M.util.get_string('timespentoncourse', 'local_edwiserreports'),\n            data: response.timespent,\n        }];\n        data.yaxis = {\n            labels: {\n                formatter: common.timeFormatter\n            }\n        };\n        data.chart.toolbar.show = false;\n        data.tooltip = {\n            enabled: false\n        };\n        data.chart.animations = {\n            enabled: false\n        };\n        renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n\n        switch (format) {\n            case 'pdfimage':\n                let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n                common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height(), filename);\n                break;\n            case 'jpeg':\n                common.exportGraphJPEG(chart, filter, filename);\n                break;\n            case 'png':\n                common.exportGraphPNG(chart, filter, filename);\n                break;\n            case 'svg':\n                common.exportGraphSVG(chart, filter, filename);\n                break;\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init,\n        download: download\n    };\n});\n"],"file":"timespentoncourse.min.js"}
