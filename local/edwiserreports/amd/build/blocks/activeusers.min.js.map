{"version":3,"sources":["blocks/activeusers.js"],"names":["define","$","ModalFactory","ModalEvents","Templates","ApexCharts","Notification","CFG","EdwiserReportsEvents","common","activeUsersData","blockName","activeUsersGraph","filter","timer","SELECTOR","PANEL","RESETTIME","REFRESH","CONTEXT","FORMFILTER","MODALROOT","MODALLINK","MODALTAB","PROMISE","GET_DATA","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","JSON","stringify","graphajax","GET_TABLE_DATA","date","lineChartDefault","series","chart","id","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","events","click","event","chartContext","w","dataPointIndex","context","active","forEach","tab","i","globals","collapsedSeriesIndices","indexOf","config","xaxis","categories","render","done","html","js","create","body","title","concat","util","get_string","formatDate","Date","then","modal","modalRoot","getRoot","find","addClass","on","hidden","destroy","loadSiteOverviewTable","getBody","fail","exception","createSiteOverivewModal","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","items","display","fixed","position","offsetX","offsetY","custom","_ref","seriesIndex","index","length","colors","name","stroke","curve","width","lineCap","grid","borderColor","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","yaxis","val","toFixed","legend","horizontalAlign","itemMargin","horizontal","vertical","getColorTheme","dataLabels","target","response","replaceNodeContents","getActiveUsersBlockData","loader","error","errorcode","graph","dates","map","insight","invalidUser","always","get","Object","assign","labelName","activeUsers","enrolments","completionRate","getGraphData","generateActiveUsersGraph","clearInterval","setInterval","increamentUpdateTime","removeClass","hide","parseInt","text","init","currentDate","console","log","getActiveUsersBlock","this","dateChange","document","EXPORTGRAPHPDF","graphElement","exportGraphPDF","EXPORTGRAPHJPEG","exportGraphJPEG","EXPORTGRAPHPNG","exportGraphPNG","EXPORTGRAPHSVG","exportGraphSVG","format","filename","animations"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine('local_edwiserreports/blocks/activeusers', [\n    'jquery',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/templates',\n    'local_edwiserreports/vendor/apexcharts',\n    'core/notification',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/events',\n    'local_edwiserreports/common',\n    'local_edwiserreports/flatpickr'\n], function(\n    $,\n    ModalFactory,\n    ModalEvents,\n    Templates,\n    ApexCharts,\n    Notification,\n    CFG,\n    EdwiserReportsEvents,\n    common\n) {\n    /* Varible for active users block */\n    var activeUsersData = null;\n    var blockName = 'activeusersblock';\n    var activeUsersGraph = null;\n    var filter = null;\n    var timer = null;\n\n    /**\n     * Filters\n     */\n    // var filter = {\n    //     daterange: null,\n    //     dir: $('html').attr('dir')\n    // };\n\n    /**\n     * Modal data table array.\n     */\n    var modalDataTable = [];\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#activeusersblock',\n        RESETTIME: '#activeusersblock #updated-time > span.minute',\n        REFRESH: '#activeusersblock .refresh',\n        CONTEXT: '[data-contextid]',\n        FORMFILTER: \"#activeusers .download-links input[name='filter']\",\n        MODALROOT: '.siteoverview-modal-tables',\n        MODALLINK: '.siteoverview-modal-tables .nav .nav-link',\n        MODALTAB: '.siteoverview-modal-tables .tabs .tab'\n    };\n\n    /**\n     * Promise list.\n     */\n    var PROMISE = {\n        /**\n         * Get data for graph.\n         * @returns {PROMISE}\n         */\n        GET_DATA: function() {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_activeusers_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter,\n                        graphajax: true\n                    })\n                },\n            });\n        },\n\n        /**\n         * Get table data for popup modal based on selected date\n         * @param   {String}  date Selected date\n         * @param   {String}  type Type of table to fetch\n         * @returns {PROMISE}\n         */\n        GET_TABLE_DATA: function(date, type) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_siteoverviewstatus_block_modal_data',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        date: date,\n                        type: type\n                    })\n                }\n            });\n        }\n    }\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            id: 'activeusers',\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            },\n            events: {\n                click: function(event, chartContext, w) {\n                    if (w.dataPointIndex == -1) {\n                        return;\n                    }\n                    let context = {},\n                        active = 'active';\n                    [\"activeusers\", \"enrolments\", \"completions\"].forEach((tab, i) => {\n                        if (w.globals.collapsedSeriesIndices.indexOf(i) !== -1) {\n                            return;\n                        }\n                        context[tab] = {\n                            active: active\n                        };\n                        active = '';\n                    });\n                    context.date = w.config.xaxis.categories[w.dataPointIndex] / 86400000;\n                    createSiteOverivewModal(context);\n                }\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n            custom: function({ series, seriesIndex, dataPointIndex, w }) {\n                let tooltip = `\n                <div class=\"apexcharts-tooltip-title\" style=\"font-family: Helvetica, Arial, sans-serif; font-size: 12px;\">\n                    ${common.formatDate(new Date(w.config.xaxis.categories[dataPointIndex]), \"d MMM yyyy\")}\n                </div>`;\n                for (let index = 0; index < w.config.series.length; index++) {\n                    const element = w.config.series[index];\n                    if (element.data.length == 0) {\n                        continue;\n                    }\n                    tooltip += `<div class=\"apexcharts-tooltip-series-group apexcharts-active\" style=\"order: ${index}; display: flex;\">\n                        <span class=\"apexcharts-tooltip-marker\" style=\"background-color: ${w.config.colors[index]};\"></span>\n                        <div class=\"apexcharts-tooltip-text\" style=\"font-family: Helvetica, Arial, sans-serif; font-size: 12px;\">\n                            <div class=\"apexcharts-tooltip-y-group\">\n                                <span class=\"apexcharts-tooltip-text-y-label\">${w.config.series[index].name}: </span>\n                                <span class=\"apexcharts-tooltip-text-y-value\">${w.config.series[index].data[dataPointIndex]}</span>\n                            </div>\n                        </div>\n                    </div>`;\n                }\n                return tooltip + `\n                    <span style=\"color: black; font-size: 0.871rem; order: 4; padding: 0px 15px;\">${M.util.get_string('clickondatapoint', 'local_edwiserreports')}</span>\n                `;\n            }\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2,\n            lineCap: 'round'\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        yaxis: {\n            labels: {\n                formatter: function(val, index) {\n                    return val === undefined ? val : val.toFixed(0);\n                }\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        colors: CFG.getColorTheme(),\n        dataLabels: {\n            enabled: false\n        }\n    };\n\n    /**\n     * Load site overview modal table data.\n     *\n     * @param {Interger} date  Selected data\n     * @param {DOM}      modal Modal dom object\n     * @param {String}   type  Type of table\n     */\n    function loadSiteOverviewTable(date, target, type) {\n        // Get data for modal table.\n        PROMISE.GET_TABLE_DATA(date, type)\n            .done(function(response) {\n                Templates.render('local_edwiserreports/modal_table', response)\n                    .done(function(html, js) {\n                        let tab = target.find(`[data-id=\"${type}\"]`);\n                        tab.data('loaded', true);\n                        Templates.replaceNodeContents(tab, html, js);\n                    })\n                    .fail(Notification.exception);;\n            });\n    }\n\n    /**\n     * Create Course Progress Table.\n     *\n     * @param {object} context Context for modal tabs\n     */\n    function createSiteOverivewModal(context) {\n        Templates.render('local_edwiserreports/siteoverviewblock_modal_body', context)\n            .done(function(html, js) {\n                ModalFactory.create({\n                    body: html,\n                    title: `${M.util.get_string('activeusersheader', 'local_edwiserreports')} (${\n                        common.formatDate(new Date(context.date * 86400000), \"d MMM yyyy\")\n                    })`\n                }).then(function(modal) {\n                    let modalRoot = modal.getRoot();\n                    modalRoot.find('.modal-dialog').addClass('modal-lg');\n                    modal.show();\n                    modalRoot.on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    loadSiteOverviewTable(\n                        context.date,\n                        modal.getBody().find(SELECTOR.MODALROOT),\n                        modal.getBody().find('.nav-link.active').data('target')\n                    );\n                }).fail(Notification.exception);\n            });\n    }\n\n    /**\n     * Initialize events.\n     */\n    function initEvents() {\n        /* Refresh when click on the refresh button */\n        $(SELECTOR.REFRESH).on('click', function() {\n            $(this).addClass(\"refresh-spin\");\n            getActiveUsersBlockData();\n        });\n\n        // Date selector listener.\n        common.dateChange(function(date) {\n            filter = date;\n\n            // Set export filter to download link.\n            // $(SELECTOR.PANEL).find('.download-links [name=\"filter\"]').val(filter);\n            // $(SELECTOR.FORMFILTER).val(JSON.stringify(filter));\n            $(SELECTOR.FORMFILTER).val(filter);\n            $(\"#userfilter .download-links input[name='filter']\").val(filter);\n            \n            getActiveUsersBlockData();\n        });\n\n        // Export to PDF.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPDF + '-' + blockName, function() {\n            let graphElement = $(SELECTOR.PANEL).find('.apexcharts-canvas');\n            common.exportGraphPDF(activeUsersGraph, {\n                date: filter\n            }, graphElement.width(), graphElement.height());\n        });\n\n        // Export to JPEG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHJPEG + '-' + blockName, function() {\n            common.exportGraphJPEG(activeUsersGraph, {\n                date: filter\n            });\n        });\n\n        // Export to PNG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPNG + '-' + blockName, function() {\n            common.exportGraphPNG(activeUsersGraph, {\n                date: filter\n            });\n        });\n\n        // Export to SVG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHSVG + '-' + blockName, function() {\n            common.exportGraphSVG(activeUsersGraph, {\n                date: filter\n            });\n        });\n\n        $('body').on('click', SELECTOR.MODALLINK, function() {\n            let target = $(this).data('target');\n            $(SELECTOR.MODALLINK).removeClass('active');\n            $(this).addClass('active');\n            $(SELECTOR.MODALTAB).removeClass('active');\n            $(SELECTOR.MODALTAB + `[data-id=\"${target}\"]`).addClass('active');\n            if ($(SELECTOR.MODALTAB + `[data-id=\"${target}\"]`).data('loaded')) {\n                return;\n            }\n            loadSiteOverviewTable($(SELECTOR.MODALROOT).data('date'), $(SELECTOR.MODALROOT), target);\n        });\n    }\n\n    /**\n     * Get data for active users block.\n     */\n    function getActiveUsersBlockData() {\n        // Show loader.\n        common.loader.show(SELECTOR.PANEL);\n        PROMISE.GET_DATA().done(function(response) {\n            if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                invalidUser('activeusersblock', response);\n                return;\n            }\n\n            activeUsersData.graph.data = response.data;\n            activeUsersData.graph.labels = response.dates.map(date => date * 86400000);\n\n\n            common.insight(SELECTOR.PANEL + ' .insight', response.insight);\n        }).fail(function(error) {\n            Notification.exception(error);\n        }).always(function() {\n            activeUsersGraph = generateActiveUsersGraph();\n            // V.changeExportUrl(filter, exportUrlLink, V.filterReplaceFlag);\n            $(SELECTOR.PANEL).find('.download-links input[name=\"filter\"]').val(filter);\n\n            // Change graph variables\n            resetUpdateTime();\n            clearInterval(timer);\n            timer = setInterval(increamentUpdateTime, 1000 * 60);\n            $(SELECTOR.REFRESH).removeClass('refresh-spin');\n            // Hide loader.\n            common.loader.hide(SELECTOR.PANEL);\n        });\n    }\n\n    /**\n     * Reset Update time in panel header.\n     */\n    function resetUpdateTime() {\n        $(SELECTOR.RESETTIME).html(0);\n    }\n\n    /**\n     * Increament update time in panel header.\n     */\n    function increamentUpdateTime() {\n        $(SELECTOR.RESETTIME).html(parseInt($(SELECTOR.RESETTIME).text()) + 1);\n    }\n\n    /**\n     * Generate Active Users graph.\n     * @returns {Object} Active users graph\n     */\n    function generateActiveUsersGraph() {\n        if (activeUsersGraph) {\n            activeUsersGraph.destroy();\n        }\n        activeUsersGraph = new ApexCharts($(\"#apex-chart-active-users\").get(0), getGraphData());\n        activeUsersGraph.render();\n        return activeUsersGraph;\n    }\n\n    /**\n     * Get graph data.\n     * @return {Object}\n     */\n    function getGraphData() {\n        let data = Object.assign({}, lineChartDefault);\n        try {\n            data.series = [{\n                name: activeUsersData.graph.labelName.activeUsers,\n                data: activeUsersData.graph.data.activeUsers,\n            }, {\n                name: activeUsersData.graph.labelName.enrolments,\n                data: activeUsersData.graph.data.enrolments,\n            }, {\n                name: activeUsersData.graph.labelName.completionRate,\n                data: activeUsersData.graph.data.completionRate,\n            }];\n            data.xaxis.categories = activeUsersData.graph.labels;\n            data.chart.toolbar.show = activeUsersData.graph.labels.length > 29;\n            data.chart.zoom.enabled = activeUsersData.graph.labels.length > 29;\n        } catch (error) {\n            data.series = [];\n            data.xaxis.categories = [];\n            data.chart.toolbar.show = false;\n            data.chart.zoom.enabled = false;\n        }\n        return data;\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     * @param {String}   currentDate Current active date\n     */\n    function init(invalidUser, currentDate) {\n\n        // Assigning current date.\n        filter = currentDate;\n\n        console.log('filter::::');\n        console.log(filter);\n\n        $(SELECTOR.FORMFILTER).val(filter);\n        // $(\"#userfilter .download-links input[name='filter']\").val(JSON.stringify(filter));\n\n        /* Custom Dropdown hide and show */\n        activeUsersData = CFG.getActiveUsersBlock();\n\n        // If course progress block is there\n        if (activeUsersData) {\n            /* Call function to initialize the active users block graph */\n            getActiveUsersBlockData()\n        }\n\n        initEvents();\n    }\n\n    /**\n     * Download grade block's graph in specified format.\n     *\n     * @param {String} format   Format of downloading file\n     * @param {String} filename Name of file\n     * @param {String} data     Exported data\n     */\n    function download(format, filename, response) {\n        let data = Object.assign({}, lineChartDefault);\n        data.series = [{\n            name: M.util.get_string('activeusers', 'local_edwiserreports'),\n            data: response.data.activeUsers,\n        }, {\n            name: M.util.get_string('courseenrolment', 'local_edwiserreports'),\n            data: response.data.enrolments,\n        }, {\n            name: M.util.get_string('coursecompletionrate', 'local_edwiserreports'),\n            data: response.data.completionRate,\n        }];\n        data.xaxis.categories = response.dates.map(date => date * 86400000);\n        data.chart.toolbar.show = false;\n        data.tooltip = {\n            enabled: false\n        };\n        data.chart.animations = {\n            enabled: false\n        };\n        activeUsersGraph = new ApexCharts($(\"#apex-chart-active-users\").get(0), data);\n        activeUsersGraph.render();\n\n        switch (format) {\n            case 'pdfimage':\n                let graphElement = $(\"#apex-chart-active-users\");\n                common.exportGraphPDF(activeUsersGraph, filter, graphElement.width(), graphElement.height(), filename);\n                break;\n            case 'jpeg':\n                common.exportGraphJPEG(activeUsersGraph, filter, filename);\n                break;\n            case 'png':\n                common.exportGraphPNG(activeUsersGraph, filter, filename);\n                break;\n            case 'svg':\n                common.exportGraphSVG(activeUsersGraph, filter, filename);\n                break;\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init,\n        download: download\n    };\n});\n"],"file":"activeusers.min.js"}
