{"version":3,"sources":["blocks/timespentonsite.js"],"names":["define","$","ApexCharts","common","CFG","EdwiserReportsEvents","blockName","SELECTOR","PANEL","INSIGHT","FORMFILTER","GRAPH","STUDENT","PROMISE","GET_TIMESPENTONSITE","filter","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","lang","attr","JSON","stringify","date","student","dir","rtl","chart","lineChartDefault","series","id","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","markers","size","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","stroke","curve","width","grid","borderColor","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","horizontalAlign","itemMargin","horizontal","vertical","dataLabels","colors","getColorTheme","noData","text","util","get_string","renderGraph","graph","destroy","get","render","setTimeout","loader","hide","loadGraph","invalidUser","exportFilter","Object","keys","map","key","join","find","val","done","response","assign","name","timespent","yaxis","timeFormatter","dates","length","insight","value","dataPointIndex","short","replaceAll","details","fail","exception","init","currentDate","dateChange","on","concat","parseInt","this","document","EXPORTGRAPHPDF","graphElement","exportGraphPDF","EXPORTGRAPHJPEG","exportGraphJPEG","EXPORTGRAPHPNG","exportGraphPNG","EXPORTGRAPHSVG","exportGraphSVG","select2","format","filename","animations"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Block service call and rendering defined in this file.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine('local_edwiserreports/blocks/timespentonsite', [\n    'jquery',\n    'local_edwiserreports/vendor/apexcharts',\n    'local_edwiserreports/common',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/events'\n], function(\n    $,\n    ApexCharts,\n    common,\n    CFG,\n    EdwiserReportsEvents\n) {\n\n    /**\n     * Block name.\n     */\n    let blockName = 'timespentonsiteblock';\n\n    /**\n     * DOM element selectors list.\n     */\n    let SELECTOR = {\n        PANEL: '#timespentonsiteblock',\n        INSIGHT: '#timespentonsiteblock .insight',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        GRAPH: '#apex-chart-timespentonsite-block',\n        STUDENT: '#timespentonsite-student-select'\n    };\n\n    let PROMISE = {\n        /**\n         * Get timespent on site using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONSITE: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_timespentonsite_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    lang: $('html').attr('lang'),\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    };\n\n    /**\n     * Filter for ajax.\n     */\n    let filter = {\n        date: null,\n        student: 0,\n        dir: $('html').attr('dir'),\n        rtl: $('html').attr('dir') == 'rtl' ? 1 : 0\n    };\n\n    /**\n     * Chart object.\n     */\n    let chart = null;\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            id: 'timespentonsite',\n            type: 'line',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        markers: {\n            size: 0\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n            offsetY: '-20',\n            itemMargin: {\n                horizontal: 10,\n                vertical: 0\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: [CFG.getColorTheme()[2]],\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Render graph.\n     * @param {DOM} graph Graph element\n     * @param {Object} data Graph data\n     */\n    function renderGraph(graph, data) {\n        if (chart !== null) {\n            chart.destroy();\n        }\n        chart = new ApexCharts(graph.get(0), data);\n        chart.render();\n        setTimeout(function() {\n            common.loader.hide(SELECTOR.PANEL);\n        }, 1000);\n    }\n\n    /**\n     * Load graph\n     */\n    function loadGraph(invalidUser) {\n        common.loader.show(SELECTOR.PANEL);\n\n        // Set export filter to download link.\n        let exportFilter = Object.keys(filter).map(key => filter[key]).join(\"-\");\n        $(SELECTOR.PANEL).find(SELECTOR.FORMFILTER).val(exportFilter);\n\n        PROMISE.GET_TIMESPENTONSITE(filter)\n            .done(function(response) {\n                let data = Object.assign({}, lineChartDefault);\n                data.series = [{\n                    name: M.util.get_string('timespentonsite', 'local_edwiserreports'),\n                    data: response.timespent,\n                }];\n                data.yaxis = {\n                    labels: {\n                        formatter: common.timeFormatter\n                    }\n                };\n                data.xaxis.categories = response.dates.map(date => date * 86400000);\n                data.chart.toolbar.show = response.dates.length > 29;\n                data.chart.zoom.enabled = response.dates.length > 29;\n                data.tooltip.y.title.formatter = () => {\n                    return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                }\n                response.insight.insight.value = common.timeFormatter(response.insight.insight.value, {\n                    dataPointIndex: 0,\n                    short: true\n                }, filter.rtl).replaceAll(',', ' ');\n                response.insight.details.data[0].value = common.timeFormatter(response.insight.details.data[0].value, {\n                    dataPointIndex: 0\n                }, filter.rtl);\n                common.insight(SELECTOR.INSIGHT, response.insight);\n                renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n            }).fail(function(exception) {\n                common.loader.hide(SELECTOR.PANEL);\n            });\n    }\n\n    /**\n     * Initialize events.\n     */\n    function initEvents() {\n        // Date selector listener.\n        common.dateChange(function(date) {\n            filter.date = date;\n            loadGraph();\n        });\n\n        // Student selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.STUDENT}`, function() {\n            filter.student = parseInt($(this).val());\n\n            // Load graph data.\n            loadGraph();\n        });\n\n        // Export to PDF.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPDF + '-' + blockName, function() {\n            let graphElement = $(SELECTOR.PANEL).find('.apexcharts-canvas');\n            common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height());\n        });\n\n        // Export to JPEG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHJPEG + '-' + blockName, function() {\n            common.exportGraphJPEG(chart, filter);\n        });\n\n        // Export to PNG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHPNG + '-' + blockName, function() {\n            common.exportGraphPNG(chart, filter);\n        });\n\n        // Export to SVG.\n        $(document).on(EdwiserReportsEvents.EXPORTGRAPHSVG + '-' + blockName, function() {\n            common.exportGraphSVG(chart, filter);\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     * @param {String}   currentDate Current active date\n     */\n    function init(invalidUser, currentDate) {\n\n        // Assigning current date.\n        filter.date = currentDate;\n\n        if (!$(SELECTOR.PANEL).length) {\n            return;\n        }\n\n        loadGraph(invalidUser);\n\n        initEvents();\n\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n    }\n\n    /**\n     * Download grade block's graph in specified format.\n     *\n     * @param {String} format   Format of downloading file\n     * @param {String} filename Name of file\n     * @param {String} data     Exported data\n     */\n    function download(format, filename, response) {\n        let data = Object.assign({}, lineChartDefault);\n        data.series = [{\n            name: M.util.get_string('timespentonsite', 'local_edwiserreports'),\n            data: response.timespent,\n        }];\n        data.yaxis = {\n            labels: {\n                formatter: common.timeFormatter\n            }\n        };\n        data.xaxis.categories = response.dates.map(date => date * 86400000);\n        data.chart.toolbar.show = false;\n        data.tooltip = {\n            enabled: false\n        };\n        data.chart.animations = {\n            enabled: false\n        };\n        renderGraph($(SELECTOR.PANEL).find(SELECTOR.GRAPH), data);\n\n        switch (format) {\n            case 'pdfimage':\n                let graphElement = $(SELECTOR.PANEL).find(SELECTOR.GRAPH);\n                common.exportGraphPDF(chart, filter, graphElement.width(), graphElement.height(), filename);\n                break;\n            case 'jpeg':\n                common.exportGraphJPEG(chart, filter, filename);\n                break;\n            case 'png':\n                common.exportGraphPNG(chart, filter, filename);\n                break;\n            case 'svg':\n                common.exportGraphSVG(chart, filter, filename);\n                break;\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init,\n        download: download\n    };\n});\n"],"file":"timespentonsite.min.js"}
