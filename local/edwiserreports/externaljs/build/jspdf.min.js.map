{"version":3,"sources":["jspdf.js"],"names":["_typeof2","obj","Symbol","iterator","constructor","prototype","define","$","jsPDFAPI","fontName","fontSize","fontStyle","headerFunction","lastCellPos","pages","setLastCellPosition","getLastCellPosition","NO_MARGINS","jsNamesObj","jsJsObj","text","API","getCharWidthsArray","getArraySum","getStringUnitWidth","splitLongWord","splitParagraphIntoLines","jsPDF","global","pdfVersion","pageFormats","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","dl","letter","government-letter","legal","junior-legal","ledger","tabloid","credit-card","PubSub","context","topics","this","subscribe","topic","callback","once","hasOwnProperty","id","Math","random","toString","unsubscribe","token","publish","args","Array","slice","call","arguments","idr","sub","apply","ex","console","error","message","push","length","forEach","orientation","unit","format","compressPdf","options","compress","toLowerCase","activeFontKey","k","tmp","currentPage","pageWidth","pageHeight","pageMode","zoomMode","layoutMode","fn","Uint8Array","textColor","drawColor","activeFontSize","lineHeightProportion","lineHeight","lineWidth","objectNumber","outToPages","offsets","fonts","fontmap","page","pagesContext","pagedim","content","additionalObjects","lineCapID","lineJoinID","content_length","documentProperties","title","subject","author","keywords","creator","events","f2","number","toFixed","f3","padd2","parseInt","out","string","newObject","putStream","str","putResourceDictionary","fontKey","putResources","font","PostScriptName","encoding","putFonts","addToFontDictionary","addFont","Object","keys","metadata","pdfEscape","flags","i","l","sourceEncoding","encodingBlock","outputEncoding","newtext","isUnicode","ch","bch","autoencode","codePages","charCodeAt","String","fromCharCode","join","undefined","noBOM","Error","to8bitStream","replace","_addPage","width","height","isArray","substr","Number","_setPage","pageNumber","n","_getFont","key","e","buildDocument","p","arr","deflater","adler32","adler32cs","wPt","hPt","pageObjectNumbers","from","Deflater","append","flush","set","kids","putPages","objId","putAdditionalObjects","version","toUpperCase","created","Date","tzoffset","getTimezoneOffset","tzsign","tzhour","floor","abs","tzmin","tzstr","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","putInfo","pcn","putCatalog","o","offset","getStyle","style","op","getArrayBuffer","data","len","ab","ArrayBuffer","u8","getBlob","Blob","type","_output","datauri","btoa","navigator","getUserMedia","URL","createObjectURL","output","saveAs","unload","setTimeout","nW","open","safari","document","location","href","foo","stack","indexOf","split","m","alert","bar","plugin","internal","getFont","getFontSize","getLineHeight","write","string1","getCoordinateString","value","getVerticalCoordinateString","collections","newAdditionalObject","newObjectDeferred","newObjectDeferredBegin","oid","scaleFactor","pageSize","getNumberOfPages","getPageInfo","pageNumberOneBased","pageContext","getCurrentPageInfo","getPDFVersion","addPage","setPage","insertPage","beforePage","movePage","targetPage","tmpPages","tmpPagedim","tmpPagesContext","deletePage","splice","setDisplayMode","zoom","layout","pmode","x","y","angle","align","ESC","s","TabLen","match","xtra","mode","PI","c","cos","sin","curY","strokeOption","stroke","lastTextWasStroke","_runningPageHeight","sa","concat","da","shift","linesLeft","ceil","left","prevX","maxLineLength","leading","lineWidths","map","v","max","delta","lstext","spacing","line","x1","y1","x2","y2","lines","clip","clip_fixed","fillRule","scale","closed","scalex","scaley","leg","x3","y3","x4","y4","rect","w","h","triangle","roundedRect","rx","ry","MyArc","SQRT2","ellipse","lx","ly","circle","r","setProperties","properties","property","setFontSize","size","setFont","setFontStyle","setFontType","getFontList","list","postScriptName","setLineWidth","setDrawColor","ch1","ch2","ch3","ch4","color","setFillColor","a","setTextColor","g","b","test","hex","CapJoinStyles","0","butt","but","miter","1","round","rounded","2","projecting","project","square","bevel","setLineCap","setLineJoin","save","filename","newEvents","eventname","handler_and_args","standardFonts","parts","dictionary","addFonts","amd","module","exports","self","window","clone","_DrillForContent","FontNameDB","FontStyleMap","TextAlignMap","FontWeightMap","FloatMap","ClearMap","GetCSS","PurgeWhiteSpace","Renderer","ResolveFont","ResolveUnitedNumber","UnitedNumberMap","elementHandledElsewhere","images","loadImgs","checkForFooter","process","tableToJson","Clone","array","fragment","lTrimmed","rTrimmed","trailingSpace","trimLeft","trimRight","css_font_family_string","name","part","trim","css_line_height_string","isNaN","xx-small","x-small","small","medium","large","x-large","xx-large","auto","parseFloat","element","css","computedCSSElement","el","compCSS","defaultView","getComputedStyle","currentStyle","prop","charAt","renderer","elementHandlers","handlers","isHandledElsewhere","nodeName","table","headers","j","rowData","tableRow","table_with","cell","rows","cells","clientWidth","textContent","prompt","pdf","SkipNode","SCRIPT","STYLE","NOSCRIPT","OBJECT","EMBED","SELECT","listCount","cn","cns","fragmentCSS","isBlock","table2json","cb","childNodes","display","setBlockBoundary","setBlockStyle","_typeof","executeWatchFunctions","nodeType","header","oldMarginTop","margins_doc","top","pageInfo","nodeValue","parentNode","offsetX","offsetY","radius","ownerDocument","body","compareDocumentPosition","addText","cached_image","url","getAttribute","sHashCode","bottom","imagesCSS","imageX","fontToUnitRatio","additionalSpaceLeft","additionalSpaceRight","additionalSpaceTop","additionalSpaceBottom","settings","addImage","watchFunctions","diffX","thresholdY","diffWidth","bind","yPositionAfterFloating","clear","autoSize","printHeaders","margins","temp","outY","found_images","imgs","getElementsByTagName","done","loadImage","img","Image","crossOrigin","onerror","onload","complete","src","hash","elem","footer","oldOut","oldY","footerHeight","renderFooter","oldPosition","spans","className","innerHTML","putTotalPages","$frame","$hiddendiv","framename","now","createElement","cssText","appendChild","frames","writeln","close","dispose","init","paragraph","ready","ret","narray","splitFragmentsIntoLines","fragments","styles","currentLineLength","ff","fontMetrics","fontMetricsCache","fragmentChopped","fragmentLength","fragmentSpecificMetrics","fs","Unicode","widths","kerning","textIndent","splitTextToSize","space","countSpaces","RenderTextFragment","maxLineHeight","pdfTextColor","getPdfColor","lastTextColor","exec","CssColors","colorNameToHex","substring","renderParagraph","blockstyle","paragraphspacing_after","paragraphspacing_before","priorblockstyle","priorMarginBottom","currentIndent","indentMove","wantedIndent","localFragments","localStyles","localLine","helvetica","sans-serif","times new roman","serif","times","monospace","courier","100","200","300","400","500","600","700","800","900","normal","bold","bolder","lighter","italic","oblique","right","center","justify","none","both","fromHTML","HTML","ln","setHeaderFunction","func","getTextDimensions","txt","dimensions","table_font_size","fontWeight","innerText","offsetWidth","offsetHeight","removeChild","cellAddPage","cellInitialize","curCell","pgAdded","tableHeaderRow","printHeaderRow","margin","printingHeaderRow","currentLine","textSize","arrayMax","comparisonFn","item","config","cln","columnData","column","model","jln","headerNames","headerPrompts","columnMatrix","columnWidths","columnMinWidths","tableHeaderConfigs","lnMod","rec","calculateLineHeight","setTableHeaderRow","table_x","table_y","lineNumber","new_page","tableHeaderCell","tmpArray","position","tempHeaderConf","addJS","outline","root","children","render","createNamedDestinations","totalPages","dests","info","names2Oid","makeRef","namesOid","add","parent","ctx","val","genIds_r","renderRoot","renderItems","node","objStart","count_r","count","objEnd","makeString","hasCompressionJS","inst","compressBytes","bytes","lineLength","colorsPerPixel","compression","level","filter_method","filterUp","image_compression","FAST","filterSub","MEDIUM","filterAverage","SLOW","filterPaeth","applyPngFilterMethod","createZlibHeader","checksum","deflate","cBytes","cmpd","arrayBufferToBinaryString","cmf","LOG2E","log","hdr","min","param","tlen","s1","adler","s2","prevLine","result","filter_methods","getFilterMethods","subarray","results","ind","getIndexOfSmallestSum","filterNone","unshift","up","upLeft","paeth","paethPredictor","pLeft","pUp","pUpLeft","arrays","sum","absSum","processPNG","imageData","imageIndex","alias","dataAsBinaryString","dp","trns","colors","pal","smask","colorSpace","color_spaces","DEVICE_RGB","decode","FLATE_DECODE","bpc","isArrayBuffer","isArrayBufferView","PNG","FlateStream","imgData","bits","colorType","pbl","pixels","pixelBitlength","Uint32Array","decodePixels","buffer","Uint16Array","alphaData","pDiff","pixel","hasColors","NONE","INDEXED","palette","transparency","indexed","trans","total","predictor","getPredictorFromCompression","createImageInfo","imageFileTypeHeaders","TIFF","JPEG","JPEG2000","GIF87a","GIF89a","BMP","getImageFileTypeByImageData","fallbackFormat","headerSchemata","compareResult","fileType","warn","putImage","DEVICE_CMYK","cs","f","putResourcesCallback","putXObjectsDictCallback","image","isImageTypeSupported","isDOMElement","object","createDataURIFromElement","hasAttribute","canvas","clientHeight","getContext","drawImage","toDataURL","checkImagesForAlias","cached_info","DEVICE_GRAY","CAL_GREY","CAL_RGB","LAB","ICC_BASED","PATTERN","SEPARATION","DEVICE_N","DCT_DECODE","LZW_DECODE","JPX_DECODE","JBIG2_DECODE","ASCII85_DECODE","ASCII_HEX_DECODE","RUN_LENGTH_DECODE","CCITT_FAX_DECODE","reduce","isString","validateStringAsBase64","possibleBase64String","extractInfoFromBase64DataURI","dataURI","supportsArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Int32Array","Float32Array","Float64Array","binaryStringToUint8Array","binary_string","atob","arrayBufferToBase64","TextDecoder","decoder","slicesCount","byteLength","arrayBuffer","chunk","base64","encodings","byteRemainder","mainLength","wd","ht","rotation","tmpImageData","convertStringToImageData","loadImageFile","getImageIndex","checkCompressValue","index","dims","coord","vcoord","f4","rotationTransformationMatrix","stringData","base64Info","readBytes","processJPEG","filter","blockLength","getJpegSize","block","pos","numcomponents","getJpegSizeFromBytes","processJPG","path","sync","protocol","req","XMLHttpRequest","byteArray","sanitizeUnicode","dataLength","StringFromCharCode","overrideMimeType","responseText","send","status","xhrMethod","getImageProperties","compressionMode","bitsPerComponent","autoPrint","refAutoPrintTag","char_code","widthsFractionOf","fof","kerningFractionOf","prior_char_code","default_char_width","word","widths_array","firstLineMaxLen","maxLen","answer","workingLen","startOfLine","maxlen","lineIndent","line_length","separator_length","current_word_length","words","spaceCharWidth","pad","wrds","wrd","idx","force","pop","postProcess","paragraphs","fsize","newOptions","fontUnit_maxLen","uncompress","mapping","stringparts","parent_key_pair","sign","activeobject","parentchain","keyparts","valueparts","datalen","undef","WinAnsiEncoding","Courier","Courier-Bold","Courier-BoldOblique","Courier-Oblique","Helvetica","Helvetica-Bold","Helvetica-BoldOblique","Helvetica-Oblique","Times-Roman","Times-Bold","Times-BoldItalic","Times-Italic","metrics","unicode_section","view","userAgent","doc","get_URL","webkitURL","save_link","createElementNS","can_use_save_link","is_safari","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","setImmediate","fs_min_size","revoke","file","revoker","revokeObjectURL","remove","chrome","dispatch","filesaver","event_types","event","listener","auto_bom","blob","FileSaver","no_auto_bom","object_url","target_view","blob_changed","dispatch_all","fs_error","FileReader","reader","onloadend","base64Data","search","readyState","DONE","readAsDataURL","INIT","abortable","create_if_not_found","create","exclusive","download","MouseEvent","dispatchEvent","webkitSlice","TEMPORARY","getDirectory","dir","getFile","createWriter","writer","onwriteend","toURL","code","ABORT_ERR","abort","WRITING","NOT_FOUND_ERR","FS_proto","msSaveOrOpenBlob","onwritestart","onprogress","onwrite","onabort","_colorsTable","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","MAX_BITS","D_CODES","BL_CODES","LITERALS","L_CODES","HEAP_SIZE","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","Buf_size","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_DEFAULT_STRATEGY","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","_dist_code","Tree","that","bi_reverse","res","build_tree","tree","dyn_tree","stree","stat_desc","static_tree","elems","max_code","heap_len","heap_max","heap","depth","opt_len","static_len","pqdownheap","xbits","extra","extra_bits","base","extra_base","max_length","overflow","bl_count","gen_bitlen","next_code","gen_codes","StaticTree","_length_code","base_length","base_dist","d_code","dist","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","static_l_desc","static_d_desc","static_bl_desc","MAX_MEM_LEVEL","DEF_MEM_LEVEL","Config","good_length","max_lazy","nice_length","max_chain","STORED","config_table","z_errmsg","NeedMore","BlockDone","FinishStarted","FinishDone","PRESET_DICT","INIT_STATE","BUSY_STATE","FINISH_STATE","Z_DEFLATED","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","smaller","tn2","tm2","Deflate","strm","pending_buf_size","last_flush","w_size","w_bits","w_mask","window_size","prev","head","ins_h","hash_size","hash_bits","hash_mask","hash_shift","block_start","match_length","prev_match","match_available","strstart","match_start","lookahead","prev_length","max_chain_length","max_lazy_match","strategy","good_match","nice_match","dyn_ltree","dyn_dtree","bl_tree","l_buf","lit_bufsize","last_lit","d_buf","matches","last_eob_len","bi_buf","bi_valid","l_desc","d_desc","bl_desc","init_block","scan_tree","curlen","prevlen","nextlen","max_count","min_count","put_byte","pending_buf","pending","put_short","send_bits","send_code","send_tree","bi_flush","_tr_tally","lc","out_length","in_length","dcode","compress_block","ltree","dtree","bi_windup","_tr_stored_block","buf","stored_len","eof","copy_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","flush_block_only","flush_pending","fill_window","more","avail_in","read_buf","longest_match","cur_match","chain_length","scan","best_len","limit","_nice_match","wmask","strend","scan_end1","scan_end","deflateReset","total_in","total_out","msg","pending_out","lm_init","deflateInit","_level","_method","memLevel","_strategy","dstate","deflateEnd","deflateParams","err","deflateSetDictionary","dictLength","_strm","level_flags","old_flush","bstate","next_out","next_in","avail_out","max_start","max_block_size","deflate_stored","bflush","hash_head","deflate_fast","max_insert","deflate_slow","ZStream","next_in_index","next_out_index","start","z","buffers","lastIndex","bufferIndex","bufferSize","makeImage","scratchCanvas","scratchCtx","chunkSize","palLen","delayDen","delayNum","frame","section","palShort","_i","_j","_ref","animation","readUInt32","_results","compressionMethod","filterMethod","interlaceMethod","numFrames","numPlays","Infinity","read","xOffset","yOffset","readUInt16","delay","disposeOp","blendOp","grayscale","rgb","hasAlphaChannel","load","xhr","responseType","png","response","mozResponseArrayBuffer","abyte","col","pa","pb","pc","pixelBytes","row","scanlineLength","upper","upperLeft","_k","_l","_m","getBytes","decodePalette","_ref1","copyToImageData","alpha","input","_decodedPalette","clearRect","putImageData","decodeFrames","_len","createImageData","renderFrame","animate","_doFrame","frameNumber","_this","_timeout","stopAnimation","clearTimeout","_png","DecodeStream","bufferLength","ensureBuffer","requested","current","buffer2","getByte","readBlock","end","bufEnd","lookChar","getChar","makeSubStream","dict","Stream","skip","reset","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","codeSize","codeBuf","bytesPos","getCode","codes","codeLen","codeVal","generateHuffmanTable","lengths","code2","t","repeat","stream","what","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","code1","blockLen","check","flg"],"mappings":"AAAA,aAEA,SAASA,SAASC,GAAkC,OAAOD,SAAW,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAiBA,GAE5UK,OAAO,oCAAqC,CAAC,UAAW,SAAUC,GA0DhE,IA+3FWC,EAKLC,EACFC,EACAC,EAGAC,EACAC,EAOAC,EACAC,EASAC,EAGAC,EAoWEC,EAAYC,EAASC,EAqiDhBC,EAYLC,EAyBAC,EAqBAC,EAOAC,EAkCAC,EA14JFC,EAAQ,SAAUC,GAGpB,IAAIC,EAAa,MACfC,EAAc,CAEZC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,OAAQ,SACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,MAAQ,QACfC,GAAM,CAAC,OAAQ,OACfC,IAAO,CAAC,KAAO,QACfC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,OAAQ,SACfC,GAAM,CAAC,MAAQ,QACfC,GAAM,CAAC,OAAQ,OACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,IAAO,CAAC,MAAO,QACfC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,QAAS,SAChBC,GAAM,CAAC,OAAQ,SACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,GAAM,CAAC,OAAQ,QACfC,IAAO,CAAC,MAAO,QACfC,GAAM,CAAC,OAAQ,QACfC,OAAU,CAAC,IAAK,KAChBC,oBAAqB,CAAC,IAAK,KAC3BC,MAAS,CAAC,IAAK,MACfC,eAAgB,CAAC,IAAK,KACtBC,OAAU,CAAC,KAAM,KACjBC,QAAW,CAAC,IAAK,MACjBC,cAAe,CAAC,IAAK,MAYzB,SAASC,EAAOC,GACd,IAAIC,EAAS,GACbC,KAAKC,UAAY,SAAUC,EAAOC,EAAUC,GAC1C,GAAwB,mBAAbD,EACT,OAAO,EAEJJ,EAAOM,eAAeH,KACzBH,EAAOG,GAAS,IAElB,IAAII,EAAKC,KAAKC,SAASC,SAAS,IAEhC,OADAV,EAAOG,GAAOI,GAAM,CAACH,IAAYC,GAC1BE,GAETN,KAAKU,YAAc,SAAUC,GAC3B,IAAK,IAAIT,KAASH,EAChB,GAAIA,EAAOG,GAAOS,GAEhB,cADOZ,EAAOG,GAAOS,IACd,EAGX,OAAO,GAETX,KAAKY,QAAU,SAAUV,GACvB,GAAIH,EAAOM,eAAeH,GAAQ,CAChC,IAAIW,EAAOC,MAAMpF,UAAUqF,MAAMC,KAAKC,UAAW,GAC/CC,EAAM,GACR,IAAK,IAAIZ,KAAMP,EAAOG,GAAQ,CAC5B,IAAIiB,EAAMpB,EAAOG,GAAOI,GACxB,IACEa,EAAI,GAAGC,MAAMtB,EAASe,GACtB,MAAOQ,GACHpE,EAAOqE,SACTA,QAAQC,MAAM,qBAAsBF,EAAGG,QAASH,GAGhDF,EAAI,IAAID,EAAIO,KAAKnB,GAEnBY,EAAIQ,QAAQR,EAAIS,QAAQ3B,KAAKU,eASvC,SAAS1D,EAAM4E,EAAaC,EAAMC,EAAQC,GACxC,IAAIC,EAAU,GACgB,WAA1B3G,SAASuG,KAEXA,GADAI,EAAUJ,GACYA,YACtBC,EAAOG,EAAQH,MAAQA,EACvBC,EAASE,EAAQF,QAAUA,EAC3BC,EAAcC,EAAQC,UAAYD,EAAQD,aAAeA,GAI3DF,EAAOA,GAAQ,KACfC,EAASA,GAAU,KACnBF,GAAe,IAAMA,GAAe,MAAMM,eAClB,GAAKJ,GAAQI,cAArC,IAkBEC,EAEAC,EAEAC,EAEAC,EAUAC,EACAC,EACAC,EACAC,EACAC,EAqQ2BC,EA1S3BX,IAAaF,GAAqC,mBAAfc,WACnCC,EAAYd,EAAQc,WAAa,MACjCC,EAAYf,EAAQe,WAAa,MACjCC,EAAiBhB,EAAQjG,UAAY,GACrCkH,EAAuBjB,EAAQkB,YAAc,KAC7CC,EAAYnB,EAAQmB,WAAa,QAEjCC,EAAe,EAEfC,GAAa,EAEbC,EAAU,GAEVC,EAAQ,GAERC,EAAU,GAOVC,EAAO,EAEPtH,EAAQ,GACRuH,EAAe,GAEfC,EAAU,GACVC,EAAU,GACVC,EAAoB,GACpBC,EAAY,EACZC,EAAa,EACbC,EAAiB,EAMjBC,EAAqB,CACnBC,MAAS,GACTC,QAAW,GACXC,OAAU,GACVC,SAAY,GACZC,QAAW,IAEb5H,EAAM,GACN6H,EAAS,IAAI1E,EAAOnD,GAIpB8H,EAAK,SAAYC,GACf,OAAOA,EAAOC,QAAQ,IAExBC,EAAK,SAAYF,GACf,OAAOA,EAAOC,QAAQ,IAExBE,EAAQ,SAAeH,GACrB,OAAQ,IAAMI,SAASJ,IAAS1D,OAAO,IAEzC+D,EAAM,SAAaC,GACb1B,EAEFlH,EAAMmG,GAAab,KAAKsD,IAGxBf,GAAkBe,EAAOrD,OAAS,EAClCkC,EAAQnC,KAAKsD,KAGjBC,EAAY,WAKV,OAFA1B,IADAF,GACwBY,EACxBc,EAAI1B,EAAe,UACZA,GA2BT6B,EAAY,SAAmBC,GAC7BJ,EAAI,UACJA,EAAII,GACJJ,EAAI,cA8FNK,EAAwB,WAKtB,IAAK,IAAIC,KAJTN,EAAI,iDACJA,EAAI,YAGgBvB,EACdA,EAAMlD,eAAe+E,IACvBN,EAAI,IAAMM,EAAU,IAAM7B,EAAM6B,GAAShC,aAAe,QAG5D0B,EAAI,MACJA,EAAI,eAbJP,EAAO3D,QAAQ,kBAefkE,EAAI,OAENO,EAAe,YA1BJ,WACT,IAAK,IAAID,KAAW7B,EACdA,EAAMlD,eAAe+E,MAXFE,EAYb/B,EAAM6B,IAXbhC,aAAe4B,IACpBF,EAAI,eAAiBQ,EAAKC,eAAiB,cACd,iBAAlBD,EAAKE,UACdV,EAAI,aAAeQ,EAAKE,UAE1BV,EAAI,oBACJA,EAAI,WAPI,IAAiBQ,EAoCzBG,GACAlB,EAAO3D,QAAQ,gBAEf0C,EAAQ,GAAKU,EACbc,EAAI,WACJA,EAAI,MACJK,IACAL,EAAI,MACJA,EAAI,UACJP,EAAO3D,QAAQ,qBAejB8E,EAAsB,SAA6BN,EAAStJ,EAAUE,GAI/DwH,EAAQnD,eAAevE,KAC1B0H,EAAQ1H,GAAY,IAEtB0H,EAAQ1H,GAAUE,GAAaoJ,GAejCO,GAAU,SAAiBJ,EAAgBzJ,EAAUE,EAAWwJ,GAC9D,IAAIJ,EAAU,KAAOQ,OAAOC,KAAKtC,GAAO7B,OAAS,GAAGjB,SAAS,IAE3D6E,EAAO/B,EAAM6B,GAAW,CACtB9E,GAAM8E,EACNG,eAAkBA,EAClBzJ,SAAYA,EACZE,UAAaA,EACbwJ,SAAYA,EACZM,SAAY,IAIhB,OAFAJ,EAAoBN,EAAStJ,EAAUE,GACvCuI,EAAO3D,QAAQ,UAAW0E,GACnBF,GA4KTW,GAAY,SAAmBtJ,EAAMuJ,GAcnC,OA9Ia,SAAsBvJ,EAAMuJ,GAiDzC,IAAIC,EAAGC,EAAGC,EAAgBC,EAAeC,EAAgBC,EAASC,EAAWC,EAAIC,EAcjF,GAZAN,GADAH,EAAQA,GAAS,IACMG,gBAAkB,UACzCE,EAAiBL,EAAMK,gBAWlBL,EAAMU,YAAcL,IAAmB9C,EAAMpB,GAAe2D,UAAYvC,EAAMpB,GAAe2D,SAASK,IAAmB5C,EAAMpB,GAAe2D,SAASK,GAAgBX,WAC1KY,EAAgB7C,EAAMpB,GAAe2D,SAASK,GAAgBX,UAGzDa,GAAkB9C,EAAMpB,GAAeqD,WAC1Ca,EAAiB9C,EAAMpB,GAAeqD,WAInCa,GAAkBD,EAAcO,YACnCN,EAAiBD,EAAcO,UAAU,IAGb,iBAAnBN,IACTA,EAAiBD,EAAcC,IAK7BA,GAAgB,CAGlB,IAFAE,GAAY,EACZD,EAAU,GACLL,EAAI,EAAGC,EAAIzJ,EAAKiF,OAAQuE,EAAIC,EAAGD,KAClCO,EAAKH,EAAe5J,EAAKmK,WAAWX,KAElCK,EAAQ7E,KAAKoF,OAAOC,aAAaN,IAEjCF,EAAQ7E,KAAKhF,EAAKwJ,IAKhBK,EAAQL,GAAGW,WAAW,IAAM,IAE9BL,GAAY,GAGhB9J,EAAO6J,EAAQS,KAAK,IAKxB,IAFAd,EAAIxJ,EAAKiF,YAEYsF,IAAdT,GAAiC,IAANN,GAC5BxJ,EAAKmK,WAAWX,EAAI,IAAM,IAE5BM,GAAY,GAEdN,IAEF,IAAKM,EACH,OAAO9J,EAGT,IADA6J,EAAUN,EAAMiB,MAAQ,GAAK,CAAC,IAAK,KAC9BhB,EAAI,EAAGC,EAAIzJ,EAAKiF,OAAQuE,EAAIC,EAAGD,IAAK,CAGvC,IADAQ,GADAD,EAAK/J,EAAKmK,WAAWX,KACT,IACD,EAET,MAAM,IAAIiB,MAAM,yBAA2BjB,EAAI,eAAiBxJ,EAAO,qDAEzE6J,EAAQ7E,KAAKgF,GACbH,EAAQ7E,KAAK+E,GAAMC,GAAO,IAE5B,OAAOI,OAAOC,aAAa1F,WAAM4F,EAAWV,GAgBrCa,CAAa1K,EAAMuJ,GAAOoB,QAAQ,MAAO,QAAQA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,QAiH/FC,GAAW,YAtCC,SAAmBC,EAAOC,GAEpC,IAAI3F,EAAgC,iBAAX2F,GAAuBA,EAAOrF,cACvD,GAAqB,iBAAVoF,EAAoB,CAC7B,IAAIxF,EAASwF,EAAMpF,cACf/E,EAAYkD,eAAeyB,KAC7BwF,EAAQnK,EAAY2E,GAAQ,GAAKM,EACjCmF,EAASpK,EAAY2E,GAAQ,GAAKM,GAOtC,GAJItB,MAAM0G,QAAQF,KAChBC,EAASD,EAAM,GACfA,EAAQA,EAAM,IAEZ1F,EAAa,CACf,OAAQA,EAAY6F,OAAO,EAAG,IAC5B,IAAK,IACCF,EAASD,IAAO1F,EAAc,KAClC,MACF,IAAK,IACC0F,EAAQC,IAAQ3F,EAAc,KAGlB,MAAhBA,IACFS,EAAMiF,EACNA,EAAQC,EACRA,EAASlF,GAGbgB,GAAa,EACblH,IAAQsH,GAAQ,GAChBE,EAAQF,GAAQ,CACd6D,MAAOI,OAAOJ,IAAU/E,EACxBgF,OAAQG,OAAOH,IAAW/E,GAE5BkB,EAAaD,GAAQ,GACrBkE,GAASlE,KAGCrC,MAAMpB,KAAMiB,WAEtB6D,EAAIN,EAAGrB,EAAYf,GAAK,MAExB0C,EAAI/B,GAEc,IAAde,GACFgB,EAAIhB,EAAY,MAEC,IAAfC,GACFe,EAAIf,EAAa,MAEnBQ,EAAO3D,QAAQ,UAAW,CACxBgH,WAAYnE,KAchBkE,GAAW,SAAkBE,GACvBA,EAAI,GAAKA,GAAKpE,IAChBnB,EAAcuF,EACdtF,EAAYoB,EAAQkE,GAAGP,MACvB9E,EAAamB,EAAQkE,GAAGN,SAgB5BO,GAAW,SAAiBhM,EAAUE,GACpC,IAAI+L,EAMJ,OALAjM,OAAwBkL,IAAblL,EAAyBA,EAAWyH,EAAMpB,GAAerG,SACpEE,OAA0BgL,IAAdhL,EAA0BA,EAAYuH,EAAMpB,GAAenG,eACtDgL,IAAblL,IACFA,EAAWA,EAASoG,eAEdpG,GACN,IAAK,aACL,IAAK,UACL,IAAK,QACL,IAAK,YACHA,EAAW,YACX,MACF,IAAK,QACL,IAAK,YACL,IAAK,WACL,IAAK,UACHA,EAAW,UACX,MACF,IAAK,QACL,IAAK,UACL,IAAK,UACL,QACEA,EAAW,QAGf,IAEEiM,EAAMvE,EAAQ1H,GAAUE,GACxB,MAAOgM,IAST,OARKD,GAIQ,OADXA,EAAMvE,EAAe,MAAExH,MAErB+L,EAAMvE,EAAe,MAAU,QAG5BuE,GAETE,GAAgB,WACd5E,GAAa,EAEbD,EAAe,EACfY,EAAiB,EACjBJ,EAAU,GACVN,EAAU,GACVO,EAAoB,GAEpBU,EAAO3D,QAAQ,iBAGfkE,EAAI,QAAU5H,GAvjBL,WACT,IAAI2K,EACFK,EACAC,EACAlC,EACAmC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAoB,GAQtB,IAPAH,EAAYrL,EAAOqL,WAAatL,EAAMsL,UAClCrG,QAAiC,IAAdqG,IACrBrG,GAAW,GAKR4F,EAAI,EAAGA,GAAKpE,EAAMoE,IAAK,CAoB1B,GAnBAY,EAAkBhH,KAAKuD,KACvBuD,GAAOhG,EAAYoB,EAAQkE,GAAGP,OAASlF,EACvCoG,GAAOhG,EAAamB,EAAQkE,GAAGN,QAAUnF,EACzC0C,EAAI,iBACJA,EAAI,iBACJA,EAAI,oBACJA,EAAI,kBAAoBN,EAAG+D,GAAO,IAAM/D,EAAGgE,GAAO,KAElDjE,EAAO3D,QAAQ,UAAW,CACxBgH,WAAYC,EACZpE,KAAMtH,EAAM0L,KAEd/C,EAAI,cAAgB1B,EAAe,GAAK,QACxC0B,EAAI,MACJA,EAAI,UAGJoD,EAAI/L,EAAM0L,GAAGd,KAAK,MAClB/B,IACI/C,EAAU,CAGZ,IAFAkG,EAAM,GACNlC,EAAIiC,EAAExG,OACCuE,KACLkC,EAAIlC,GAAKiC,EAAEtB,WAAWX,GAExBoC,EAAUC,EAAUI,KAAKR,IACzBE,EAAW,IAAIO,EAAS,IACfC,OAAO,IAAI/F,WAAWsF,IAC/BD,EAAIE,EAASS,SACbV,EAAM,IAAItF,WAAWqF,EAAExG,OAAS,IAC5BoH,IAAI,IAAIjG,WAAW,CAAC,IAAK,OAAQsF,EAAIW,IAAIZ,EAAG,GAChDC,EAAIW,IAAI,IAAIjG,WAAW,CAAW,IAAVwF,EAAgBA,GAAW,EAAI,IAAMA,GAAW,GAAK,IAAMA,GAAW,GAAK,MAAQH,EAAExG,OAAS,GACtHwG,EAAIrB,OAAOC,aAAa1F,MAAM,KAAM+G,GACpCrD,EAAI,aAAeoD,EAAExG,OAAS,kCAE9BoD,EAAI,aAAeoD,EAAExG,OAAS,MAEhCuD,EAAUiD,GACVpD,EAAI,UAENxB,EAAQ,GAAKU,EACbc,EAAI,WACJA,EAAI,kBACJ,IAAIiE,EAAO,UACX,IAAK9C,EAAI,EAAGA,EAAIxC,EAAMwC,IACpB8C,GAAQN,EAAkBxC,GAAK,QAEjCnB,EAAIiE,EAAO,KACXjE,EAAI,UAAYrB,GAChBqB,EAAI,MACJA,EAAI,UACJP,EAAO3D,QAAQ,gBAkffoI,GAjcqB,WACrBzE,EAAO3D,QAAQ,wBACf,IAAK,IAAIqF,EAAI,EAAGA,EAAIpC,EAAkBnC,OAAQuE,IAAK,CACjD,IAAI3K,EAAMuI,EAAkBoC,GAC5B3C,EAAQhI,EAAI2N,OAASjF,EACrBc,EAAIxJ,EAAI2N,MAAQ,UAChBnE,EAAIxJ,EAAIsI,SAERkB,EAAI,UAEN1B,GAAgBS,EAAkBnC,OAClC6C,EAAO3D,QAAQ,4BA0bfsI,GACA7D,IAGAL,IACAF,EAAI,MA9NI,WAER,IAAK,IAAIiD,KADTjD,EAAI,oBAAsB9H,EAAMmM,QAAU,KAC1BlF,EACVA,EAAmB5D,eAAe0H,IAAQ9D,EAAmB8D,IAC/DjD,EAAI,IAAMiD,EAAIN,OAAO,EAAG,GAAG2B,cAAgBrB,EAAIN,OAAO,GAAK,KAAO1B,GAAU9B,EAAmB8D,IAAQ,KAG3G,IAAIsB,EAAU,IAAIC,KAChBC,EAAWF,EAAQG,oBACnBC,EAASF,EAAW,EAAI,IAAM,IAC9BG,EAASnJ,KAAKoJ,MAAMpJ,KAAKqJ,IAAIL,EAAW,KACxCM,EAAQtJ,KAAKqJ,IAAIL,EAAW,IAC5BO,EAAQ,CAACL,EAAQ7E,EAAM8E,GAAS,IAAK9E,EAAMiF,GAAQ,KAAK9C,KAAK,IAC/DjC,EAAI,CAAC,oBAAqBuE,EAAQU,cAAenF,EAAMyE,EAAQW,WAAa,GAAIpF,EAAMyE,EAAQY,WAAYrF,EAAMyE,EAAQa,YAAatF,EAAMyE,EAAQc,cAAevF,EAAMyE,EAAQe,cAAeN,EAAO,KAAK/C,KAAK,KAkNhNsD,GACAvF,EAAI,MACJA,EAAI,UAGJE,IACAF,EAAI,MAtNO,WAKX,OAJAA,EAAI,kBACJA,EAAI,gBAECpC,IAAUA,EAAW,aAClBA,GACN,IAAK,YACHoC,EAAI,kCACJ,MACF,IAAK,aACHA,EAAI,kCACJ,MACF,IAAK,WACHA,EAAI,4BACJ,MACF,IAAK,WACHA,EAAI,wCACJ,MACF,QACE,IAAIwF,EAAM,GAAK5H,EACoB,MAA/B4H,EAAI7C,OAAO6C,EAAI5I,OAAS,KAAYgB,EAAWmC,SAASnC,GAAY,KAChD,iBAAbA,GACToC,EAAI,qCAAuCN,EAAG9B,GAAY,KAIhE,OADKC,IAAYA,EAAa,cACtBA,GACN,IAAK,aACHmC,EAAI,0BACJ,MACF,IAAK,SACHA,EAAI,2BACJ,MACF,IAAK,MACL,IAAK,UACHA,EAAI,8BACJ,MACF,IAAK,WACHA,EAAI,+BAGJrC,GAQFqC,EAAI,cAAgBrC,GAEtB8B,EAAO3D,QAAQ,cAoKf2J,GACAzF,EAAI,MACJA,EAAI,UAGJ,IACEmB,EADEuE,EAAIxG,EAENkE,EAAI,aAIN,IAHApD,EAAI,QACJA,EAAI,MAAQ1B,EAAe,IAC3B0B,EAAIoD,EAAI,aACHjC,EAAI,EAAGA,GAAK7C,EAAc6C,IAAK,CAClC,IAAIwE,EAASnH,EAAQ2C,GAEnBnB,EADoB,mBAAX2F,GACJvC,EAAI5E,EAAQ2C,MAAMlF,OAAO,IAAM,aAE/BmH,EAAI5E,EAAQ2C,IAAIlF,OAAO,IAAM,aAYtC,OARA+D,EAAI,WACJA,EAAI,MAtLJA,EAAI,UAAY1B,EAAe,IAC/B0B,EAAI,SAAW1B,EAAe,QAC9B0B,EAAI,UAAY1B,EAAe,GAAK,QAsLpC0B,EAAI,MACJA,EAAI,aACJA,EAAI,GAAK0F,GACT1F,EAAI,SACJzB,GAAa,EACNO,EAAQmD,KAAK,OAEtB2D,GAAW,SAAkBC,GAE3B,IAAIC,EAAK,IAeT,MAdc,MAAVD,EACFC,EAAK,IACc,OAAVD,GAA4B,OAAVA,EAC3BC,EAAK,IACc,MAAVD,GAA2B,OAAVA,GAA4B,MAAVA,GAA2B,OAAVA,IAQ7DC,EAAKD,GAEAC,GAETC,GAAiB,WAKf,IAJA,IAAIC,EAAO7C,KACT8C,EAAMD,EAAKpJ,OACXsJ,EAAK,IAAIC,YAAYF,GACrBG,EAAK,IAAIrI,WAAWmI,GACfD,KACLG,EAAGH,GAAOD,EAAKlE,WAAWmE,GAE5B,OAAOC,GAETG,GAAU,WACR,OAAO,IAAIC,KAAK,CAACP,MAAmB,CAClCQ,KAAM,qBAeVC,KArd2B1I,EAqdZ,SAAUyI,EAAMrJ,GAC7B,IAAIuJ,EAAuC,YAA5B,GAAKF,GAAM5D,OAAO,EAAG,GAAkB,+BAAiC+D,KAAKvD,MAAmB,EAC/G,OAAQoD,GACN,UAAKrE,EACH,OAAOiB,KACT,IAAK,OACH,GAAIwD,UAAUC,oBACO1E,IAAf/J,EAAO0O,UAAoD3E,IAA/B/J,EAAO0O,IAAIC,iBACzC,OAAOlP,EAAImP,OAAO,oBAGtBC,EAAOX,KAAWnJ,GACW,mBAAlB8J,EAAOC,QACZ9O,EAAO+O,YACTA,WAAWF,EAAOC,OAAQ,KAG9B,MACF,IAAK,cACH,OAAOlB,KACT,IAAK,OACH,OAAOM,KACT,IAAK,UACL,IAAK,UAEH,OAAOlO,EAAO0O,KAAO1O,EAAO0O,IAAIC,gBAAgBT,YAAc,EAChE,IAAK,gBACL,IAAK,gBACH,OAAOI,EACT,IAAK,mBACH,IAAIU,EAAKhP,EAAOiP,KAAKX,GACrB,GAAIU,GAAwB,oBAAXE,OAAwB,OAAOF,EAElD,IAAK,UACL,IAAK,UACH,OAAOhP,EAAOmP,SAASC,SAASC,KAAOf,EACzC,QACE,MAAM,IAAIrE,MAAM,gBAAkBmE,EAAO,0BAzf1CkB,IAAM,WACP,IACE,OAAO3J,EAAGxB,MAAMpB,KAAMiB,WACtB,MAAO+G,GACP,IAAIwE,EAAQxE,EAAEwE,OAAS,IAClBA,EAAMC,QAAQ,UAASD,EAAQA,EAAME,MAAM,QAAQ,IACxD,IAAIC,EAAI,qBAAuBH,EAAME,MAAM,MAAM,GAAGA,MAAM,KAAK,GAAK,KAAO1E,EAAExG,QAC7E,IAAIvE,EAAOqE,QAIT,MAAM,IAAI4F,MAAMyF,GAHhB1P,EAAOqE,QAAQC,MAAMoL,EAAG3E,GACpB/K,EAAO2P,OAAOA,MAAMD,KAM9B/J,EAAG2J,IAAIM,IAAMjK,EACNA,EAAG2J,KA8ed,OAAQ1K,GACN,IAAK,KACHO,EAAI,EACJ,MACF,IAAK,KACHA,EAAI,GAAK,WACT,MACF,IAAK,KACHA,EAAI,GAAK,WACT,MACF,IAAK,KACHA,EAAI,GACJ,MACF,IAAK,KACHA,EAAI,GAAK,GACT,MACF,IAAK,KAGL,IAAK,KACHA,EAAI,GACJ,MACF,IAAK,KACHA,EAAI,EACJ,MACF,QACE,KAAM,iBAAmBP,EA26B7B,IAAK,IAAIiL,MAj6BTpQ,EAAIqQ,SAAW,CACbhH,UAAaA,GACb2E,SAAYA,GASZsC,QAAW,WACT,OAAOzJ,EAAMuE,GAAS1G,MAAM1E,EAAKuE,aAEnCgM,YAAe,WACb,OAAOjK,GAETkK,cAAiB,WACf,OAAOlK,EAAiBC,GAE1BkK,MAAS,SAAeC,GACtBtI,EAAyB,IAArB7D,UAAUS,OAAe0L,EAAUtM,MAAMpF,UAAUqL,KAAK/F,KAAKC,UAAW,OAE9EoM,oBAAuB,SAA6BC,GAClD,OAAO9I,EAAG8I,EAAQlL,IAEpBmL,4BAA+B,SAAqCD,GAClE,OAAO9I,GAAIhC,EAAa8K,GAASlL,IAEnCoL,YAAe,GACfxI,UAAaA,EACbyI,oBA5xBsB,WACpB,IAAIxE,EAAuB,EAAf9M,EAAMuF,OAAa,EAE3BpG,EAAM,CACR2N,MAFFA,GAASpF,EAAkBnC,OAGzBkC,QAAS,IAGX,OADAC,EAAkBpC,KAAKnG,GAChBA,GAqxBToS,kBAlxBoB,WAKlB,OAHApK,IADAF,GACwB,WACtB,OAAOY,GAEFZ,GA8wBTuK,uBA5wByB,SAAgCC,GACvDtK,EAAQsK,GAAO5J,GA4wBjBiB,UAAaA,EACbV,OAAUA,EAOVsJ,YAAezL,EACf0L,SAAY,CACVxG,YACE,OAAO/E,GAETgF,aACE,OAAO/E,IAGXqJ,OAAU,SAAgBR,EAAMrJ,GAC9B,OAAOsJ,GAAQD,EAAMrJ,IAEvB+L,iBAAoB,WAClB,OAAO5R,EAAMuF,OAAS,GAExBvF,MAASA,EACT2I,IAAOA,EACPN,GAAMA,EACNwJ,YAAe,SAAqBC,GAElC,MAAO,CACLhF,MAFqC,GAA1BgF,EAAqB,GAAS,EAGzCrG,WAAYqG,EACZC,YAAaxK,EAAauK,KAG9BE,mBAAsB,WAEpB,MAAO,CACLlF,MAF8B,GAAnB3G,EAAc,GAAS,EAGlCsF,WAAYtF,EACZ4L,YAAaxK,EAAapB,KAG9B8L,cAAiB,WACf,OAAOlR,IAYXR,EAAI2R,QAAU,WAEZ,OADAhH,GAASjG,MAAMpB,KAAMiB,WACdjB,MAETtD,EAAI4R,QAAU,WAEZ,OADA3G,GAASvG,MAAMpB,KAAMiB,WACdjB,MAETtD,EAAI6R,WAAa,SAAUC,GAGzB,OAFAxO,KAAKqO,UACLrO,KAAKyO,SAASnM,EAAakM,GACpBxO,MAETtD,EAAI+R,SAAW,SAAUC,EAAYF,GACnC,GAAIE,EAAaF,EAAY,CAI3B,IAHA,IAAIG,EAAWxS,EAAMuS,GACjBE,EAAajL,EAAQ+K,GACrBG,EAAkBnL,EAAagL,GAC1BzI,EAAIyI,EAAYzI,EAAIuI,EAAYvI,IACvC9J,EAAM8J,GAAK9J,EAAM8J,EAAI,GACrBtC,EAAQsC,GAAKtC,EAAQsC,EAAI,GACzBvC,EAAauC,GAAKvC,EAAauC,EAAI,GAErC9J,EAAMqS,GAAcG,EACpBhL,EAAQ6K,GAAcI,EACtBlL,EAAa8K,GAAcK,EAC3B7O,KAAKsO,QAAQE,QACR,GAAIE,EAAaF,EAAY,CAIlC,IAHIG,EAAWxS,EAAMuS,GACjBE,EAAajL,EAAQ+K,GACrBG,EAAkBnL,EAAagL,GAC1BzI,EAAIyI,EAAYzI,EAAIuI,EAAYvI,IACvC9J,EAAM8J,GAAK9J,EAAM8J,EAAI,GACrBtC,EAAQsC,GAAKtC,EAAQsC,EAAI,GACzBvC,EAAauC,GAAKvC,EAAauC,EAAI,GAErC9J,EAAMqS,GAAcG,EACpBhL,EAAQ6K,GAAcI,EACtBlL,EAAa8K,GAAcK,EAC3B7O,KAAKsO,QAAQE,GAEf,OAAOxO,MAETtD,EAAIoS,WAAa,WAEf,OAtYc,SAAqBjH,GAC7BA,EAAI,GAAKA,GAAKpE,IAChBtH,EAAM4S,OAAOlH,EAAG,GAChBlE,EAAQoL,OAAOlH,EAAG,GAEdvF,IADJmB,IAEEnB,EAAcmB,GAEhBzD,KAAKsO,QAAQhM,KA6XLlB,MAAMpB,KAAMiB,WACjBjB,MAETtD,EAAIsS,eAAiB,SAAUC,EAAMC,EAAQC,GAI3C,OAHAzM,EAAWuM,EACXtM,EAAauM,EACbzM,EAAW0M,EACJnP,MAcTtD,EAAID,KAAO,SAAUA,EAAM2S,EAAGC,EAAGrJ,EAAOsJ,EAAOC,GAa7C,SAASC,EAAIC,GAEX,OADAA,EAAIA,EAAE/C,MAAM,MAAM3F,KAAKjG,MAAMkB,EAAQ0N,QAAU,GAAG3I,KAAK,MAChDhB,GAAU0J,EAAGzJ,GAQF,iBAATvJ,IACT4F,EAAMgN,EACNA,EAAID,EACJA,EAAI3S,EACJA,EAAO4F,GASW,iBAAT5F,IAEPA,EADEA,EAAKkT,MAAM,UACNlT,EAAKiQ,MAAM,eAEX,CAACjQ,IAGS,iBAAV6S,IACTC,EAAQD,EACRA,EAAQ,MAEW,iBAAVtJ,IACTuJ,EAAQvJ,EACRA,EAAQ,MAEW,iBAAVA,IACTsJ,EAAQtJ,EACRA,EAAQ,MAEV,IAAI4J,EAAO,GACTC,EAAO,KAET,GAAIP,EAAO,CACTA,GAAS/O,KAAKuP,GAAK,IACnB,IAAIC,EAAIxP,KAAKyP,IAAIV,GACfG,EAAIlP,KAAK0P,IAAIX,GACfM,EAAO,CAACpL,EAAGuL,GAAIvL,EAAGiL,GAAIjL,GAAQ,EAALiL,GAASjL,EAAGuL,GAAI,IAAIhJ,KAAK,KAClD8I,EAAO,KAGH,UADN7J,EAAQA,GAAS,MACQA,EAAMiB,OAAQ,GACjC,eAAgBjB,IAAQA,EAAMU,YAAa,GACjD,IAgFIwJ,EAhFAC,EAAe,GACfjC,EAAclO,KAAK+M,SAASoB,qBAAqBD,YAerD,IAdI,IAASlI,EAAMoK,QACqB,IAAlClC,EAAYmC,oBACdF,EAAe,SACfjC,EAAYmC,mBAAoB,IAG9BnC,EAAYmC,oBACdF,EAAe,UAEjBjC,EAAYmC,mBAAoB,QAEK,IAA5BrQ,KAAKsQ,qBACdtQ,KAAKsQ,mBAAqB,GAER,iBAAT7T,EACTA,EAAO+S,EAAI/S,OACN,CAAA,GAA6C,mBAAzCmJ,OAAOlK,UAAU+E,SAASO,KAAKvE,GAoDxC,MAAM,IAAIyK,MAAM,0CAA4CzK,EAAO,wBA7CnE,IALA,IAAI8T,EAAK9T,EAAK+T,SACZC,EAAK,GACL1F,EAAMwF,EAAG7O,OAGJqJ,KACL0F,EAAGhP,KAAK+N,EAAIe,EAAGG,UAEjB,IAAIC,EAAYpQ,KAAKqQ,MAAMpO,EAAa6M,EAAIrP,KAAKsQ,oBAAsBlO,GAAKY,EAAiBC,IAI7F,GAHI,GAAK0N,GAAyBF,EAAG/O,OAGjC6N,EAAO,CACT,IAAIsB,EACFC,EACAC,EACAC,EAAUhO,EAAiBC,EAC3BgO,EAAaxU,EAAKyU,IAAI,SAAUC,GAC9B,OAAOnR,KAAKnD,mBAAmBsU,GAAKnO,EAAiBZ,GACpDpC,MAKL,GAJA+Q,EAAgBxQ,KAAK6Q,IAAIhQ,MAAMb,KAAM0Q,GAIvB,WAAV1B,EAGFsB,EAAOzB,EAAI2B,EAAgB,EAC3B3B,GAAK6B,EAAW,GAAK,MAChB,CAAA,GAAc,UAAV1B,EAMT,MAAM,IAAIrI,MAAM,2DAHhB2J,EAAOzB,EAAI2B,EACX3B,GAAK6B,EAAW,GAIlBH,EAAQ1B,EACR3S,EAAOgU,EAAG,GACL,IAAIxK,EAAI,EAAb,IAAgB8E,EAAM0F,EAAG/O,OAAQuE,EAAI8E,EAAK9E,IAAK,CAC7C,IAAIoL,EAAQN,EAAgBE,EAAWhL,GACzB,WAAVsJ,IAAoB8B,GAAS,GAEjC5U,GAAQ,UAAYoU,EAAOC,EAAQO,GAAS,KAAOL,EAAU,QAAUP,EAAGxK,GAC1E6K,EAAQD,EAAOQ,QAGjB5U,EAAOgU,EAAG1J,KAAK,cA2CnB,OAxBEmJ,EAAO1L,GAAIhC,EAAa6M,GAAKjN,GAW/B0C,EAAI,QAAU3C,EAAgB,IAAMa,EAAiB,QAErDA,EAAiBC,EAAuB,QAExCkN,EAEArN,EAAY,KAAO8M,EAAOpL,EAAG4K,EAAIhN,GAAK,IAAM8N,EAAO,IAAML,EAAO,MAAQpT,EAAO,YAOxEuD,MAETtD,EAAI4U,OAAS,SAAU7U,EAAM2S,EAAGC,EAAGkC,GACjC,IAAK,IAAItL,EAAI,EAAG8E,EAAMtO,EAAKiF,OAAQuE,EAAI8E,EAAK9E,IAAKmJ,GAAKmC,EACpDvR,KAAKvD,KAAKA,EAAKwJ,GAAImJ,EAAGC,IAG1B3S,EAAI8U,KAAO,SAAUC,EAAIC,EAAIC,EAAIC,GAC/B,OAAO5R,KAAK6R,MAAM,CAAC,CAACF,EAAKF,EAAIG,EAAKF,IAAMD,EAAIC,IAE9ChV,EAAIoV,KAAO,WAGThN,EAAI,KACJA,EAAI,MAQNpI,EAAIqV,WAAa,SAAUC,GAIvBlN,EADE,YAAckN,EACZ,KAEA,KAKNlN,EAAI,MAsBNpI,EAAImV,MAAQ,SAAUA,EAAOzC,EAAGC,EAAG4C,EAAOtH,EAAOuH,GAC/C,IAAIC,EAAQC,EAAQnM,EAAGC,EAAGmM,EAAKV,EAAIC,EAAIU,EAAIC,EAAIC,EAAIC,EA0BnD,IAnBqB,iBAAVZ,IACTxP,EAAMgN,EACNA,EAAID,EACJA,EAAIyC,EACJA,EAAQxP,GAEV4P,EAAQA,GAAS,CAAC,EAAG,GAGrBnN,EAAIH,EAAGyK,EAAIhN,GAAK,IAAMuC,GAAInC,EAAa6M,GAAKjN,GAAK,OACjD+P,EAASF,EAAM,GACfG,EAASH,EAAM,GACf/L,EAAI2L,EAAMnQ,OAIV8Q,EAAKpD,EACLqD,EAAKpD,EAEApJ,EAAI,EAAGA,EAAIC,EAAGD,IAEE,KADnBoM,EAAMR,EAAM5L,IACJvE,QAEN8Q,EAAKH,EAAI,GAAKF,EAASK,EACvBC,EAAKJ,EAAI,GAAKD,EAASK,EACvB3N,EAAIH,EAAG6N,EAAKpQ,GAAK,IAAMuC,GAAInC,EAAaiQ,GAAMrQ,GAAK,QAGnDuP,EAAKU,EAAI,GAAKF,EAASK,EACvBZ,EAAKS,EAAI,GAAKD,EAASK,EACvBH,EAAKD,EAAI,GAAKF,EAASK,EACvBD,EAAKF,EAAI,GAAKD,EAASK,EACvBD,EAAKH,EAAI,GAAKF,EAASK,EACvBC,EAAKJ,EAAI,GAAKD,EAASK,EACvB3N,EAAIH,EAAGgN,EAAKvP,GAAK,IAAMuC,GAAInC,EAAaoP,GAAMxP,GAAK,IAAMuC,EAAG2N,EAAKlQ,GAAK,IAAMuC,GAAInC,EAAa+P,GAAMnQ,GAAK,IAAMuC,EAAG6N,EAAKpQ,GAAK,IAAMuC,GAAInC,EAAaiQ,GAAMrQ,GAAK,OAWjK,OARI8P,GACFpN,EAAI,MAIQ,OAAV6F,GACF7F,EAAI4F,GAASC,IAER3K,MAgBTtD,EAAIgW,KAAO,SAAUtD,EAAGC,EAAGsD,EAAGC,EAAGjI,GACtBD,GAASC,GAKlB,OAJA7F,EAAI,CAACN,EAAG4K,EAAIhN,GAAIoC,GAAIhC,EAAa6M,GAAKjN,GAAIoC,EAAGmO,EAAIvQ,GAAIoC,GAAIoO,EAAIxQ,GAAI,MAAM2E,KAAK,MAC9D,OAAV4D,GACF7F,EAAI4F,GAASC,IAER3K,MAkBTtD,EAAImW,SAAW,SAAUpB,EAAIC,EAAIC,EAAIC,EAAIU,EAAIC,EAAI5H,GAS/C,OARA3K,KAAK6R,MAAM,CAAC,CAACF,EAAKF,EAAIG,EAAKF,GAE3B,CAACY,EAAKX,EAAIY,EAAKX,GAEf,CAACH,EAAKa,EAAIZ,EAAKa,IACZd,EAAIC,EAEP,CAAC,EAAG,GAAI/G,GAAO,GACR3K,MAkBTtD,EAAIoW,YAAc,SAAU1D,EAAGC,EAAGsD,EAAGC,EAAGG,EAAIC,EAAIrI,GAC9C,IAAIsI,EAAQ,EAAI,GAAK1S,KAAK2S,MAAQ,GAIlC,OAHAlT,KAAK6R,MAAM,CAAC,CAACc,EAAI,EAAII,EAAI,GAAI,CAACA,EAAKE,EAAO,EAAGF,EAAIC,EAAKA,EAAKC,EAAOF,EAAIC,GAAK,CAAC,EAAGJ,EAAI,EAAII,GAAK,CAAC,EAAGA,EAAKC,GAASF,EAAKE,EAAQD,GAAKD,EAAIC,GAAK,CAAM,EAAID,EAARJ,EAAY,GAAI,EAAGI,EAAKE,EAAQ,GAAIF,GAAMC,EAAKC,GAASF,GAAKC,GAAK,CAAC,EAAQ,EAAIA,EAARJ,GAAa,CAAC,GAAKI,EAAKC,EAAQF,EAAKE,GAAQD,EAAID,GAAKC,IAAM5D,EAAI2D,EAAI1D,EAEtR,CAAC,EAAG,GAAI1E,GACD3K,MAgBTtD,EAAIyW,QAAU,SAAU/D,EAAGC,EAAG0D,EAAIC,EAAIrI,GACpC,IAAIyI,EAAK,EAAI,GAAK7S,KAAK2S,MAAQ,GAAKH,EAClCM,EAAK,EAAI,GAAK9S,KAAK2S,MAAQ,GAAKF,EAQlC,OAPAlO,EAAI,CAACN,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,EAAa6M,GAAKjN,GAAI,IAAKoC,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,GAAc6M,EAAIgE,IAAOjR,GAAIoC,GAAI4K,EAAIgE,GAAMhR,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAIoC,EAAG4K,EAAIhN,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAI,KAAK2E,KAAK,MAClNjC,EAAI,CAACN,GAAI4K,EAAIgE,GAAMhR,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAIoC,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,GAAc6M,EAAIgE,IAAOjR,GAAIoC,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,EAAa6M,GAAKjN,GAAI,KAAK2E,KAAK,MACjKjC,EAAI,CAACN,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,GAAc6M,EAAIgE,IAAOjR,GAAIoC,GAAI4K,EAAIgE,GAAMhR,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAIoC,EAAG4K,EAAIhN,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAI,KAAK2E,KAAK,MACjKjC,EAAI,CAACN,GAAI4K,EAAIgE,GAAMhR,GAAIoC,GAAIhC,GAAc6M,EAAI2D,IAAO5Q,GAAIoC,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,GAAc6M,EAAIgE,IAAOjR,GAAIoC,GAAI4K,EAAI2D,GAAM3Q,GAAIoC,GAAIhC,EAAa6M,GAAKjN,GAAI,KAAK2E,KAAK,MACnJ,OAAV4D,GACF7F,EAAI4F,GAASC,IAER3K,MAeTtD,EAAI4W,OAAS,SAAUlE,EAAGC,EAAGkE,EAAG5I,GAC9B,OAAO3K,KAAKmT,QAAQ/D,EAAGC,EAAGkE,EAAGA,EAAG5I,IAYlCjO,EAAI8W,cAAgB,SAAUC,GAE5B,IAAK,IAAIC,KAAYzP,EACfA,EAAmB5D,eAAeqT,IAAaD,EAAWC,KAC5DzP,EAAmByP,GAAYD,EAAWC,IAG9C,OAAO1T,MAYTtD,EAAIiX,YAAc,SAAUC,GAE1B,OADA5Q,EAAiB4Q,EACV5T,MAcTtD,EAAImX,QAAU,SAAU/X,EAAUE,GAGhC,OAFAmG,EAAgB2F,GAAShM,EAAUE,GAE5BgE,MAcTtD,EAAIoX,aAAepX,EAAIqX,YAAc,SAAUpJ,GAG7C,OAFAxI,EAAgB2F,QAASd,EAAW2D,GAE7B3K,MAaTtD,EAAIsX,YAAc,WAEhB,IACElY,EACAE,EACAqG,EAHE4R,EAAO,GAIX,IAAKnY,KAAY0H,EACf,GAAIA,EAAQnD,eAAevE,GAEzB,IAAKE,KADLiY,EAAKnY,GAAYuG,EAAM,GACLmB,EAAQ1H,GACpB0H,EAAQ1H,GAAUuE,eAAerE,IACnCqG,EAAIZ,KAAKzF,GAKjB,OAAOiY,GAcTvX,EAAIiJ,QAAU,SAAUuO,EAAgBpY,EAAUE,GAChD2J,GAAQuO,EAAgBpY,EAAUE,EAAW,qBAY/CU,EAAIyX,aAAe,SAAU7M,GAE3B,OADAxC,GAAKwC,EAAQlF,GAAGsC,QAAQ,GAAK,MACtB1E,MAwCTtD,EAAI0X,aAAe,SAAUC,EAAKC,EAAKC,EAAKC,GAC1C,IAAIC,EAwBJ,OApBIA,OAHQzN,IAARsN,QAA6BtN,IAARwN,GAAqBH,IAAQC,IAAQC,EAEzC,iBAARF,EACDA,EAAM,KAEN7P,EAAG6P,EAAM,KAAO,UAETrN,IAARwN,EAEU,iBAARH,EACD,CAACA,EAAKC,EAAKC,EAAK,MAAMxN,KAAK,KAE3B,CAACvC,EAAG6P,EAAM,KAAM7P,EAAG8P,EAAM,KAAM9P,EAAG+P,EAAM,KAAM,MAAMxN,KAAK,KAIhD,iBAARsN,EACD,CAACA,EAAKC,EAAKC,EAAKC,EAAK,KAAKzN,KAAK,KAE/B,CAACvC,EAAG6P,GAAM7P,EAAG8P,GAAM9P,EAAG+P,GAAM/P,EAAGgQ,GAAM,KAAKzN,KAAK,KAG3DjC,EAAI2P,GACGzU,MAwCTtD,EAAIgY,aAAe,SAAUL,EAAKC,EAAKC,EAAKC,GAC1C,IAAIC,EA6BJ,YA5BYzN,IAARsN,QAA6BtN,IAARwN,GAAqBH,IAAQC,IAAQC,EAG1DE,EADiB,iBAARJ,EACDA,EAAM,KAEN7P,EAAG6P,EAAM,KAAO,UAETrN,IAARwN,GAAuC,WAAlBnZ,SAASmZ,IAGrCC,EADiB,iBAARJ,EACD,CAACA,EAAKC,EAAKC,EAAK,MAAMxN,KAAK,KAE3B,CAACvC,EAAG6P,EAAM,KAAM7P,EAAG8P,EAAM,KAAM9P,EAAG+P,EAAM,KAAM,MAAMxN,KAAK,KAE/DyN,GAAiB,IAAVA,EAAIG,IAGbF,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAM1N,KAAK,OAKzC0N,EADiB,iBAARJ,EACD,CAACA,EAAKC,EAAKC,EAAKC,EAAK,KAAKzN,KAAK,KAE/B,CAACvC,EAAG6P,GAAM7P,EAAG8P,GAAM9P,EAAG+P,GAAM/P,EAAGgQ,GAAM,KAAKzN,KAAK,KAG3DjC,EAAI2P,GACGzU,MAgBTtD,EAAIkY,aAAe,SAAUrB,EAAGsB,EAAGC,GACjC,GAAiB,iBAANvB,GAAkB,oBAAoBwB,KAAKxB,GAAI,CACxD,IAAIyB,EAAMnQ,SAAS0O,EAAE9L,OAAO,GAAI,IAChC8L,EAAIyB,GAAO,GAAK,IAChBH,EAAIG,GAAO,EAAI,IACfF,EAAU,IAANE,EAON,OAJElS,EADQ,IAANyQ,GAAiB,IAANsB,GAAiB,IAANC,QAAwB,IAAND,EAC9BlQ,EAAG4O,EAAI,KAAO,KAEd,CAAC5O,EAAG4O,EAAI,KAAM5O,EAAGkQ,EAAI,KAAMlQ,EAAGmQ,EAAI,KAAM,MAAM/N,KAAK,KAE1D/G,MAYTtD,EAAIuY,cAAgB,CAClBC,EAAG,EACHC,KAAQ,EACRC,IAAO,EACPC,MAAS,EACTC,EAAG,EACHC,MAAS,EACTC,QAAW,EACXlC,OAAU,EACVmC,EAAG,EACHC,WAAc,EACdC,QAAW,EACXC,OAAU,EACVC,MAAS,GAaXnZ,EAAIoZ,WAAa,SAAUnL,GACzB,IAAIrK,EAAKN,KAAKiV,cAActK,GAC5B,QAAW3D,IAAP1G,EACF,MAAM,IAAI4G,MAAM,sBAAwByD,EAAQ,+EAIlD,OAFA7G,EAAYxD,EACZwE,EAAIxE,EAAK,MACFN,MAaTtD,EAAIqZ,YAAc,SAAUpL,GAC1B,IAAIrK,EAAKN,KAAKiV,cAActK,GAC5B,QAAW3D,IAAP1G,EACF,MAAM,IAAI4G,MAAM,uBAAyByD,EAAQ,+EAInD,OAFA5G,EAAazD,EACbwE,EAAIxE,EAAK,MACFN,MAITtD,EAAImP,OAASP,GAWb5O,EAAIsZ,KAAO,SAAUC,GACnBvZ,EAAImP,OAAO,OAAQoK,IAMFjZ,EAAMN,IACnBM,EAAMN,IAAI2D,eAAeyM,MACZ,WAAXA,IAAuB9P,EAAMN,IAAI6H,OAAO7C,OAC1C,SAAW6C,EAAQ2R,GAMjB,IAAIC,EAAWC,EAAkBnQ,EACjC,IAAKA,EAAIiQ,EAAUxU,OAAS,GAAU,IAAPuE,EAAUA,IAMvCkQ,EAAYD,EAAUjQ,GAAG,GACzBmQ,EAAmBF,EAAUjQ,GAAG,GAChC1B,EAAOtE,UAAUmB,MAAMmD,EAAQ,CAAC4R,GAAW3F,OAAmC,mBAArB4F,EAAkC,CAACA,GAAoBA,IAfpH,CAiBG7R,EAAQvH,EAAMN,IAAI6H,QAErB7H,EAAIoQ,IAAU9P,EAAMN,IAAIoQ,KAa9B,OA9/Ca,WAWT,IAVA,IASEuJ,EAAgB,CAAC,CAAC,YATJ,YAGL,UAM0C,CAAC,iBATtC,YAIP,QAKiF,CAAC,oBAT3E,YAKL,UAIyH,CAAC,wBATrH,YAMA,cAGuK,CAAC,UAP5K,UACD,UAM0M,CAAC,eAP1M,UAEH,QAK6O,CAAC,kBAP3O,UAGD,UAIiR,CAAC,sBAPjR,UAII,cAG2T,CAAC,cARlU,QAEC,UAMgW,CAAC,aARlW,QAGD,QAK+X,CAAC,eAR/X,QAIC,UAI8Z,CAAC,mBARha,QAKM,cAGmc,CAAC,eAD3c,iBAEApQ,EAAI,EAAGC,EAAImQ,EAAc3U,OAAQuE,EAAIC,EAAGD,IAAK,CACpD,IAAIb,EAAUO,GAAQ0Q,EAAcpQ,GAAG,GAAIoQ,EAAcpQ,GAAG,GAAIoQ,EAAcpQ,GAAG,GAJtE,oBAOPqQ,EAAQD,EAAcpQ,GAAG,GAAGyG,MAAM,KACtChH,EAAoBN,EAASkR,EAAM,GAAIA,EAAM,IAAM,IAErD/R,EAAO3D,QAAQ,WAAY,CACzB2C,MAAOA,EACPgT,WAAY/S,IAs+ClBgT,GACArU,EAAgB,KAChBkF,GAASvF,EAAQF,GACjB2C,EAAO3D,QAAQ,eACRlE,EA0CT,OAbAM,EAAMN,IAAM,CACV6H,OAAQ,IAEVvH,EAAMmM,QAAU,cACM,mBAAXxN,QAAyBA,OAAO8a,IACzC9a,OAAO,QAAS,WACd,OAAOqB,IAEkB,oBAAX0Z,QAA0BA,OAAOC,QACjDD,OAAOC,QAAU3Z,EAEjBC,EAAOD,MAAQA,EAEVA,EAl7DG,CAm7DM,oBAAT4Z,MAAwBA,MAA0B,oBAAXC,QAA0BA,QAAU7W,OAepF,SAAWnE,GACT,IAAIib,EAAOC,EAAkBC,EAAYC,EAAcC,EAAcC,EAAeC,EAAUC,EAAUC,EAAQC,EAAiBC,EAAUC,EAAaC,EAAqBC,EAAiBC,EAAyBC,EAAQC,EAAUC,EAAgBC,EAASC,EAClQnB,EAAQ,WACN,OAAO,SAAUxb,GAEf,OADA4c,EAAMxc,UAAYJ,EACX,IAAI4c,GAEb,SAASA,MALH,GAORX,EAAkB,SAAyBY,GACzC,IAAIC,EAAUnS,EAAGC,EAAGmS,EAAU9E,EAAG+E,EAAUC,EAM3C,IALAtS,EAAI,EACJC,EAAIiS,EAAMzW,OACV0W,OAAW,EACXC,GAAW,EACXC,GAAW,GACHD,GAAYpS,IAAMC,IACxBkS,EAAWD,EAAMlS,GAAKkS,EAAMlS,GAAGuS,cAE7BH,GAAW,GAEbpS,IAGF,IADAA,EAAIC,EAAI,EACDA,IAAMoS,IAAmB,IAAPrS,IACvBmS,EAAWD,EAAMlS,GAAKkS,EAAMlS,GAAGwS,eAE7BH,GAAW,GAEbrS,IAKF,IAHAsN,EAAI,QACJgF,GAAgB,EAChBtS,EAAI,EACGA,IAAMC,GAEK,UAAZiS,EAAMlS,KACRmS,EAAWD,EAAMlS,GAAGmB,QAAQ,OAAQ,KAChCmR,IACFH,EAAWA,EAASI,YAElBJ,IACFG,EAAgBhF,EAAEwB,KAAKqD,IAEzBD,EAAMlS,GAAKmS,GAEbnS,IAEF,OAAOkS,GAYTV,EAAc,SAAqBiB,GACjC,IAAIC,EAAMC,EAAMtC,EAIhB,IAHAqC,OAAO,EAEPC,GADAtC,EAAQoC,EAAuBhM,MAAM,MACxBgE,SACLiI,GAAQC,GACdD,EAAO3B,EAAW4B,EAAKC,OAAO3W,eAC9B0W,EAAOtC,EAAM5F,QAEf,OAAOiI,GAETjB,EAAsB,SAA6BoB,GASjD,IAAmBxL,EAInB,OAXAwL,EAAoD,SAA3BA,EAAoC,MAAQA,GAC1CrM,QAAQ,OAAS,IAAMsM,MAAMrR,OAAOoR,EAAuB1R,QAAQ,KAAM,QAClG0R,EAA4E,OAAnDpR,OAAOoR,EAAuB1R,QAAQ,KAAM,KAAgB,MAEnF0R,EAAuBrM,QAAQ,OAAS,IAAMsM,MAAMrR,OAAOoR,EAAuB1R,QAAQ,KAAM,QAClG0R,EAA4E,MAAnDpR,OAAOoR,EAAuB1R,QAAQ,KAAM,KAAe,WAG9E,EACC,IACTkG,EAAQqK,EAAgBmB,IAEfxL,OAJD,KAMRA,EAAQ,CACN0L,WAAY,EACZC,UAAW,GACXC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,KAAM,GACN,CACAT,uBAAwBA,KAGjBnB,EAAgBmB,GAA0BxL,EAlB1C,IAoBLA,EAAQkM,WAAWV,IACdnB,EAAgBmB,GAA0BxL,EArB1C,GAwBY,KADrBA,EAAQwL,EAAuBnJ,MAAM,kBAC3BjO,OACDiW,EAAgBmB,GAA0BU,WAAWlM,EAAM,IAzB3D,GA2BFqK,EAAgBmB,GAA0B,GAEnDxB,EAAS,SAAgBmC,GACvB,IAAIC,EAAKrX,EAAKsX,EAGQC,EADhBC,EAgDN,OA/CsBD,EAepBH,EAfAI,EACMzN,SAAS0N,aAAe1N,SAAS0N,YAAYC,iBACxC3N,SAAS0N,YAAYC,iBAAiBH,EAAI,MACxCA,EAAGI,aACLJ,EAAGI,aAEHJ,EAAGjP,MAWhBtI,OAAM,GADNqX,EAAM,IAEF,eAAiBjC,GApBrBkC,EAWS,SAAUM,GAIf,OAHAA,EAAOA,EAAK7S,QAAQ,OAAQ,SAAUuI,GACpC,OAAOA,EAAMuK,OAAO,GAAG9Q,gBAElByQ,EAAQI,KAKiC,iBAAmB,QACvEP,EAAI,cAAgBzC,EAAa0C,EAAmB,gBAAkB,SACtED,EAAI,cAAgBxC,EAAayC,EAAmB,gBAAkB,OAE1D,UADZtX,EAAM8U,EAAcwC,EAAmB,iBAAmB,YAE9B,WAAtBD,EAAI,cACNA,EAAI,cAAgBrX,EAEpBqX,EAAI,cAAgBrX,EAAMqX,EAAI,eAGlCA,EAAI,aAAehC,EAAoBiC,EAAmB,eAAiB,EAC3ED,EAAI,eAAiBhC,EAAoBiC,EAAmB,iBAAmB,EAC/ED,EAAa,QAAsC,WAAlCC,EAAmB,WAA0B,SAAW,QACzEtX,EAAyB,UAAnBqX,EAAa,QACnBA,EAAI,cAAgBrX,GAAOqV,EAAoBiC,EAAmB,gBAAkB,EACpFD,EAAI,iBAAmBrX,GAAOqV,EAAoBiC,EAAmB,mBAAqB,EAC1FD,EAAI,eAAiBrX,GAAOqV,EAAoBiC,EAAmB,iBAAmB,EACtFD,EAAI,kBAAoBrX,GAAOqV,EAAoBiC,EAAmB,oBAAsB,EAC5FD,EAAI,eAAiBrX,GAAOqV,EAAoBiC,EAAmB,iBAAmB,EACtFD,EAAI,gBAAkBrX,GAAOqV,EAAoBiC,EAAmB,kBAAoB,EACxFD,EAAI,gBAAkBrX,GAAOqV,EAAoBiC,EAAmB,kBAAoB,EACxFD,EAAI,iBAAmBrX,GAAOqV,EAAoBiC,EAAmB,mBAAqB,EAC1FD,EAAI,qBAAuBC,EAAmB,sBAAwB,OAGtED,EAAW,MAAItC,EAASuC,EAAmB,cAAgB,OAC3DD,EAAW,MAAIrC,EAASsC,EAAmB,WAAa,OACxDD,EAAW,MAAIC,EAAmB,SAC3BD,GAET9B,EAA0B,SAAiC6B,EAASU,EAAUC,GAC5E,IAAIC,EAAUpU,EAAGqU,EAAoBpU,EAMrC,GALAoU,GAAqB,EACrBrU,OAAI,EACJC,OAAI,OACA,EACJmU,EAAWD,EAAgB,IAAMX,EAAQnZ,IAEvC,GAAwB,mBAAb+Z,EACTC,EAAqBD,EAASZ,EAASU,QAIvC,IAFAlU,EAAI,EACJC,EAAImU,EAAS3Y,QACL4Y,GAAsBrU,IAAMC,GAClCoU,EAAqBD,EAASpU,GAAGwT,EAASU,GAC1ClU,IAKN,GADAoU,EAAWD,EAAgBX,EAAQc,WAC9BD,GAAsBD,EACzB,GAAwB,mBAAbA,EACTC,EAAqBD,EAASZ,EAASU,QAIvC,IAFAlU,EAAI,EACJC,EAAImU,EAAS3Y,QACL4Y,GAAsBrU,IAAMC,GAClCoU,EAAqBD,EAASpU,GAAGwT,EAASU,GAC1ClU,IAIN,OAAOqU,GAETrC,EAAc,SAAqBuC,EAAOL,GACxC,IAAIrP,EAAM2P,EAASxU,EAAGyU,EAAGC,EAASC,EAAqBC,EAAYC,EAAM5U,EAMzE,IALA4E,EAAO,GACP2P,EAAU,GACVxU,EAAI,EACJC,EAAIsU,EAAMO,KAAK,GAAGC,MAAMtZ,OACxBmZ,EAAaL,EAAMS,YACZhV,EAAIC,GACT4U,EAAON,EAAMO,KAAK,GAAGC,MAAM/U,GAC3BwU,EAAQxU,GAAK,CACX0S,KAAMmC,EAAKI,YAAYhZ,cAAckF,QAAQ,OAAQ,IACrD+T,OAAQL,EAAKI,YAAY9T,QAAQ,SAAU,IAC3CE,MAAOwT,EAAKG,YAAcJ,EAAaV,EAASiB,IAAIrO,SAASe,SAASxG,OAExErB,IAGF,IADAA,EAAI,EACGA,EAAIuU,EAAMO,KAAKrZ,QAAQ,CAI5B,IAHAkZ,EAAWJ,EAAMO,KAAK9U,GACtB0U,EAAU,GACVD,EAAI,EACGA,EAAIE,EAASI,MAAMtZ,QACxBiZ,EAAQF,EAAQC,GAAG/B,MAAQiC,EAASI,MAAMN,GAAGQ,YAAY9T,QAAQ,SAAU,IAC3EsT,IAEF5P,EAAKrJ,KAAKkZ,GACV1U,IAEF,MAAmB,CACjB8U,KAAMjQ,EACN2P,QAASA,IAGb,IAAIY,EAAW,CACbC,OAAQ,EACRC,MAAO,EACPC,SAAU,EACVC,OAAQ,EACRC,MAAO,EACPC,OAAQ,GAENC,EAAY,EAChB7E,EAAmB,SAAyB0C,EAASU,EAAUC,GAC7D,IAAIyB,EAAIC,EAAKC,EAAa9V,EAAG+V,EAAS9V,EAAU+V,EAAYC,EAY5D,IAXAJ,EAAMrC,EAAQ0C,WACdN,OAAK,GAELG,EAAkC,WADlCD,EAAczE,EAAOmC,IACC2C,WAEpBjC,EAASkC,mBACTlC,EAASmC,cAAcP,IAEjB,UAAgB,KACxB9V,EAAI,EACJC,EAAI4V,EAAIpa,OACDuE,EAAIC,GAAG,CAEZ,GAAgE,iBAA7C,KADnB2V,EAAKC,EAAI7V,IACwB,YAAcsW,QAAQV,IAAmB,CAKxE,GAHA1B,EAASqC,sBAAsBX,GAGX,IAAhBA,EAAGY,UAAkC,WAAhBZ,EAAGtB,SAAuB,CACjD,IAAImC,EAASb,EAETc,EAAexC,EAASiB,IAAIwB,YAAYC,IAE5C1C,EAASiB,IAAIrO,SAASxI,OAAOtE,UAAU,UAAW,SAAU6c,GAE1D3C,EAAS9K,EAAIsN,EAEb5F,EAAiB2F,EAAQvC,EAAUC,GAGnCD,EAASiB,IAAIwB,YAAYC,IAAM1C,EAAS9K,EAAI,GAC5C8K,EAAS9K,GAAK,KACb,GAEL,GAAoB,IAAhBwM,EAAGY,UAAkC,aAAhBZ,EAAGtB,UACrBsB,EAAGX,YAAYzO,QAAQ,cAC1B0N,EAASiB,IAAI/M,UACb8L,EAAS9K,EAAI8K,EAASiB,IAAIwB,YAAYC,UAEnC,GAAoB,IAAhBhB,EAAGY,UAAmBpB,EAASQ,EAAGtB,UA8GtC,GAAoB,IAAhBsB,EAAGY,SAAgB,CAC5B,IAAInP,EAAQuO,EAAGkB,UACf,GAAIlB,EAAGkB,WAAwC,OAA3BlB,EAAGmB,WAAWzC,SAChC,GAA0C,OAAtCsB,EAAGmB,WAAWA,WAAWzC,SAC3BjN,EAAQsO,IAAc,KAAOtO,MACxB,CACL,IAAIvR,EAAWggB,EAAY,aACvBkB,GAAW,EAAe,IAAXlhB,GAAmBoe,EAASiB,IAAIrO,SAASc,YACxDqP,EAAqB,IAAXnhB,EAAkBoe,EAASiB,IAAIrO,SAASc,YAClDsP,EAAoB,KAAXphB,EAAkBoe,EAASiB,IAAIrO,SAASc,YACrDqO,EAAK,SAAY9M,EAAGC,GAClBrP,KAAKob,IAAI9H,OAAOlE,EAAI6N,EAAS5N,EAAI6N,EAASC,EAAQ,OAMG,GAApDtB,EAAGuB,cAAcC,KAAKC,wBAAwBzB,IACnD1B,EAASoD,QAAQjQ,EAAOyO,OAEH,iBAAPF,GAChB1B,EAASoD,QAAQ1B,EAAIE,OAnIiC,CAEtD,IAAIyB,EACJ,GAAoB,QAAhB3B,EAAGtB,SAAoB,CACzB,IAAIkD,EAAM5B,EAAG6B,aAAa,OAC1BF,EAAe3F,EAAOsC,EAASiB,IAAIuC,UAAUF,IAAQA,GAEvD,GAAID,EAAc,CACZrD,EAASiB,IAAIrO,SAASe,SAASvG,OAAS4S,EAASiB,IAAIwB,YAAYgB,OAASzD,EAAS9K,EAAIwM,EAAGtU,QAAU4S,EAAS9K,EAAI8K,EAASiB,IAAIwB,YAAYC,MAC5I1C,EAASiB,IAAI/M,UACb8L,EAAS9K,EAAI8K,EAASiB,IAAIwB,YAAYC,IAEtC1C,EAASqC,sBAAsBX,IAEjC,IAAIgC,EAAYvG,EAAOuE,GACnBiC,EAAS3D,EAAS/K,EAClB2O,EAAkB,GAAK5D,EAASiB,IAAIrO,SAASc,YAG7CmQ,GAAuBH,EAAU,eAAiBA,EAAU,iBAAmBE,EAC/EE,GAAwBJ,EAAU,gBAAkBA,EAAU,kBAAoBE,EAClFG,GAAsBL,EAAU,cAAgBA,EAAU,gBAAkBE,EAC5EI,GAAyBN,EAAU,iBAAmBA,EAAU,mBAAqBE,OAI9D/W,IAAvB6W,EAAiB,OAA0C,UAAvBA,EAAiB,MACvDC,GAAU3D,EAASiE,SAAS9W,MAAQuU,EAAGvU,MAAQ2W,EAE/CH,GAAUE,EAEZ7D,EAASiB,IAAIiD,SAASb,EAAcM,EAAQ3D,EAAS9K,EAAI6O,EAAoBrC,EAAGvU,MAAOuU,EAAGtU,QAC1FiW,OAAexW,EAEY,UAAvB6W,EAAiB,OAAwC,SAAvBA,EAAiB,OAErD1D,EAASmE,eAAe7c,KAAK,SAAU8c,EAAOC,EAAYC,EAAW7E,GAEnE,OAAIO,EAAS9K,GAAKmP,GAChBrE,EAAS/K,GAAKmP,EACdpE,EAASiE,SAAS9W,OAASmX,GACpB,MACE7E,GAAsB,IAAhBA,EAAG6C,WAAmBpB,EAASzB,EAAGW,WAAaJ,EAAS/K,EAAIwK,EAAGtS,MAAQ6S,EAASiB,IAAIwB,YAAY/L,KAAOsJ,EAASiB,IAAIwB,YAAYtV,SAC/I6S,EAAS/K,GAAKmP,EACdpE,EAAS9K,EAAImP,EACbrE,EAASiE,SAAS9W,OAASmX,GACpB,IAITC,KAAK1e,KAA6B,SAAvB6d,EAAiB,OAAgBhC,EAAGvU,MAAQ0W,EAAsBC,EAAuB,EAAG9D,EAAS9K,EAAIwM,EAAGtU,OAAS2W,EAAqBC,EAAuBtC,EAAGvU,QAGjL6S,EAASmE,eAAe7c,KAAK,SAAUkd,EAAwBxiB,EAAOyd,GACpE,QAAIO,EAAS9K,EAAIsP,GAA0BxiB,IAAUge,EAASiB,IAAIrO,SAASgB,qBACrD,IAAhB6L,EAAG6C,UAAuC,SAArBnF,EAAOsC,GAAIgF,QAClCzE,EAAS9K,EAAIsP,GACN,IAOXD,KAAK1e,KAAMma,EAAS9K,EAAIwM,EAAGtU,OAAQ4S,EAASiB,IAAIrO,SAASgB,qBAG3DoM,EAASiE,SAAS9W,OAASuU,EAAGvU,MAAQ0W,EAAsBC,EAEjC,SAAvBJ,EAAiB,QACnB1D,EAAS/K,GAAKyM,EAAGvU,MAAQ0W,EAAsBC,IAIjD9D,EAAS9K,GAAKwM,EAAGtU,OAAS2W,EAAqBC,OAI5C,GAAoB,UAAhBtC,EAAGtB,SACZ0B,EAAahE,EAAY4D,EAAI1B,GAC7BA,EAAS9K,GAAK,GACd8K,EAASiB,IAAIZ,MAAML,EAAS/K,EAAG+K,EAAS9K,EAAG4M,EAAWlB,KAAMkB,EAAWxB,QAAS,CAC9EoE,UAAU,EACVC,aAAc1E,EAAgB0E,aAC9BC,QAAS5E,EAASiB,IAAIwB,YACtBlD,IAAKpC,EAAOuE,KAEd1B,EAAS9K,EAAI8K,EAASiB,IAAIlf,YAAYmT,EAAI8K,EAASiB,IAAIlf,YAAY0W,EAAI,QAClE,GAAoB,OAAhBiJ,EAAGtB,UAAqC,OAAhBsB,EAAGtB,SACpCqB,EAAY,EACPhE,EAAwBiE,EAAI1B,EAAUC,IACzCrD,EAAiB8E,EAAI1B,EAAUC,GAEjCD,EAAS9K,GAAK,QACT,GAAoB,OAAhBwM,EAAGtB,SAAmB,CAC/B,IAAIyE,EAAO7E,EAAS/K,EACpB+K,EAAS/K,GAAK,GAAK+K,EAASiB,IAAIrO,SAASc,YACzCsM,EAAS9K,GAAK,EACTuI,EAAwBiE,EAAI1B,EAAUC,IACzCrD,EAAiB8E,EAAI1B,EAAUC,GAEjCD,EAAS/K,EAAI4P,MACY,OAAhBnD,EAAGtB,UACZJ,EAAS9K,GAAK0M,EAAY,aAAe5B,EAASiB,IAAIrO,SAASc,YAC/DsM,EAASoD,QAAQ,SAAUzG,EAAMiF,KAE5BnE,EAAwBiE,EAAI1B,EAAUC,IACzCrD,EAAiB8E,EAAI1B,EAAUC,IA2BvCnU,IAGF,GADAmU,EAAgB6E,KAAO9E,EAAS9K,EAC5B2M,EACF,OAAO7B,EAASkC,iBAAiBH,IAGrCrE,EAAS,GACTC,EAAW,SAAkB2B,EAASU,EAAUC,EAAiB8B,GAC/D,IAEEgD,EAFEC,EAAO1F,EAAQ2F,qBAAqB,OACtClZ,EAAIiZ,EAAKzd,OAET0N,EAAI,EACN,SAASiQ,IACPlF,EAASiB,IAAIrO,SAASxI,OAAO3D,QAAQ,gBACrCsb,EAAGgD,GAEL,SAASI,EAAU7B,EAAKnW,EAAOC,GAC7B,GAAKkW,EAAL,CACA,IAAI8B,EAAM,IAAIC,MACdN,IAAiB9P,EACjBmQ,EAAIE,YAAc,GAClBF,EAAIG,QAAUH,EAAII,OAAS,WACzB,GAAIJ,EAAIK,WAGiC,IAAnCL,EAAIM,IAAIpT,QAAQ,iBAClB8S,EAAIjY,MAAQA,GAASiY,EAAIjY,OAAS,EAClCiY,EAAIhY,OAASA,GAAUgY,EAAIhY,QAAU,GAGnCgY,EAAIjY,MAAQiY,EAAIhY,QAAQ,CAC1B,IAAIuY,EAAO3F,EAASiB,IAAIuC,UAAUF,IAAQA,EAC1C5F,EAAOiI,GAAQjI,EAAOiI,IAASP,IAG3BnQ,GACNiQ,KAGJE,EAAIM,IAAMpC,GAEZ,KAAOvX,KACLoZ,EAAUH,EAAKjZ,GAAGwX,aAAa,OAAQyB,EAAKjZ,GAAGoB,MAAO6X,EAAKjZ,GAAGqB,QAEhE,OAAO6H,GAAKiQ,KAEdtH,EAAiB,SAAwBgI,EAAM5F,EAAUC,GAEvD,IAAI4F,EAASD,EAAKX,qBAAqB,UACvC,GAAIY,EAAOte,OAAS,EAAG,CACrBse,EAASA,EAAO,GAIhB,IAAIC,EAAS9F,EAASiB,IAAIrO,SAASI,MAC/B+S,EAAO/F,EAAS9K,EACpB8K,EAASiB,IAAIrO,SAASI,MAAQ,aAC9B4J,EAAiBiJ,EAAQ7F,EAAUC,GACnC,IAAI+F,EAAe5f,KAAKqQ,KAAKuJ,EAAS9K,EAAI6Q,GAAQ,EAClD/F,EAAS9K,EAAI6Q,EACb/F,EAASiB,IAAIrO,SAASI,MAAQ8S,EAG9B9F,EAASiB,IAAIwB,YAAYgB,QAAUuC,EAkCnC,IA/BA,IAAIC,EAAe,SAAsBtD,GACvC,IAAIlV,OAA0BZ,IAAb8V,EAAyBA,EAASlV,WAAa,EAE5DyY,EAAclG,EAAS9K,EAE3B8K,EAAS9K,EAAI8K,EAASiB,IAAIrO,SAASe,SAASvG,OAAS4S,EAASiB,IAAIwB,YAAYgB,OAC9EzD,EAASiB,IAAIwB,YAAYgB,QAAUuC,EAInC,IADA,IAAIG,EAAQN,EAAOZ,qBAAqB,QAC/BnZ,EAAI,EAAGA,EAAIqa,EAAM5e,SAAUuE,GAE7B,IAAMqa,EAAMra,GAAGsa,UAAY,KAAKnZ,QAAQ,UAAW,KAAKqF,QAAQ,kBAAoB,IACvF6T,EAAMra,GAAGua,UAAY5Y,IAGlB,IAAM0Y,EAAMra,GAAGsa,UAAY,KAAKnZ,QAAQ,UAAW,KAAKqF,QAAQ,iBAAmB,IACtF6T,EAAMra,GAAGua,UAAY,4BAKzBzJ,EAAiBiJ,EAAQ7F,EAAUC,GAEnCD,EAASiB,IAAIwB,YAAYgB,QAAUuC,EAEnChG,EAAS9K,EAAIgR,GAIXC,EAAQN,EAAOZ,qBAAqB,QAC/BnZ,EAAI,EAAGA,EAAIqa,EAAM5e,SAAUuE,GAC7B,IAAMqa,EAAMra,GAAGsa,UAAY,KAAKnZ,QAAQ,UAAW,KAAKqF,QAAQ,iBAAmB,GACtF0N,EAASiB,IAAIrO,SAASxI,OAAOtE,UAAU,wBAAyBka,EAASiB,IAAIqF,cAAc/B,KAAKvE,EAASiB,IAAK,6BAA6B,GAK/IjB,EAASiB,IAAIrO,SAASxI,OAAOtE,UAAU,UAAWmgB,GAAc,GAEhEA,IAGA/E,EAAiB,OAAI,IAGzBrD,EAAU,SAAiBoD,EAAK3B,EAASrK,EAAGC,EAAG+O,EAAUje,GACvD,IAAKsZ,EAAS,OAAO,EACE,iBAAZA,GAAyBA,EAAQuD,aAAYvD,EAAU,GAAKA,EAAQ+G,WACxD,iBAAZ/G,IACTA,EAAU,SAAUA,GAClB,IAAIiH,EAAQC,EAAYC,EAWxB,OAVAA,EAAY,gBAAkBtX,KAAKuX,MAAMpgB,YAA8B,IAAhBF,KAAKC,UAAiBkE,QAAQ,GACpE,yOACjBic,EAAavU,SAAS0U,cAAc,QACzBnW,MAAMoW,QAFA,wOAGjBJ,EAAWH,UAAY,8CAAmDI,EAAY,OACtFxU,SAASiR,KAAK2D,YAAYL,IAC1BD,EAAS7J,OAAOoK,OAAOL,IAChBxU,SAASF,OAChBwU,EAAOtU,SAAS8U,QAAQzH,GACxBiH,EAAOtU,SAAS+U,QACTT,EAAOtU,SAASiR,KAZf,CAaR5D,EAAQrS,QAAQ,sBAAuB,MAE3C,IACEtC,EADEyO,EAAI,IAAIiE,EAAS4D,EAAKhM,EAAGC,EAAG+O,GAchC,OARAtG,EAAS9W,KAAKhB,KAAMyZ,EAASlG,EAAG6K,EAAShE,gBAAiB,SAAU8E,GAClEnH,EAAe0B,EAASlG,EAAG6K,EAAShE,iBACpCrD,EAAiB0C,EAASlG,EAAG6K,EAAShE,iBAEtC7G,EAAE6H,IAAIrO,SAASxI,OAAO3D,QAAQ,yBAC9BkE,EAAMyO,EAAE6N,UACgB,mBAAbjhB,EAAyBA,EAAS2E,GAAcoa,GAAc5d,QAAQC,MAAM,sEAElFuD,GAAO,CACZsK,EAAGmE,EAAEnE,EACLC,EAAGkE,EAAElE,KAjgBTmI,EAAW,SAAkB4D,EAAKhM,EAAGC,EAAG+O,GAQtC,OAPApe,KAAKob,IAAMA,EACXpb,KAAKoP,EAAIA,EACTpP,KAAKqP,EAAIA,EACTrP,KAAKoe,SAAWA,EAEhBpe,KAAKse,eAAiB,GACtBte,KAAKqhB,OACErhB,OA4fAtE,UAAU2lB,KAAO,WAKxB,OAJArhB,KAAKshB,UAAY,CACf7kB,KAAM,GACNkO,MAAO,IAEF3K,KAAKob,IAAIrO,SAASI,MAAM,MAEjCqK,EAAS9b,UAAU0lB,QAAU,WAE3B,OADAphB,KAAKob,IAAIrO,SAASI,MAAM,KACjB,CACLiC,EAAGpP,KAAKoP,EACRC,EAAGrP,KAAKqP,EACRkS,OAAO,IAMX/J,EAAS9b,UAAU8gB,sBAAwB,SAAU5C,GACnD,IAAI4H,GAAM,EACNC,EAAS,GACb,GAAIzhB,KAAKse,eAAe5c,OAAS,EAAG,CAClC,IAAK,IAAIuE,EAAI,EAAGA,EAAIjG,KAAKse,eAAe5c,SAAUuE,GACb,IAA/BjG,KAAKse,eAAerY,GAAG2T,GACzB4H,GAAM,EAENC,EAAOhgB,KAAKzB,KAAKse,eAAerY,IAGpCjG,KAAKse,eAAiBmD,EAExB,OAAOD,GAEThK,EAAS9b,UAAUgmB,wBAA0B,SAAUC,EAAWC,GAChE,IAAIC,EAAoCC,EAAIC,EAAaC,EAAkB5J,EAAU6J,EAAiBC,EAAgBC,EAAyBC,EAAIhgB,EAAGoP,EAAMK,EAAOd,EAAepG,EAgBlL,IAfkB,GAClBvI,EAAIpC,KAAKob,IAAIrO,SAASc,YACtBmU,EAAmB,GACnBF,OAAK,EACLM,OAAK,EACLL,OAAc,EACd3J,OAAW,EACXzN,OAAQ,EACRwX,OAA0B,EAC1BD,OAAiB,EACjBD,OAAkB,EAElBpQ,EAAQ,CADRL,EAAO,IAEPqQ,EAAoB,EACpB9Q,EAAgB/Q,KAAKoe,SAAS9W,MACvBqa,EAAUjgB,QAGf,GAFA0W,EAAWuJ,EAAUjR,QACrB/F,EAAQiX,EAAOlR,QACX0H,EAeF,IAZA2J,EAAcC,GAFdF,EAAKnX,EAAM,iBACXyX,EAAKzX,EAAM,mBAGToX,EAAc/hB,KAAKob,IAAIrO,SAASC,QAAQ8U,EAAIM,GAAItc,SAASuc,QACzDL,EAAiBF,EAAKM,GAAML,GAE9BI,EAA0B,CACxBG,OAAQP,EAAYO,OACpBC,QAASR,EAAYQ,QACrBxmB,SA7BY,GA6BF4O,EAAM,aAChB6X,WAAYX,GAEdK,EAAiBliB,KAAKob,IAAIve,mBAAmBub,EAAU+J,GAA2BA,EAAwBpmB,SAAWqG,EACrG,UAAZgW,EACF5G,EAAO,GACPK,EAAMpQ,KAAK+P,QACN,GAAIqQ,EAAoBK,EAAiBnR,EAAe,CAG7D,IAFAkR,EAAkBjiB,KAAKob,IAAIqH,gBAAgBrK,EAAUrH,EAAeoR,GACpE3Q,EAAK/P,KAAK,CAACwgB,EAAgBvR,QAAS/F,IAC7BsX,EAAgBvgB,QACrB8P,EAAO,CAAC,CAACyQ,EAAgBvR,QAAS/F,IAClCkH,EAAMpQ,KAAK+P,GAEbqQ,EAAoB7hB,KAAKob,IAAIve,mBAAmB2U,EAAK,GAAG,GAAI2Q,GAA2BA,EAAwBpmB,SAAWqG,OAE1HoP,EAAK/P,KAAK,CAAC2W,EAAUzN,IACrBkX,GAAqBK,EAM3B,QAA4Blb,IAAxB2D,EAAM,gBAAwD,WAAxBA,EAAM,eAAsD,UAAxBA,EAAM,eAAqD,YAAxBA,EAAM,eACrH,IAAK,IAAI1E,EAAI,EAAGA,EAAI4L,EAAMnQ,SAAUuE,EAAG,CACrC,IAAIvE,EAAS1B,KAAKob,IAAIve,mBAAmBgV,EAAM5L,GAAG,GAAG,GAAIkc,GAA2BA,EAAwBpmB,SAAWqG,EAEnH6D,EAAI,IACN4L,EAAM5L,GAAG,GAAG,GAAK6Q,EAAMjF,EAAM5L,GAAG,GAAG,KAErC,IAAIyc,EAAQ3R,EAAgBrP,EAC5B,GAA4B,UAAxBiJ,EAAM,cACRkH,EAAM5L,GAAG,GAAG,GAAG,eAAiByc,OAE3B,GAA4B,WAAxB/X,EAAM,cACfkH,EAAM5L,GAAG,GAAG,GAAG,eAAiByc,EAAQ,OAEnC,GAA4B,YAAxB/X,EAAM,cAA6B,CAC5C,IAAIgY,EAAc9Q,EAAM5L,GAAG,GAAG,GAAGyG,MAAM,KAAKhL,OAAS,EACrDmQ,EAAM5L,GAAG,GAAG,GAAG,gBAAkByc,EAAQC,EAErC1c,IAAM4L,EAAMnQ,OAAS,IACvBmQ,EAAM5L,GAAG,GAAG,GAAG,gBAAkB,IAKzC,OAAO4L,GAET2F,EAAS9b,UAAUknB,mBAAqB,SAAUnmB,EAAMkO,GACtD,IAAqBrF,EAAMud,EAC3BA,EAAgB,EAEZ7iB,KAAKob,IAAIrO,SAASe,SAASvG,OAASvH,KAAKob,IAAIwB,YAAYgB,OAAS5d,KAAKqP,EAAIrP,KAAKob,IAAIrO,SAASE,gBAC/FjN,KAAKob,IAAIrO,SAASI,MAAM,KAAM,KAC9BnN,KAAKob,IAAI/M,UACTrO,KAAKqP,EAAIrP,KAAKob,IAAIwB,YAAYC,IAC9B7c,KAAKob,IAAIrO,SAASI,MAAM,IAAK,SAAUnN,KAAKob,IAAIrO,SAASM,oBAAoBrN,KAAKoP,GAAIpP,KAAKob,IAAIrO,SAASQ,4BAA4BvN,KAAKqP,GAAI1E,EAAM8J,MAAO,MAE1JoO,EAAgBtiB,KAAK6Q,IAAIyR,EAAelY,EAAM,eAAgBA,EAAM,cACpE3K,KAAKob,IAAIrO,SAASI,MAAM,IAAI,GAAuB0V,GAAene,QAAQ,GAAI,OAEhFY,EAAOtF,KAAKob,IAAIrO,SAASC,QAAQrC,EAAM,eAAgBA,EAAM,eAG7D,IAAImY,EAAe9iB,KAAK+iB,YAAYpY,EAAa,OAC7CmY,IAAiB9iB,KAAKgjB,gBACxBhjB,KAAKob,IAAIrO,SAASI,MAAM2V,GACxB9iB,KAAKgjB,cAAgBF,QAIO9b,IAA1B2D,EAAM,iBAAiCA,EAAM,gBAAkB,GACjE3K,KAAKob,IAAIrO,SAASI,MAAMxC,EAAM,gBAAgBjG,QAAQ,GAAI,MAE5D1E,KAAKob,IAAIrO,SAASI,MAAM,IAAM7H,EAAKhF,IAvBjB,GAuBwCqK,EAAM,cAAcjG,QAAQ,GAAI,KAAM,IAAM1E,KAAKob,IAAIrO,SAAShH,UAAUtJ,GAAQ,aAG5GuK,IAA1B2D,EAAM,iBACR3K,KAAKob,IAAIrO,SAASI,MAAM,EAAG,OAK/BqK,EAAS9b,UAAUqnB,YAAc,SAAUpY,GACzC,IACI4I,EAAGsB,EAAGC,EAENnI,EADK,0CACEsW,KAAKtY,GAmBhB,GAlBS,MAALgC,GACF4G,EAAI1O,SAAS8H,EAAE,IACfkI,EAAIhQ,SAAS8H,EAAE,IACfmI,EAAIjQ,SAAS8H,EAAE,MAEQ,KAAnBhC,EAAMuP,OAAO,MACfvP,EAAQuY,EAAUC,eAAexY,MAE/BA,EAAQ,YAGZ4I,EAAI5I,EAAMyY,UAAU,EAAG,GACvB7P,EAAI1O,SAAS0O,EAAG,IAChBsB,EAAIlK,EAAMyY,UAAU,EAAG,GACvBvO,EAAIhQ,SAASgQ,EAAG,IAChBC,EAAInK,EAAMyY,UAAU,EAAG,GACvBtO,EAAIjQ,SAASiQ,EAAG,KAED,iBAANvB,GAAkB,oBAAoBwB,KAAKxB,GAAI,CACxD,IAAIyB,EAAMnQ,SAAS0O,EAAE9L,OAAO,GAAI,IAChC8L,EAAIyB,GAAO,GAAK,IAChBH,EAAIG,GAAO,EAAI,IACfF,EAAU,IAANE,EAEN,IAAIrQ,EAAK3E,KAAK2E,GAMd,OALU,IAAN4O,GAAiB,IAANsB,GAAiB,IAANC,QAAwB,IAAND,EAC9BlQ,EAAG4O,EAAI,KAAO,KAEd,CAAC5O,EAAG4O,EAAI,KAAM5O,EAAGkQ,EAAI,KAAMlQ,EAAGmQ,EAAI,KAAM,MAAM/N,KAAK,MAInEyQ,EAAS9b,UAAUiJ,GAAK,SAAUF,GAChC,OAAOA,EAAOC,QAAQ,IACrB8S,EAAS9b,UAAU2nB,gBAAkB,SAAUnH,GAChD,IAAIoH,EAA6BvF,EAAiB4D,EAAW1b,EAAGC,EAAGsL,EAAMK,EAAOgR,EAAe/d,EAAKye,EAAwBC,EAA0C5B,EAAQ7lB,EAW9K,GAVA4lB,EAAYpK,EAAgBvX,KAAKshB,UAAU7kB,MAC3CmlB,EAAS5hB,KAAKshB,UAAU3W,MACxB2Y,EAAatjB,KAAKshB,UAAUgC,WACVtjB,KAAKshB,UAAUmC,iBAAmB,GACpDzjB,KAAKshB,UAAY,CACf7kB,KAAM,GACNkO,MAAO,GACP2Y,WAAY,GACZG,gBAAiBH,GAEd3B,EAAU5a,KAAK,IAAI8R,OAAxB,CAGAhH,EAAQ7R,KAAK0hB,wBAAwBC,EAAWC,GAChDpQ,OAAO,EACPqR,OAAgB,EACE,GAClB9E,EADkB,GACkB/d,KAAKob,IAAIrO,SAASc,YACtD7N,KAAK0jB,kBAAoB1jB,KAAK0jB,mBAAqB,EACnDF,GAA2BjjB,KAAK6Q,KAAKkS,EAAW,eAAiB,GAAKtjB,KAAK0jB,kBAAmB,IAAMJ,EAAW,gBAAkB,IAAMvF,EACvIwF,IAA2BD,EAAW,kBAAoB,IAAMA,EAAW,mBAAqB,IAAMvF,EACtG/d,KAAK0jB,kBAAoBJ,EAAW,kBAAoB,EAChB,WAApCA,EAAW,uBACbtjB,KAAKob,IAAI/M,UACTrO,KAAKqP,EAAI,EACTmU,IAA4BF,EAAW,eAAiB,IAAMA,EAAW,gBAAkB,IAAMvF,GAEnGjZ,EAAM9E,KAAKob,IAAIrO,SAASI,MACxBlH,OAAI,EACJC,OAAI,EACJlG,KAAKqP,GAAKmU,EACV1e,EAAI,IAAK,SAAU9E,KAAKob,IAAIrO,SAASM,oBAAoBrN,KAAKoP,GAAIpP,KAAKob,IAAIrO,SAASQ,4BAA4BvN,KAAKqP,GAAI,MAIzH,IADA,IAAIsU,EAAgB,EACb9R,EAAMnQ,QAAQ,CAKnB,IAHAmhB,EAAgB,EAChB5c,EAAI,EACJC,GAHAsL,EAAOK,EAAMnB,SAGJhP,OACFuE,IAAMC,GACPsL,EAAKvL,GAAG,GAAG4S,SACbgK,EAAgBtiB,KAAK6Q,IAAIyR,EAAerR,EAAKvL,GAAG,GAAG,eAAgBuL,EAAKvL,GAAG,GAAG,cAC9ElK,EAAqC,EAA1ByV,EAAKvL,GAAG,GAAG,cAExBA,IAGF,IAAI2d,EAAa,EACbC,EAAe,EAYnB,SAVkC7c,IAA9BwK,EAAK,GAAG,GAAG,gBAAgCA,EAAK,GAAG,GAAG,eAAiB,IAEzEoS,GADAC,EAAe7jB,KAAKob,IAAIrO,SAASM,oBAAoBmE,EAAK,GAAG,GAAG,iBACpCmS,EAC5BA,EAAgBE,GAIlB/e,EAAI8e,EAFarjB,KAAK6Q,IAAIkS,EAAW,gBAAkB,EAAG,GAAKvF,IAEjC,GAAuB8E,GAAene,QAAQ,GAAI,MAChFuB,EAAI,EACJC,EAAIsL,EAAK9P,OACFuE,IAAMC,GACPsL,EAAKvL,GAAG,IACVjG,KAAK4iB,mBAAmBpR,EAAKvL,GAAG,GAAIuL,EAAKvL,GAAG,IAE9CA,IAOF,GALAjG,KAAKqP,GAAKwT,EAAgB9E,EAKtB/d,KAAKwc,sBAAsBhL,EAAK,GAAG,KAAOK,EAAMnQ,OAAS,EAAG,CAC9D,IAAIoiB,EAAiB,GACjBC,EAAc,GAElBlS,EAAMlQ,QAAQ,SAAUqiB,GAGtB,IAFA,IAAI/d,EAAI,EACJC,EAAI8d,EAAUtiB,OACXuE,IAAMC,GACP8d,EAAU/d,GAAG,KACf6d,EAAeriB,KAAKuiB,EAAU/d,GAAG,GAAK,KACtC8d,EAAYtiB,KAAKuiB,EAAU/d,GAAG,OAE9BA,IAIN4L,EAAQ7R,KAAK0hB,wBAAwBnK,EAAgBuM,GAAiBC,GAEtEjf,EAAI,KAAM,KACVA,EAAI,IAAK,SAAU9E,KAAKob,IAAIrO,SAASM,oBAAoBrN,KAAKoP,GAAIpP,KAAKob,IAAIrO,SAASQ,4BAA4BvN,KAAKqP,GAAI,OAO7H,OAJI6M,GAAoB,mBAAPA,GACfA,EAAGlb,KAAKhB,KAAMA,KAAKoP,EAAI,EAAGpP,KAAKqP,EAAItT,EAAW,GAEhD+I,EAAI,KAAM,KACH9E,KAAKqP,GAAKkU,IAEnB/L,EAAS9b,UAAU2gB,iBAAmB,SAAUH,GAC9C,OAAOlc,KAAKqjB,gBAAgBnH,IAE9B1E,EAAS9b,UAAU4gB,cAAgB,SAAU5C,GAC3C,OAAO1Z,KAAKshB,UAAUgC,WAAa5J,GAErClC,EAAS9b,UAAU6hB,QAAU,SAAU9gB,EAAMid,GAE3C,OADA1Z,KAAKshB,UAAU7kB,KAAKgF,KAAKhF,GAClBuD,KAAKshB,UAAU3W,MAAMlJ,KAAKiY,IAEnC1C,EAAa,CACXiN,UAAW,YACXC,aAAc,YACdC,kBAAmB,QACnBC,MAAO,QACPC,MAAO,QACPC,UAAW,UACXC,QAAS,WAEXpN,EAAgB,CACdqN,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,IAAK,OACLC,OAAQ,SACRC,KAAM,OACNC,OAAQ,OACRC,QAAS,UAEXnO,EAAe,CACbgO,OAAQ,SACRI,OAAQ,SACRC,QAAS,UAEXpO,EAAe,CACbrG,KAAM,OACN0U,MAAO,QACPC,OAAQ,SACRC,QAAS,WAEXrO,EAAW,CACTsO,KAAM,OACNH,MAAO,QACP1U,KAAM,QAERwG,EAAW,CACTqO,KAAM,OACNC,KAAM,QAERhO,EAAkB,CAChBsN,OAAQ,GAqBVppB,EAAS+pB,SAAW,SAAUC,EAAMzW,EAAGC,EAAG+O,EAAUje,EAAU4e,GAS5D,OANA/e,KAAK4c,YAAcmC,GAAW,CAC5BlC,IAAK,EACLe,OAAQ,GAELQ,IAAUA,EAAW,IACrBA,EAAShE,kBAAiBgE,EAAShE,gBAAkB,IACnDpC,EAAQhY,KAAM6lB,EAAM9M,MAAM3J,GAAK,EAAIA,EAAG2J,MAAM1J,GAAK,EAAIA,EAAG+O,EAAUje,IA56B7E,CA86BGnD,EAAMN,KAeEb,EAoXRmB,EAAMN,IAzWLR,EAAc,CACZkT,OAAGpI,EACHqI,OAAGrI,EACH2L,OAAG3L,EACH4L,OAAG5L,EACH8e,QAAI9e,GAEN7K,EAAQ,EACRC,EAAsB,SAA6BgT,EAAGC,EAAGsD,EAAGC,EAAGkT,GAC7D5pB,EAAc,CACZkT,EAAKA,EACLC,EAAKA,EACLsD,EAAKA,EACLC,EAAKA,EACLkT,GAAMA,IAGVzpB,EAAsB,WACpB,OAAOH,GAETI,EAAa,CACXuU,KAAM,EACNgM,IAAK,EACLe,OAAQ,GAEZ/hB,EAASkqB,kBAAoB,SAAUC,GACrC/pB,EAAiB+pB,GAEnBnqB,EAASoqB,kBAAoB,SAAUC,GAKrC,IACEC,EACA1pB,EANFX,EAAWkE,KAAK+M,SAASC,UAAUlR,SACnCC,EAAWiE,KAAKomB,iBAAmBpmB,KAAK+M,SAASE,cACjDjR,EAAYgE,KAAK+M,SAASC,UAAUhR,WAKpCS,EAAO2P,SAAS0U,cAAc,SACzBxgB,GAAK,YACV,IACE7D,EAAKkO,MAAM3O,UAAYA,EACvB,MAAOgM,GACPvL,EAAKkO,MAAM0b,WAAarqB,EAE1BS,EAAKkO,MAAM7O,SAAWA,EACtBW,EAAKkO,MAAM5O,SAAWA,EAAW,KACjC,IACEU,EAAKye,YAAcgL,EACnB,MAAOle,GACPvL,EAAK6pB,UAAYJ,EAQnB,OANA9Z,SAASiR,KAAK2D,YAAYvkB,GAC1B0pB,EAAa,CACXxT,GAAIlW,EAAK8pB,YAAc,IAnBb,UAAgB,MAoB1B3T,GAAInW,EAAK+pB,aAAe,IApBd,UAAgB,OAsB5Bpa,SAASiR,KAAKoJ,YAAYhqB,GACnB0pB,GAETtqB,EAAS6qB,YAAc,WACrB,IAAI3H,EAAU/e,KAAK+e,SAAWziB,EAC9B0D,KAAKqO,UACLjS,EAAoB2iB,EAAQlO,KAAMkO,EAAQlC,SAAK7V,OAAWA,GAE1D7K,GAAS,GAEXN,EAAS8qB,eAAiB,WACxBzqB,EAAc,CACZkT,OAAGpI,EACHqI,OAAGrI,EACH2L,OAAG3L,EACH4L,OAAG5L,EACH8e,QAAI9e,GAEN7K,EAAQ,GAEVN,EAASif,KAAO,SAAU1L,EAAGC,EAAGsD,EAAGC,EAAGsT,EAAKJ,EAAIvW,GAC7C,IAAIqX,EAAUvqB,IACVwqB,GAAU,EAGd,QAAmB7f,IAAf4f,EAAQd,GACV,GAAIc,EAAQd,KAAOA,EAEjB1W,EAAIwX,EAAQxX,EAAIwX,EAAQjU,EACxBtD,EAAIuX,EAAQvX,MACP,CAEL,IAAI0P,EAAU/e,KAAK+e,SAAWziB,EAC1BsqB,EAAQvX,EAAIuX,EAAQhU,EAAIA,EA1FvB,IA0FqC5S,KAAK+M,SAASe,SAASvG,OAASwX,EAAQnB,SAChF5d,KAAK0mB,cACLG,GAAU,EACN7mB,KAAK8e,cAAgB9e,KAAK8mB,gBAC5B9mB,KAAK+mB,eAAejB,GAAI,IAI5BzW,EAAIhT,IAAsBgT,EAAIhT,IAAsBuW,EAChDiU,IAASxX,EAAI2X,IAGrB,QAAehgB,IAAXkf,EAAI,GAMN,GALIlmB,KAAKinB,kBACPjnB,KAAK0S,KAAKtD,EAAGC,EAAGsD,EAAGC,EAAG,MAEtB5S,KAAK0S,KAAKtD,EAAGC,EAAGsD,EAAGC,GAEP,UAAVrD,EAAmB,CACf2W,aAAeplB,QACnBolB,EAAM,CAACA,IAET,IAAK,IAAIjgB,EAAI,EAAGA,EAAIigB,EAAIxkB,OAAQuE,IAAK,CACnC,IAAIihB,EAAchB,EAAIjgB,GAClBkhB,EAAWnnB,KAAKnD,mBAAmBqqB,GAAelnB,KAAK+M,SAASE,cACpEjN,KAAKvD,KAAKyqB,EAAa9X,EAAIuD,EAAIwU,EApH3B,EAoH+C9X,EAAIrP,KAAK+M,SAASG,iBAAmBjH,EAAI,UAG9FjG,KAAKvD,KAAKypB,EAAK9W,EAvHT,EAuHsBC,EAAIrP,KAAK+M,SAASG,iBAIlD,OADA9Q,EAAoBgT,EAAGC,EAAGsD,EAAGC,EAAGkT,GACzB9lB,MASTnE,EAASurB,SAAW,SAAUjP,EAAOkP,GACnC,IACEphB,EACA6f,EACAwB,EAHElW,EAAM+G,EAAM,GAIhB,IAAKlS,EAAI,EAAG6f,EAAK3N,EAAMzW,OAAQuE,EAAI6f,EAAI7f,GAAK,EAC1CqhB,EAAOnP,EAAMlS,GACTohB,GAC+B,IAA7BA,EAAajW,EAAKkW,KACpBlW,EAAMkW,GAGJA,EAAOlW,IACTA,EAAMkW,GAIZ,OAAOlW,GAeTvV,EAAS2e,MAAQ,SAAUpL,EAAGC,EAAGvE,EAAM2P,EAAS8M,GAC9C,IAAKzc,EACH,KAAM,wBAER,IAEE4R,EACAzW,EACA6f,EACA0B,EAGAC,EACAC,EAEAhN,EAEAiN,EACAC,EACA5B,EAfE6B,EAAc,GAChBC,EAAgB,GAKhBC,EAAe,GACfC,EAAe,GAGfC,EAAkB,GAElBC,EAAqB,GAKrBrJ,GAAW,EACXC,GAAe,EACf/iB,EAAW,GACXgjB,EAAUziB,EAuCZ,GAtCAyiB,EAAQzX,MAAQtH,KAAK+M,SAASe,SAASxG,MACnCigB,KAEsB,IAApBA,EAAO1I,WACTA,GAAW,IAEe,IAAxB0I,EAAOzI,eACTA,GAAe,GAEbyI,EAAOxrB,WACTA,EAAWwrB,EAAOxrB,UAEhBwrB,EAAO7N,UAA0C,IAA5B6N,EAAO7N,IAAI,eAClC3d,EAAqC,GAA1BwrB,EAAO7N,IAAI,cAEpB6N,EAAOxI,UACTA,EAAUwI,EAAOxI,UAQrB/e,KAAKmoB,MAAQ,EACbjsB,EAAc,CACZkT,OAAGpI,EACHqI,OAAGrI,EACH2L,OAAG3L,EACH4L,OAAG5L,EACH8e,QAAI9e,GACH7K,EAAQ,EACX6D,KAAK8e,aAAeA,EACpB9e,KAAK+e,QAAUA,EACf/e,KAAK2T,YAAY5X,GACjBiE,KAAKomB,gBAAkBrqB,EAGnB0e,MAAAA,EAEFoN,EAAcjiB,OAAOC,KAAKiF,EAAK,SAC1B,GAAI2P,EAAQ,IAA4B,iBAAfA,EAAQ,GAItC,IAAKxU,EAAI,EAAG6f,EAAKrL,EAAQ/Y,OAAQuE,EAAI6f,EAAI7f,GAAK,EAC5CyW,EAASjC,EAAQxU,GACjB4hB,EAAYpmB,KAAKib,EAAO/D,MACxBmP,EAAcrmB,KAAKib,EAAOvB,QAC1B6M,EAAatL,EAAO/D,MAAQ+D,EAAOpV,OAPzB,UAAgB,WAU5BugB,EAAcpN,EAEhB,GAAIoE,EAKF,IAHAmH,EAAO,SAAcoC,GACnB,OAAOA,EAAI1L,IAERzW,EAAI,EAAG6f,EAAK+B,EAAYnmB,OAAQuE,EAAI6f,EAAI7f,GAAK,EAAG,CASnD,IAPA8hB,EADArL,EAASmL,EAAY5hB,IACE6E,EAAKoG,IAAI8U,GAGhCiC,EAAgBxmB,KAAKzB,KAAKimB,kBAAkB6B,EAAc7hB,IAAMyW,GAAQ/J,GAInE+H,EAAI,EAAG8M,GAHZE,EAASK,EAAarL,IAGGhb,OAAQgZ,EAAI8M,EAAK9M,GAAK,EAC7C+M,EAAaC,EAAOhN,GACpBuN,EAAgBxmB,KAAKzB,KAAKimB,kBAAkBwB,GAAY9U,GAI1DqV,EAAatL,GAAU7gB,EAASurB,SAASa,GAGzCA,EAAkB,GAMtB,GAAInJ,EAAc,CAChB,IAAI5b,EAAalD,KAAKqoB,oBAAoBR,EAAaG,EAAcF,EAAcpmB,OAASomB,EAAgBD,GAG5G,IAAK5hB,EAAI,EAAG6f,EAAK+B,EAAYnmB,OAAQuE,EAAI6f,EAAI7f,GAAK,EAChDyW,EAASmL,EAAY5hB,GACrBiiB,EAAmBzmB,KAAK,CAAC2N,EAAGC,EAAG2Y,EAAatL,GAASxZ,EAAY2D,OAAOihB,EAAcpmB,OAASomB,EAAc7hB,GAAKyW,KAIpH1c,KAAKsoB,kBAAkBJ,GAGvBloB,KAAK+mB,eAAe,GAAG,GAIzB,IAAK9gB,EAAI,EAAG6f,EAAKhb,EAAKpJ,OAAQuE,EAAI6f,EAAI7f,GAAK,EAIzC,IAFA0hB,EAAQ7c,EAAK7E,GACb/C,EAAalD,KAAKqoB,oBAAoBR,EAAaG,EAAcL,GAC5DjN,EAAI,EAAGkN,EAAMC,EAAYnmB,OAAQgZ,EAAIkN,EAAKlN,GAAK,EAClDgC,EAASmL,EAAYnN,GACrB1a,KAAK8a,KAAK1L,EAAGC,EAAG2Y,EAAatL,GAASxZ,EAAYykB,EAAMjL,GAASzW,EAAI,EAAGyW,EAAOnN,OAMnF,OAHAvP,KAAK9D,YAAcA,EACnB8D,KAAKuoB,QAAUnZ,EACfpP,KAAKwoB,QAAUnZ,EACRrP,MAQTnE,EAASwsB,oBAAsB,SAAUR,EAAaG,EAAcL,GAGlE,IAFA,IAAIjL,EACFxZ,EAAa,EACNwX,EAAI,EAAGA,EAAImN,EAAYnmB,OAAQgZ,IAAK,CAE3CiN,EADAjL,EAASmL,EAAYnN,IACL1a,KAAKyiB,gBAAgB5b,OAAO8gB,EAAMjL,IAAUsL,EAAatL,GA1TjE,GA2TR,IAAI9J,EAAI5S,KAAK+M,SAASG,gBAAkBya,EAAMjL,GAAQhb,OA3T9C,EA4TJkR,EAAI1P,IAAYA,EAAa0P,GAEnC,OAAO1P,GASTrH,EAASysB,kBAAoB,SAAUf,GACrCvnB,KAAK8mB,eAAiBS,GAOxB1rB,EAASkrB,eAAiB,SAAU0B,EAAYC,GAC9C,IAAK1oB,KAAK8mB,eACR,KAAM,0CAER,IAAI6B,EAAiBC,EAAU3iB,EAAG6f,EAElC,GADA9lB,KAAKinB,mBAAoB,OACFjgB,IAAnB/K,EAA8B,CAChC,IAAI4sB,EAAW5sB,EAAe+D,KAAM7D,GACpCC,EAAoBysB,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAAK,GAE3E7oB,KAAK8T,aAAa,QAClB,IAAIgV,EAAiB,GACrB,IAAK7iB,EAAI,EAAG6f,EAAK9lB,KAAK8mB,eAAeplB,OAAQuE,EAAI6f,EAAI7f,GAAK,EACxDjG,KAAK0U,aAAa,IAAK,IAAK,KAC5BiU,EAAkB3oB,KAAK8mB,eAAe7gB,GAClCyiB,IACF1oB,KAAK+e,QAAQlC,KAAO,GACpB8L,EAAgB,GAAK3oB,KAAK+e,SAAW/e,KAAK+e,QAAQlC,KAAO,EACzDiM,EAAernB,KAAKknB,IAEtBC,EAAW,GAAGpY,OAAOmY,GACrB3oB,KAAK8a,KAAK1Z,MAAMpB,KAAM4oB,EAASpY,OAAOiY,IAEpCK,EAAepnB,OAAS,GAC1B1B,KAAKsoB,kBAAkBQ,GAEzB9oB,KAAK8T,aAAa,UAClB9T,KAAKinB,mBAAoB,GAiC1BjqB,EAAMN,IAfEqsB,MAAQ,SAAU7C,GAazB,OAZAzpB,EAAOypB,EACPlmB,KAAK+M,SAASxI,OAAOtE,UAAU,mBAAoB,SAAUimB,GAC3D3pB,EAAayD,KAAK+M,SAAS/H,YAC3BhF,KAAK+M,SAASI,MAAM,4BAA8B5Q,EAAa,GAAK,WAAY,UAChFC,EAAUwD,KAAK+M,SAAS/H,YACxBhF,KAAK+M,SAASI,MAAM,0BAA2B1Q,EAAM,OAAQ,YAE/DuD,KAAK+M,SAASxI,OAAOtE,UAAU,aAAc,gBACxB+G,IAAfzK,QAAwCyK,IAAZxK,GAC9BwD,KAAK+M,SAASI,MAAM,wBAA0B5Q,EAAa,YAGxDyD,MAgBX,SAAWnE,GAGTA,EAAS0I,OAAO9C,KAAK,CAAC,mBAAoB,WACxC,IAAI2Z,EAAMpb,KACN+S,EAAK,gBAgBT,GAAI/S,KAAKgpB,QAAQC,KAAKC,SAASxnB,OAAS,EAEtC,IADA,IAAImQ,EAAQuJ,EAAI4N,QAAQG,SAASzc,MAAM,QAC9BzG,EAAI,EAAGA,EAAI4L,EAAMnQ,OAAQuE,IAAK,CACrC,IAAIuL,EAAOK,EAAM5L,GACb0G,EAAIoG,EAAGkQ,KAAKzR,GAChB,GAAS,MAAL7E,EAAW,CACb,IAAIiB,EAAMjB,EAAE,GACZyO,EAAIrO,SAASY,uBAAuBC,GAEtCwN,EAAIrO,SAASI,MAAMqE,GAMvB,GAAIxR,KAAKgpB,QAAQI,wBAAyB,CACxC,IAAIC,EAAarpB,KAAK+M,SAAS5Q,MAAMuF,OAIjC4nB,EAAQ,GACZ,IAASrjB,EAAI,EAAGA,EAAIojB,EAAYpjB,IAAK,CACnC,IAAI3F,EAAK8a,EAAIrO,SAAS/H,YACtBskB,EAAM7nB,KAAKnB,GACX,IAAIipB,EAAOnO,EAAIrO,SAASiB,YAAY/H,EAAI,GACxCmV,EAAIrO,SAASI,MAAM,SAAWoc,EAAKtgB,MAAQ,sCAI7C,IAAIugB,EAAYpO,EAAIrO,SAAS/H,YAC7BoW,EAAIrO,SAASI,MAAM,gBACnB,IAASlH,EAAI,EAAGA,EAAIqjB,EAAM5nB,OAAQuE,IAChCmV,EAAIrO,SAASI,MAAM,UAAYlH,EAAI,GAAK,IAAMqjB,EAAMrjB,GAAK,QAE3DmV,EAAIrO,SAASI,MAAM,QAAS,UAMbiO,EAAIrO,SAAS/H,YAC5BoW,EAAIrO,SAASI,MAAM,aAAeqc,EAAY,QAC9CpO,EAAIrO,SAASI,MAAM,KAAM,cAG7BtR,EAAS0I,OAAO9C,KAAK,CAAC,aAAc,WACxBzB,KACFgpB,QAAQC,KAAKC,SAASxnB,OAAS,IAD7B1B,KAEJ+M,SAASI,MAAM,YAAanN,KAAKgpB,QAAQS,QAAQzpB,KAAKgpB,QAAQC,OAC9DjpB,KAAKgpB,QAAQI,yBAHTppB,KAIF+M,SAASI,MAAM,UAAYuc,SAAW,YAOhD7tB,EAAS0I,OAAO9C,KAAK,CAAC,cAAe,WACnC,IAAI2Z,EAAMpb,KACVob,EAAI4N,QAAU,CACZI,yBAAyB,EACzBH,KAAM,CACJC,SAAU,KASd9N,EAAI4N,QAAQW,IAAM,SAAUC,EAAQ1lB,EAAOlC,GACzC,IAAIslB,EAAO,CACTpjB,MAAOA,EACPlC,QAASA,EACTknB,SAAU,IAMZ,OAJc,MAAVU,IACFA,EAAS5pB,KAAKipB,MAEhBW,EAAOV,SAASznB,KAAK6lB,GACdA,GAETlM,EAAI4N,QAAQG,OAAS,WAOnB,OANAnpB,KAAK6pB,IAAM,GACX7pB,KAAK6pB,IAAIC,IAAM,GACf9pB,KAAK6pB,IAAIzO,IAAMA,EACfpb,KAAK+pB,SAAS/pB,KAAKipB,MACnBjpB,KAAKgqB,WAAWhqB,KAAKipB,MACrBjpB,KAAKiqB,YAAYjqB,KAAKipB,MACfjpB,KAAK6pB,IAAIC,KAElB1O,EAAI4N,QAAQe,SAAW,SAAUG,GAC/BA,EAAK5pB,GAAK8a,EAAIrO,SAASW,oBACvB,IAAK,IAAIzH,EAAI,EAAGA,EAAIikB,EAAKhB,SAASxnB,OAAQuE,IACxCjG,KAAK+pB,SAASG,EAAKhB,SAASjjB,KAGhCmV,EAAI4N,QAAQgB,WAAa,SAAUE,GACjClqB,KAAKmqB,SAASD,GACdlqB,KAAKwR,KAAK,mBACN0Y,EAAKhB,SAASxnB,OAAS,IACzB1B,KAAKwR,KAAK,UAAYxR,KAAKypB,QAAQS,EAAKhB,SAAS,KACjDlpB,KAAKwR,KAAK,SAAWxR,KAAKypB,QAAQS,EAAKhB,SAASgB,EAAKhB,SAASxnB,OAAS,MAEzE1B,KAAKwR,KAAK,UAAYxR,KAAKoqB,QAAQ,CACjCC,MAAO,GACNH,IACHlqB,KAAKsqB,UAEPlP,EAAI4N,QAAQiB,YAAc,SAAUC,GAClC,IAAK,IAAIjkB,EAAI,EAAGA,EAAIikB,EAAKhB,SAASxnB,OAAQuE,IAAK,CAC7C,IAAIqhB,EAAO4C,EAAKhB,SAASjjB,GACzBjG,KAAKmqB,SAAS7C,GACdtnB,KAAKwR,KAAK,UAAYxR,KAAKuqB,WAAWjD,EAAKpjB,QAC3ClE,KAAKwR,KAAK,WAAaxR,KAAKypB,QAAQS,IAChCjkB,EAAI,GACNjG,KAAKwR,KAAK,SAAWxR,KAAKypB,QAAQS,EAAKhB,SAASjjB,EAAI,KAElDA,EAAIikB,EAAKhB,SAASxnB,OAAS,GAC7B1B,KAAKwR,KAAK,SAAWxR,KAAKypB,QAAQS,EAAKhB,SAASjjB,EAAI,KAElDqhB,EAAK4B,SAASxnB,OAAS,IACzB1B,KAAKwR,KAAK,UAAYxR,KAAKypB,QAAQnC,EAAK4B,SAAS,KACjDlpB,KAAKwR,KAAK,SAAWxR,KAAKypB,QAAQnC,EAAK4B,SAAS5B,EAAK4B,SAASxnB,OAAS,MAEzE,IAAI2oB,EAAQrqB,KAAKqqB,MAAQrqB,KAAKoqB,QAAQ,CACpCC,MAAO,GACN/C,GAIH,GAHI+C,EAAQ,GACVrqB,KAAKwR,KAAK,UAAY6Y,GAEpB/C,EAAKtlB,SACHslB,EAAKtlB,QAAQ4F,WAAY,CAG3B,IAAI2hB,EAAOnO,EAAIrO,SAASiB,YAAYsZ,EAAKtlB,QAAQ4F,YACjD5H,KAAKwR,KAAK,UAAiB+X,EAAKtgB,MAAQ,eAAiBjJ,KAAK6pB,IAAIzO,IAAIrO,SAASe,SAASvG,OAAS,OAcrGvH,KAAKsqB,SAEP,IAASrkB,EAAI,EAAGA,EAAIikB,EAAKhB,SAASxnB,OAAQuE,IAAK,CACzCqhB,EAAO4C,EAAKhB,SAASjjB,GACzBjG,KAAKiqB,YAAY3C,KAGrBlM,EAAI4N,QAAQxX,KAAO,SAAU/U,GAC3BuD,KAAK6pB,IAAIC,KAAOrtB,EAAO,QAEzB2e,EAAI4N,QAAQS,QAAU,SAAUS,GAC9B,OAAOA,EAAK5pB,GAAK,QAEnB8a,EAAI4N,QAAQuB,WAAa,SAAUT,GACjC,MAAO,IAAM1O,EAAIrO,SAAShH,UAAU+jB,GAAO,KAE7C1O,EAAI4N,QAAQmB,SAAW,SAAUD,GAC/BlqB,KAAK6pB,IAAIC,KAAO,OAASI,EAAK5pB,GAAK,oBAErC8a,EAAI4N,QAAQsB,OAAS,SAAUJ,GAC7BlqB,KAAK6pB,IAAIC,KAAO,qBAElB1O,EAAI4N,QAAQoB,QAAU,SAAUP,EAAKK,GACnC,IAAK,IAAIjkB,EAAI,EAAGA,EAAIikB,EAAKhB,SAASxnB,OAAQuE,IACxC4jB,EAAIQ,QACJrqB,KAAKoqB,QAAQP,EAAKK,EAAKhB,SAASjjB,IAElC,OAAO4jB,EAAIQ,UAvMjB,CA2MGrtB,EAAMN,KAWT,SAAWb,GAmCT,IAME2uB,EAAmB,WACjB,IAAIC,EAA2B,mBAAb9hB,EAClB,IAAK8hB,EAAM,MAAM,IAAIvjB,MAAM,uCAC3B,OAAOujB,GAETC,EAAgB,SAAuBC,EAAOC,EAAYC,EAAgBC,GACxE,IAAIC,EAAQ,EACVC,EAAgBC,EAClB,OAAQH,GACN,KAAKjvB,EAASqvB,kBAAkBC,KAC9BJ,EAAQ,EACRC,EAAgBI,EAChB,MACF,KAAKvvB,EAASqvB,kBAAkBG,OAC9BN,EAAQ,EACRC,EAAgBM,EAChB,MACF,KAAKzvB,EAASqvB,kBAAkBK,KAC9BR,EAAQ,EACRC,EAAgBQ,EAGpBb,EAAQc,EAAqBd,EAAOC,EAAYC,EAAgBG,GAChE,IAAItO,EAAS,IAAI7Z,WAAW6oB,EAAiBX,IACzCY,EAAWtjB,EAAQsiB,GACnBiB,EAAU,IAAIjjB,EAASoiB,GACvBpW,EAAIiX,EAAQhjB,OAAO+hB,GACnBkB,EAASD,EAAQ/iB,QACjBkC,EAAM2R,EAAOhb,OAASiT,EAAEjT,OAASmqB,EAAOnqB,OACxCoqB,EAAO,IAAIjpB,WAAWkI,EAAM,GAQhC,OAPA+gB,EAAKhjB,IAAI4T,GACToP,EAAKhjB,IAAI6L,EAAG+H,EAAOhb,QACnBoqB,EAAKhjB,IAAI+iB,EAAQnP,EAAOhb,OAASiT,EAAEjT,QACnCoqB,EAAK/gB,KAAS4gB,IAAa,GAAK,IAChCG,EAAK/gB,KAAS4gB,IAAa,GAAK,IAChCG,EAAK/gB,KAAS4gB,IAAa,EAAI,IAC/BG,EAAK/gB,KAAoB,IAAX4gB,EACP9vB,EAASkwB,0BAA0BD,IAE5CJ,EAAmB,SAA0Bf,EAAOI,GAIlD,IAEIiB,EADQzrB,KAAK0rB,MAAQ1rB,KAAK2rB,IAAI,OAAU,GACzB,EAFV,EAGLC,EAAMH,GAAO,EAKjB,OAHAG,GADa5rB,KAAK6rB,IAAI,GAAIrB,EAAQ,EAAI,MAAS,IAC9B,EACjBoB,GAAO,EAEA,CAACH,EAAW,KADnBG,GAAO,GAAKA,EAAM,MAGpB9jB,EAAU,SAAiB8P,EAAOkU,GAOhC,IANA,IAIIC,EAHAC,EAAKC,EACPC,EAAKD,EACHzhB,EAAMoN,EAAMzW,OAEZuE,EAAI,EACD8E,EAAM,GAAG,CAEdA,GADAuhB,EAAOvhB,EAAMshB,EAAQA,EAAQthB,EAE7B,GAEE0hB,GADAF,GAAMpU,EAAMlS,aAEHqmB,GACXC,GAAM,MACNE,GAAM,MAER,OAAQA,GAAM,GAAKF,KAAQ,GAE7Bd,EAAuB,SAA8Bd,EAAOC,EAAYC,EAAgBG,GAQtF,IAPA,IAIExZ,EACAkb,EACAjiB,EANEoH,EAAQ8Y,EAAMjpB,OAASkpB,EACzB+B,EAAS,IAAI9pB,WAAW8nB,EAAMjpB,OAASmQ,GACvC+a,EAAiBC,IACjB5mB,EAAI,EAICA,EAAI4L,EAAO5L,IAAK,CAGrB,GAFAwE,EAASxE,EAAI2kB,EACbpZ,EAAOmZ,EAAMmC,SAASriB,EAAQA,EAASmgB,GACnCI,EACF2B,EAAO7jB,IAAIkiB,EAAcxZ,EAAMqZ,EAAgB6B,GAAWjiB,EAASxE,OAC9D,CAIL,IAHA,IAAIyU,EAAI,EACN3P,EAAM6hB,EAAelrB,OACrBqrB,EAAU,GACLrS,EAAI3P,EAAK2P,IACdqS,EAAQrS,GAAKkS,EAAelS,GAAGlJ,EAAMqZ,EAAgB6B,GAEvD,IAAIM,EAAMC,EAAsBF,EAAQvc,UACxCmc,EAAO7jB,IAAIikB,EAAQC,GAAMviB,EAASxE,GAEpCymB,EAAWlb,EAEb,OAAOmb,GAETO,EAAa,SAAoB1b,EAAMqZ,EAAgB6B,GAKrD,IAAIC,EAAS7rB,MAAMM,MAAM,GAAIoQ,GAE7B,OADAmb,EAAOQ,QAAQ,GACRR,GAETvB,EAAY,SAAmB5Z,EAAMqZ,EAAgB6B,GACnD,IAGE7b,EAHE8b,EAAS,GACX1mB,EAAI,EACJ8E,EAAMyG,EAAK9P,OAGb,IADAirB,EAAO,GAAK,EACL1mB,EAAI8E,EAAK9E,IACd4K,EAAOW,EAAKvL,EAAI4kB,IAAmB,EACnC8B,EAAO1mB,EAAI,GAAKuL,EAAKvL,GAAK4K,EAAO,IAAS,IAE5C,OAAO8b,GAET1B,EAAW,SAAkBzZ,EAAMqZ,EAAgB6B,GACjD,IAGEU,EAHET,EAAS,GACX1mB,EAAI,EACJ8E,EAAMyG,EAAK9P,OAGb,IADAirB,EAAO,GAAK,EACL1mB,EAAI8E,EAAK9E,IACdmnB,EAAKV,GAAYA,EAASzmB,IAAM,EAChC0mB,EAAO1mB,EAAI,GAAKuL,EAAKvL,GAAKmnB,EAAK,IAAS,IAE1C,OAAOT,GAETrB,EAAgB,SAAuB9Z,EAAMqZ,EAAgB6B,GAC3D,IAGE7b,EACAuc,EAJET,EAAS,GACX1mB,EAAI,EACJ8E,EAAMyG,EAAK9P,OAIb,IADAirB,EAAO,GAAK,EACL1mB,EAAI8E,EAAK9E,IACd4K,EAAOW,EAAKvL,EAAI4kB,IAAmB,EACnCuC,EAAKV,GAAYA,EAASzmB,IAAM,EAChC0mB,EAAO1mB,EAAI,GAAKuL,EAAKvL,GAAK,KAAU4K,EAAOuc,IAAO,GAAK,IAEzD,OAAOT,GAETnB,EAAc,SAAqBha,EAAMqZ,EAAgB6B,GACvD,IAGE7b,EACAuc,EACAC,EACAC,EANEX,EAAS,GACX1mB,EAAI,EACJ8E,EAAMyG,EAAK9P,OAMb,IADAirB,EAAO,GAAK,EACL1mB,EAAI8E,EAAK9E,IACd4K,EAAOW,EAAKvL,EAAI4kB,IAAmB,EACnCuC,EAAKV,GAAYA,EAASzmB,IAAM,EAChConB,EAASX,GAAYA,EAASzmB,EAAI4kB,IAAmB,EACrDyC,EAAQC,EAAe1c,EAAMuc,EAAIC,GACjCV,EAAO1mB,EAAI,GAAKuL,EAAKvL,GAAKqnB,EAAQ,IAAS,IAE7C,OAAOX,GAETY,EAAiB,SAAwB1c,EAAMuc,EAAIC,GACjD,IAAInlB,EAAI2I,EAAOuc,EAAKC,EAClBG,EAAQjtB,KAAKqJ,IAAI1B,EAAI2I,GACrB4c,EAAMltB,KAAKqJ,IAAI1B,EAAIklB,GACnBM,EAAUntB,KAAKqJ,IAAI1B,EAAImlB,GACzB,OAAOG,GAASC,GAAOD,GAASE,EAAU7c,EAAO4c,GAAOC,EAAUN,EAAKC,GAEzER,EAAmB,WACjB,MAAO,CAACK,EAAY9B,EAAWH,EAAUK,EAAeE,IAE1DyB,EAAwB,SAA+BU,GAMrD,IALA,IAEEC,EACAxB,EACAY,EAJE/mB,EAAI,EACN8E,EAAM4iB,EAAOjsB,OAIRuE,EAAI8E,KACT6iB,EAAMC,EAAOF,EAAO1nB,GAAGlF,MAAM,KACnBqrB,IAAQA,KAChBA,EAAMwB,EACNZ,EAAM/mB,GAERA,IAEF,OAAO+mB,GAETa,EAAS,SAAgB1V,GAIvB,IAHA,IAAIlS,EAAI,EACN8E,EAAMoN,EAAMzW,OACZksB,EAAM,EACD3nB,EAAI8E,GACT6iB,GAAOrtB,KAAKqJ,IAAIuO,EAAMlS,MAExB,OAAO2nB,GAsCX/xB,EAASiyB,WAAa,SAAUC,EAAWC,EAAYC,EAAOnD,EAAaoD,GAGzE,IAGE3O,EACA4O,EACAC,EACAC,EACAC,EACAC,EAREC,EAAaxuB,KAAKyuB,aAAaC,WACjCC,EAAS3uB,KAAK2uB,OAAOC,aACrBC,EAAM,EAYR,GADI7uB,KAAK8uB,cAAcf,KAAYA,EAAY,IAAIlrB,WAAWkrB,IAC1D/tB,KAAK+uB,kBAAkBhB,GAAY,CACrC,GAlQsB,mBAARiB,KAA6C,mBAAhBC,EAkQnB,MAAM,IAAI/nB,MAAM,2CAgBxC,GAdA6mB,GADAxO,EAAM,IAAIyP,IAAIjB,IACEmB,QAChBL,EAAMtP,EAAI4P,KACVX,EAAajP,EAAIiP,WACjBH,EAAS9O,EAAI8O,QAW0B,IAAnC,CAAC,EAAG,GAAG5hB,QAAQ8S,EAAI6P,WAAmB,CAIxC,GAAiB,IAAb7P,EAAI4P,KAUN,IATA,IAQEE,EAPAtkB,GADEukB,EAA+B,IAAtB/P,EAAIgQ,eAAuB,IAAIC,YAAYjQ,EAAIkQ,eAAeC,QAAgC,IAAtBnQ,EAAIgQ,eAAuB,IAAII,YAAYpQ,EAAIkQ,eAAeC,QAAU,IAAI7sB,WAAW0c,EAAIkQ,eAAeC,SAChLhuB,OACbwtB,EAAU,IAAIrsB,WAAWkI,EAAMwU,EAAI8O,QACnCuB,EAAY,IAAI/sB,WAAWkI,GAC3B8kB,EAAQtQ,EAAIgQ,eAAiBhQ,EAAI4P,KACjClpB,EAAI,EACJ4B,EAAI,EAGC5B,EAAI8E,EAAK9E,IAAK,CAGnB,IAFA6pB,EAAQR,EAAOrpB,GACfopB,EAAM,EACCA,EAAMQ,GACXX,EAAQrnB,KAAOioB,IAAUT,EAAM,IAC/BA,GAAY9P,EAAI4P,KAElBS,EAAU3pB,GAAK6pB,IAAUT,EAAM,IAOnC,GAAiB,KAAb9P,EAAI4P,KAAa,CAEjBpkB,GADEukB,EAAS,IAAIE,YAAYjQ,EAAIkQ,eAAeC,SACjChuB,OACbwtB,EAAU,IAAIrsB,WAAWkI,GAAO,GAAKwU,EAAIgQ,gBAAkBhQ,EAAI8O,QAC/DuB,EAAY,IAAI/sB,WAAWkI,GAAO,GAAKwU,EAAIgQ,iBAM7C,IATA,IAQEO,EAJAC,EAAYxQ,EAAI8O,OAAS,EAGzB1Z,GAFA1O,EAAI,EACJ4B,EAAI,EACA,GAEC5B,EAAI8E,GACT+kB,EAAQR,EAAOrpB,KACfipB,EAAQrnB,KAAOioB,IAAU,EAAI,IACzBC,IACFb,EAAQrnB,KAAOioB,IAAU,GAAK,IAC9BA,EAAQR,EAAOrpB,KACfipB,EAAQrnB,KAAOioB,IAAU,EAAI,KAE/BF,EAAUjb,KAAOmb,IAAU,GAAK,IAElCjB,EAAM,EAEQ/D,IAjUDjvB,EAASqvB,kBAAkB8E,MAAQxF,KAkUhDuD,EAAYrD,EAAcwE,EAAS3P,EAAIjY,MAAQiY,EAAI8O,OAAQ9O,EAAI8O,OAAQvD,GACvEyD,EAAQ7D,EAAckF,EAAWrQ,EAAIjY,MAAO,EAAGwjB,KAE/CiD,EAAYmB,EACZX,EAAQqB,EACRjB,EAAS,MAOb,GAAsB,IAAlBpP,EAAI6P,YACNZ,EAAaxuB,KAAKyuB,aAAawB,QAC/B3B,EAAM/O,EAAI2Q,QACN3Q,EAAI4Q,aAAaC,SAAS,CAC5B,IAAIC,EAAQ9Q,EAAI4Q,aAAaC,QACzBE,EAAQ,EAGZ,IAFErqB,EAAI,EACJ8E,EAAMslB,EAAM3uB,OACPuE,EAAI8E,IAAO9E,EAChBqqB,GAASD,EAAMpqB,GAQjB,IANAqqB,GAAgB,OAMFvlB,EAAM,IAA2B,IAAtBslB,EAAM5jB,QAAQ,GACrC2hB,EAAO,CAACiC,EAAM5jB,QAAQ,SAMjB,GAAI6jB,IAAUvlB,EAAK,CACxB,IAAIukB,EAAS/P,EAAIkQ,eAIjB,IAHEG,EAAY,IAAI/sB,WAAWysB,EAAO5tB,QAClCuE,EAAI,EACJ8E,EAAMukB,EAAO5tB,OACRuE,EAAI8E,EAAK9E,IACd2pB,EAAU3pB,GAAKoqB,EAAMf,EAAOrpB,IAE9BsoB,EAAQ7D,EAAckF,EAAWrQ,EAAIjY,MAAO,IAIlD,IAAIipB,EAzKwB,SAAqCzF,GACjE,IAAIyF,EACJ,OAAQzF,GACN,KAAKjvB,EAASqvB,kBAAkBC,KAC9BoF,EAAY,GACZ,MACF,KAAK10B,EAASqvB,kBAAkBG,OAC9BkF,EAAY,GACZ,MACF,KAAK10B,EAASqvB,kBAAkBK,KAC9BgF,EAAY,GAGhB,OAAOA,EA4JSC,CAA4B1F,GAM5C,OALyCqD,EAArCQ,IAAW3uB,KAAK2uB,OAAOC,aAAmB,cAAgB2B,EAAY,YAAclC,EAAS,sBAAwBQ,EAAM,aAAetP,EAAIjY,MAE3I,WAAa+mB,EAAS,sBAAwBQ,EAAM,aAAetP,EAAIjY,OAC1EtH,KAAK8uB,cAAcf,IAAc/tB,KAAK+uB,kBAAkBhB,MAAYA,EAAY/tB,KAAK+rB,0BAA0BgC,KAC/GQ,GAASvuB,KAAK8uB,cAAcP,IAAUvuB,KAAK+uB,kBAAkBR,MAAQA,EAAQvuB,KAAK+rB,0BAA0BwC,IACzGvuB,KAAKywB,gBAAgB1C,EAAWxO,EAAIjY,MAAOiY,EAAIhY,OAAQinB,EAAYK,EAAKF,EAAQX,EAAYC,EAAOE,EAAIC,EAAME,EAAKC,EAAOgC,GAElI,MAAM,IAAIrpB,MAAM,wDAjapB,CAmaGlK,EAAMN,KAcT,SAAWb,GACT,IACI60B,EAAuB,CACzB1B,IAAK,CAAC,CAAC,IAAM,GAAM,GAAM,KACzB2B,KAAM,CAAC,CAAC,GAAM,GAAM,EAAM,IAE1B,CAAC,GAAM,GAAM,GAAM,IAGnBC,KAAM,CAAC,CAAC,IAAM,IAAM,IAAM,SAAM5pB,OAAWA,EAAW,GAAM,GAAM,GAAM,GAAM,GAE9E,CAAC,IAAM,IAAM,IAAM,SAAMA,OAAWA,EAAW,GAAM,IAAM,IAAM,IAAM,EAAM,IAG7E6pB,SAAU,CAAC,CAAC,EAAM,EAAM,EAAM,GAAM,IAAM,GAAM,GAAM,KACtDC,OAAQ,CAAC,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,KACxCC,OAAQ,CAAC,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,KACxCC,IAAK,CAAC,CAAC,GAAM,IAEb,CAAC,GAAM,IAEP,CAAC,GAAM,IAEP,CAAC,GAAM,IAEP,CAAC,GAAM,IAEP,CAAC,GAAM,MAkBTn1B,EAASo1B,4BAA8B,SAAUlD,EAAWmD,GAE1D,IAAIjrB,EACAyU,EAFJwW,EAAiBA,GAAkB,UAGnC,IACIC,EACAC,EACAC,EAHA1E,EAAS,UAIb,IAAK0E,KAAYX,EAEf,IADAS,EAAiBT,EAAqBW,GACjCprB,EAAI,EAAGA,EAAIkrB,EAAezvB,OAAQuE,GAAK,EAAG,CAE7C,IADAmrB,GAAgB,EACX1W,EAAI,EAAGA,EAAIyW,EAAelrB,GAAGvE,OAAQgZ,GAAK,EAC7C,QAA6B1T,IAAzBmqB,EAAelrB,GAAGyU,IAGlByW,EAAelrB,GAAGyU,KAAOqT,EAAUnnB,WAAW8T,GAAI,CACpD0W,GAAgB,EAChB,MAGJ,IAAsB,IAAlBA,EAAwB,CAC1BzE,EAAS0E,EACT,OAQN,MAJe,WAAX1E,GAA0C,YAAnBuE,IACzB5vB,QAAQgwB,KAAK,0DAA4DJ,EAAiB,MAC1FvE,EAASuE,GAEJvE,GAIT,IAAI4E,EAAW,SAASA,EAAShS,GAC7B,IAAInc,EAAepD,KAAK+M,SAAS/H,YAC/BF,EAAM9E,KAAK+M,SAASI,MACpBlI,EAAYjF,KAAK+M,SAAS9H,UAuB5B,GAtBAsa,EAAO,EAAInc,EACX0B,EAAI,oBACJA,EAAI,mBACJA,EAAI,UAAYya,EAAO,GACvBza,EAAI,WAAaya,EAAO,GACpBA,EAAQ,KAAMvf,KAAKyuB,aAAawB,QAClCnrB,EAAI,qCAEDya,EAAS,IAAE7d,OAAS,EAAI,GAAK,KAAO,UAAW6d,EAAMnc,EAAe,EAAIA,EAAe,GAAK,UAE/F0B,EAAI,gBAAkBya,EAAQ,IAC1BA,EAAQ,KAAMvf,KAAKyuB,aAAa+C,aAClC1sB,EAAI,8BAGRA,EAAI,qBAAuBya,EAAS,KAChC,MAAOA,GACTza,EAAI,YAAcya,EAAO,GAEvB,OAAQA,GACVza,EAAI,kBAAoBya,EAAQ,GAAI,MAElC,SAAUA,GAAOA,EAAU,KAAE9jB,aAAeqF,MAAO,CAIrD,IAHA,IAAIstB,EAAO,GACTnoB,EAAI,EACJ8E,EAAMwU,EAAU,KAAE7d,OACbuE,EAAI8E,EAAK9E,IACdmoB,GAAQ7O,EAAU,KAAEtZ,GAAK,IAAMsZ,EAAU,KAAEtZ,GAAK,IAElDnB,EAAI,UAAYspB,EAAO,KAUzB,GARI,UAAW7O,GACbza,EAAI,WAAa1B,EAAe,GAAK,QAEvC0B,EAAI,WAAaya,EAAU,KAAE7d,OAAS,MACtCuD,EAAUsa,EAAU,MACpBza,EAAI,UAGA,UAAWya,EAAK,CAClB,IAAI4O,EAAK,cAAgB5O,EAAO,EAAI,gCAAkCA,EAAS,IAAI,aAAeA,EAAO,EACrGgP,EAAQ,CACV5b,EAAK4M,EAAO,EACZ3M,EAAK2M,EAAO,EACZkS,GAAM,aACN5C,IAAOtP,EAAS,IAChB4O,GAAMA,EACNrjB,KAAQyU,EAAW,OAEjB,MAAOA,IAAKgP,EAAMmD,EAAInS,EAAO,GACjCgS,EAASvwB,KAAKhB,KAAMuuB,GAIlBhP,EAAQ,KAAMvf,KAAKyuB,aAAawB,UAClCjwB,KAAK+M,SAAS/H,YAGdF,EAAI,cAAgBya,EAAS,IAAE7d,OAAS,MACxCuD,EAAUjF,KAAK+rB,0BAA0B,IAAIlpB,WAAW0c,EAAS,OACjEza,EAAI,YAGR6sB,EAAuB,WACrB,IAAI9Z,EAAS7X,KAAK+M,SAASS,YAAgC,gBAC3D,IAAK,IAAIvH,KAAK4R,EACZ0Z,EAASvwB,KAAKhB,KAAM6X,EAAO5R,KAG/B2rB,EAA0B,WACxB,IAEEC,EAFEha,EAAS7X,KAAK+M,SAASS,YAAgC,gBACzD1I,EAAM9E,KAAK+M,SAASI,MAEtB,IAAK,IAAIlH,KAAK4R,EAEZ/S,EAAI,MADJ+sB,EAAQha,EAAO5R,IACK,EAAG4rB,EAAS,EAAG,IAAK,MAuC5CC,EAAuB,SAA8BzmB,GACnD,MAA2D,mBAA7CxP,EAAS,UAAYwP,EAAKjC,gBAE1C2oB,EAAe,SAAsBC,GACnC,MAA2E,iBAAjD,IAAXA,EAAyB,YAAczV,QAAQyV,KAA6C,IAApBA,EAAOvV,UAEhGwV,EAA2B,SAAkCxY,EAAS3X,GAEpE,GAAyB,QAArB2X,EAAQc,UAAsBd,EAAQyY,aAAa,OAAQ,CAC7D,IAAIrS,EAAM,GAAKpG,EAAQiE,aAAa,OACpC,GAAmC,IAA/BmC,EAAIpT,QAAQ,eAAsB,OAAOoT,GAGxC/d,GAAU,qBAAqBiT,KAAK8K,KAAM/d,EAAS,OAE1D,GAAyB,WAArB2X,EAAQc,SACV,IAAI4X,EAAS1Y,MACR,EACD0Y,EAAS/lB,SAAS0U,cAAc,WAC7BxZ,MAAQmS,EAAQwB,aAAexB,EAAQnS,MAC9C6qB,EAAO5qB,OAASkS,EAAQ2Y,cAAgB3Y,EAAQlS,OAChD,IAAIsiB,EAAMsI,EAAOE,WAAW,MAC5B,IAAKxI,EACH,KAAM,uDAERA,EAAIyI,UAAU7Y,EAAS,EAAG,EAAG0Y,EAAO7qB,MAAO6qB,EAAO5qB,QAEpD,OAAO4qB,EAAOI,UAAyC,QAA9B,GAAKzwB,GAAQI,cAAyB,YAAc,eAE/EswB,EAAsB,SAA6BvE,EAAOpW,GACxD,IAAI4a,EACJ,GAAI5a,EACF,IAAK,IAAI7P,KAAK6P,EACZ,GAAIoW,IAAUpW,EAAO7P,GAAGimB,MAAO,CAC7BwE,EAAc5a,EAAO7P,GACrB,MAIN,OAAOyqB,GAsDX52B,EAAS4yB,aAAe,CACtBC,WAAY,YACZgE,YAAa,aACblB,YAAa,aACbmB,SAAU,UACVC,QAAS,SACTC,IAAK,MACLC,UAAW,WACX7C,QAAS,UACT8C,QAAS,UACTC,WAAY,aACZC,SAAU,WAMZp3B,EAAS8yB,OAAS,CAChBuE,WAAY,YACZtE,aAAc,cACduE,WAAY,YACZC,WAAY,YACZC,aAAc,cACdC,eAAgB,gBAChBC,iBAAkB,iBAClBC,kBAAmB,kBACnBC,iBAAkB,kBAMpB53B,EAASqvB,kBAAoB,CAC3B8E,KAAM,OACN7E,KAAM,OACNE,OAAQ,SACRE,KAAM,QAER1vB,EAAS8hB,UAAY,SAAUzY,GAE7B,OADAA,EAAMA,GAAO,GACNpE,MAAMpF,UAAUg4B,QAAUxuB,EAAIwH,MAAM,IAAIgnB,OAAO,SAAU/e,EAAGG,GAEjE,OADAH,GAAKA,GAAK,GAAKA,EAAIG,EAAElO,WAAW,IACrB+N,GACV,IAEL9Y,EAAS83B,SAAW,SAAU3B,GAC5B,MAAyB,iBAAXA,GAahBn2B,EAAS+3B,uBAAyB,SAAUC,GAE1C,IAAIlH,GAAS,EAUb,OAXAkH,EAAuBA,GAAwB,IAEtBnyB,OAAS,GAAM,IACtCirB,GAAS,IAEoF,IAA3F,iBAAiB5X,KAAK8e,EAAqBpsB,OAAO,EAAGosB,EAAqBnyB,OAAS,MACrFirB,GAAS,IAEoF,IAA3F,iDAAiD5X,KAAK8e,EAAqBpsB,QAAQ,MACrFklB,GAAS,GAEJA,GAYT9wB,EAASi4B,6BAA+B,SAAUC,GAChD,MAAO,yCAAyC9Q,KAAK8Q,IASvDl4B,EAASm4B,oBAAsB,WAC7B,MAA8B,oBAAhB/oB,aAAqD,oBAAfpI,YAUtDhH,EAASizB,cAAgB,SAAUkD,GACjC,QAAKhyB,KAAKg0B,uBACHhC,aAAkB/mB,aAO3BpP,EAASkzB,kBAAoB,SAAUiD,GACrC,QAAKhyB,KAAKg0B,wBACiB,oBAAhBxE,cACJwC,aAAkBiC,WAAajC,aAAkBnvB,YAA2C,oBAAtBqxB,mBAAqClC,aAAkBkC,mBAAqBlC,aAAkBmC,YAAcnC,aAAkBrC,aAAeqC,aAAkBoC,YAAcpC,aAAkBxC,aAAewC,aAAkBqC,cAAgBrC,aAAkBsC,gBAajVz4B,EAAS04B,yBAA2B,SAAUC,GAM5C,IAFA,IAAIzpB,EAAMypB,EAAc9yB,OACpBipB,EAAQ,IAAI9nB,WAAWkI,GAClB9E,EAAI,EAAGA,EAAI8E,EAAK9E,IACvB0kB,EAAM1kB,GAAKuuB,EAAc5tB,WAAWX,GAEtC,OAAO0kB,GAaT9uB,EAASkwB,0BAA4B,SAAU2D,GAC7C,GAAoB,mBAAT+E,KACT,OAAOA,KAAKz0B,KAAK00B,oBAAoBhF,IAEvC,GAA2B,mBAAhBiF,YAA4B,CACrC,IAAIC,EAAU,IAAID,YAAY,SAE9B,GAAyB,UAArBC,EAAQpvB,SACV,OAAOovB,EAAQjG,OAAOe,GAS1B,IAJA,IAAI5kB,EAAO9K,KAAK8uB,cAAcY,GAAUA,EAAS,IAAI7sB,WAAW6sB,GAE5D8E,EAAgB,GAChBK,EAAct0B,KAAKqQ,KAAK9F,EAAKgqB,WAFT,OAGf7uB,EAAI,EAAGA,EAAI4uB,EAAa5uB,IAC/BuuB,GAAiB3tB,OAAOC,aAAa1F,MAAM,KAAM0J,EAAK/J,MAJhC,MAIsCkF,EAJtC,MAI6DA,EAJ7D,QAMxB,OAAOuuB,GAgBT34B,EAAS64B,oBAAsB,SAAUK,GAWvC,IAVA,IAOIC,EAPAC,EAAS,GACTC,EAAY,mEACZvK,EAAQ,IAAI9nB,WAAWkyB,GACvBD,EAAanK,EAAMmK,WACnBK,EAAgBL,EAAa,EAC7BM,EAAaN,EAAaK,EAKrBlvB,EAAI,EAAGA,EAAImvB,EAAYnvB,GAAQ,EAWtCgvB,GAAUC,GANG,UAHbF,EAAQrK,EAAM1kB,IAAM,GAAK0kB,EAAM1kB,EAAI,IAAM,EAAI0kB,EAAM1kB,EAAI,MAG7B,IAMDivB,GALZ,OAARF,IAAmB,IAKgBE,GAJ3B,KAARF,IAAiB,GAIiCE,EAH3C,GAARF,GAyBN,OAlBqB,GAAjBG,EAOFF,GAAUC,GALG,KADbF,EAAQrK,EAAMyK,MACO,GAKIF,GAFZ,EAARF,IAAc,GAEqB,KACd,GAAjBG,IAQTF,GAAUC,GANG,OADbF,EAAQrK,EAAMyK,IAAe,EAAIzK,EAAMyK,EAAa,MAC7B,IAMEF,GALZ,KAARF,IAAiB,GAKkBE,GAF3B,GAARF,IAAe,GAEmC,KAElDC,GAeTp5B,EAAS40B,gBAAkB,SAAU3lB,EAAMuqB,EAAIC,EAAI7D,EAAI5C,EAAK6C,EAAG1D,EAAYC,EAAOE,EAAIC,EAAME,EAAKC,EAAOrmB,GACtG,IAAIqhB,EAAO,CACT0E,MAAOA,EACPtb,EAAG0iB,EACHziB,EAAG0iB,EACH7D,GAAIA,EACJ5C,IAAKA,EACL5oB,EAAG+nB,EACHljB,KAAMA,GAWR,OAPI4mB,IAAGnI,EAAKmI,EAAIA,GACZvD,IAAI5E,EAAK4E,GAAKA,GACdC,IAAM7E,EAAK6E,KAAOA,GAClBE,IAAK/E,EAAK+E,IAAMA,GAChBC,IAAOhF,EAAKgF,MAAQA,GACpBrmB,IAAGqhB,EAAKrhB,EAAIA,GAETqhB,GAqBT1tB,EAASwiB,SAAW,SAAU0P,EAAWjsB,EAAQsN,EAAGC,EAAGsD,EAAGC,EAAGqb,EAAOnD,EAAayK,GAC/E,IAAIC,EAAe,GACnB,GAAsB,iBAAX1zB,EAAqB,CAC9B,IAAIO,EAAMuQ,EACVA,EAAID,EACJA,EAAItD,EACJA,EAAID,EACJA,EAAItN,EACJA,EAASO,EAEX,GAA8E,iBAApD,IAAd0rB,EAA4B,YAAcxR,QAAQwR,MAA6BgE,EAAahE,IAAc,cAAeA,EAAW,CAC9I,IAAI/rB,EAAU+rB,EACdA,EAAY/rB,EAAQ+rB,UACpBjsB,EAASE,EAAQF,QAAUA,EAC3BsN,EAAIpN,EAAQoN,GAAKA,GAAK,EACtBC,EAAIrN,EAAQqN,GAAKA,GAAK,EACtBsD,EAAI3Q,EAAQ2Q,GAAKA,EACjBC,EAAI5Q,EAAQ4Q,GAAKA,EACjBqb,EAAQjsB,EAAQisB,OAASA,EACzBnD,EAAc9oB,EAAQ8oB,aAAeA,EACrCyK,EAAWvzB,EAAQuzB,UAAYvzB,EAAQsN,OAASimB,EAElD,GAAIxc,MAAM3J,IAAM2J,MAAM1J,GAEpB,MADA/N,QAAQC,MAAM,sCAAuCN,WAC/C,IAAIiG,MAAM,gDAElB,IACEqiB,EAEI2E,EA3ZiDpjB,EAHtBwC,EA2Z7BuK,EArbQ,WACV,IAAIA,EAAS7X,KAAK+M,SAASS,YAAgC,gBAO3D,OALKqK,IACH7X,KAAK+M,SAASS,YAAgC,gBAAIqK,EAAS,GAC3D7X,KAAK+M,SAASxI,OAAOtE,UAAU,eAAgB0xB,GAC/C3xB,KAAK+M,SAASxI,OAAOtE,UAAU,iBAAkB2xB,IAE5C/Z,GA6ac7W,KAAKhB,MAE5B,KAAMupB,EAAOiJ,EAAoBzE,EAAWlW,MAEtCka,EAAahE,KAAYA,EAAYkE,EAAyBlE,EAAWjsB,KA9ZtE,OADwBwL,EAgahB2gB,IA/Z2D,IAAjB3gB,EAAM5L,UA+ZxCusB,EA5ZA,iBAD8BnjB,EA6ZAijB,IA5ZlBlyB,EAAS8hB,UAAU7S,MA6ZhDye,EAAOiJ,EAAoBvE,EAAOpW,KAAU,CAahD,GAZI7X,KAAK2zB,SAAS5F,KAEK,MADrByH,EAAex1B,KAAKy1B,yBAAyB1H,IAE3CA,EAAYyH,OAGSxuB,KADrBwuB,EAAex1B,KAAK01B,cAAc3H,MAEhCA,EAAYyH,IAIlB1zB,EAAS9B,KAAKixB,4BAA4BlD,EAAWjsB,IAChDgwB,EAAqBhwB,GAAS,MAAM,IAAIoF,MAAM,4CAA+CpF,EAAS,uCAA2CA,EAAS,uBAc/J,GARI9B,KAAKg0B,wBAEDjG,aAAqBlrB,aACzBqrB,EAAqBH,EACrBA,EAAY/tB,KAAKu0B,yBAAyBxG,OAG9CxE,EAAOvpB,KAAK,UAAY8B,EAAOsH,eAAe2kB,EA3clC,SAAuBlW,GACrC,IAAImW,EAAa,EAajB,OAZInW,IAEFmW,EAAapoB,OAAOC,KAAOD,OAAOC,KAAKgS,GAAQnW,OAAS,SAAU8I,GAChE,IAAIvE,EAAI,EACR,IAAK,IAAI+B,KAAKwC,EACRA,EAAEnK,eAAe2H,IACnB/B,IAGJ,OAAOA,EAP+C,CAQtD4R,IAEGmW,EA6boD2H,CAAc9d,GAASoW,EAzd/D,SAA4B3gB,GAE/C,OADIA,GAA0B,iBAAVA,IAAoBA,EAAQA,EAAMlE,eAC/CkE,KAASzR,EAASqvB,kBAAoB5d,EAAQzR,EAASqvB,kBAAkB8E,KAudS4F,CAAmB9K,GAAcoD,IAC7G,MAAM,IAAIhnB,MAAM,yDAI/B,OA9XkB,SAAyBkI,EAAGC,EAAGsD,EAAGC,EAAG2W,EAAMsM,EAAOhe,EAAQ0d,GAC1E,IAAIO,EApBoB,SAAiCnjB,EAAGC,EAAG2W,GAiB/D,OAhBK5W,GAAMC,IACTD,GAAK,GACLC,GAAK,IAEHD,EAAI,IACNA,GAAK,EAAI4W,EAAQ,EAAI,GAAK5W,EAAI3S,KAAK+M,SAASc,aAE1C+E,EAAI,IACNA,GAAK,EAAI2W,EAAQ,EAAI,GAAK3W,EAAI5S,KAAK+M,SAASc,aAEpC,IAAN8E,IACFA,EAAIC,EAAI2W,EAAQ,EAAIA,EAAQ,GAEpB,IAAN3W,IACFA,EAAID,EAAI4W,EAAQ,EAAIA,EAAQ,GAEvB,CAAC5W,EAAGC,IAGwB5R,KAAKhB,KAAM2S,EAAGC,EAAG2W,GAClDwM,EAAQ/1B,KAAK+M,SAASM,oBACtB2oB,EAASh2B,KAAK+M,SAASQ,4BAIzB,GAHAoF,EAAImjB,EAAK,GACTljB,EAAIkjB,EAAK,GACTje,EAAOge,GAAStM,EACZgM,EAAU,CACZA,GAAYh1B,KAAKuP,GAAK,IACtB,IAAIC,EAAIxP,KAAKyP,IAAIulB,GACb9lB,EAAIlP,KAAK0P,IAAIslB,GAEbU,EAAK,SAAYxxB,GACnB,OAAOA,EAAOC,QAAQ,IAEpBwxB,EAA+B,CAACD,EAAGlmB,GAAIkmB,EAAGxmB,GAAIwmB,GAAQ,EAALxmB,GAASwmB,EAAGlmB,GAAI,EAAG,EAAG,MAE7E/P,KAAK+M,SAASI,MAAM,KAChBooB,GACFv1B,KAAK+M,SAASI,MAAM,CAAC,EAAG,IAAK,IAAK,EAAG4oB,EAAM3mB,GAAI4mB,EAAO3mB,EAAIuD,GAAI,MAAM7L,KAAK,MACzE/G,KAAK+M,SAASI,MAAM+oB,EAA6BnvB,KAAK,MACtD/G,KAAK+M,SAASI,MAAM,CAAC4oB,EAAMpjB,GAAI,IAAK,IAAKojB,EAAMnjB,GAAI,IAAK,IAAK,MAAM7L,KAAK,OAExE/G,KAAK+M,SAASI,MAAM,CAAC4oB,EAAMpjB,GAAI,IAAK,IAAKojB,EAAMnjB,GAAImjB,EAAM3mB,GAAI4mB,EAAO3mB,EAAIuD,GAAI,MAAM7L,KAAK,MAGzF/G,KAAK+M,SAASI,MAAM,KAAOoc,EAAQ,EAAI,OACvCvpB,KAAK+M,SAASI,MAAM,MAkWNnM,KAAKhB,KAAMoP,EAAGC,EAAGsD,EAAGC,EAAG2W,EAAMA,EAAKtjB,EAAG4R,EAAQ0d,GACtDv1B,MAETnE,EAAS45B,yBAA2B,SAAUU,GAC5C,IAGMC,EAFFrI,EAAY,GACZ/tB,KAAK2zB,SAASwC,KAEG,QADfC,EAAap2B,KAAK8zB,6BAA6BqC,IAE7Ct6B,EAAS+3B,uBAAuBwC,EAAW,MAC7CrI,EAAY0G,KAAK2B,EAAW,KAErBv6B,EAAS+3B,uBAAuBuC,KACzCpI,EAAY0G,KAAK0B,KAGrB,OAAOpI,GAST,IAoEEsI,EAAY,SAAmBvrB,EAAML,GACnC,OAAOK,EAAKgiB,SAASriB,EAAQA,EAAS,IAE1C5O,EAASy6B,YAAc,SAAUxrB,EAAM+qB,EAAO5H,EAAOnD,EAAaoD,EAAoBM,GACpF,IAEEsH,EAFES,EAASv2B,KAAK2uB,OAAOuE,WAGzB,IAAKlzB,KAAK2zB,SAAS7oB,KAAU9K,KAAK8uB,cAAchkB,KAAU9K,KAAK+uB,kBAAkBjkB,GAC/E,OAAO,KAcT,GAZI9K,KAAK2zB,SAAS7oB,KAChBgrB,EA/Ec,SAAqB5G,GACnC,IAAW3nB,EAEX,GAA+B,OAA1B2nB,EAAQtoB,WAAW,IAA0C,OAA1BsoB,EAAQtoB,WAAW,IAA0C,OAA1BsoB,EAAQtoB,WAAW,IAA0C,OAA1BsoB,EAAQtoB,WAAW,KAAgBsoB,EAAQtoB,WAAW,KAAO,IAAIA,WAAW,KAAOsoB,EAAQtoB,WAAW,KAAO,IAAIA,WAAW,KAAOsoB,EAAQtoB,WAAW,KAAO,IAAIA,WAAW,KAAOsoB,EAAQtoB,WAAW,KAAO,IAAIA,WAAW,IAAkC,KAA3BsoB,EAAQtoB,WAAW,IAClW,MAAM,IAAIM,MAAM,kDAKlB,IAHA,IAAIsvB,EAAsC,IAAxBtH,EAAQtoB,WAAW,GAAWsoB,EAAQtoB,WAAW,GAC/DX,EAAI,EACN8E,EAAMmkB,EAAQxtB,OACTuE,EAAI8E,GAAK,CAEd,GADA9E,GAAKuwB,EACyB,MAA1BtH,EAAQtoB,WAAWX,GACrB,MAAM,IAAIiB,MAAM,oDAElB,GAAkC,MAA9BgoB,EAAQtoB,WAAWX,EAAI,IAEG,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,IAEO,MAA9BipB,EAAQtoB,WAAWX,EAAI,GAIrB,OAHAsB,EAAqC,IAA5B2nB,EAAQtoB,WAAWX,EAAI,GAAWipB,EAAQtoB,WAAWX,EAAI,GAG3D,CAF6B,IAA5BipB,EAAQtoB,WAAWX,EAAI,GAAWipB,EAAQtoB,WAAWX,EAAI,GAElDsB,EADC2nB,EAAQtoB,WAAWX,EAAI,IAGvCA,GAAK,EACLuwB,EAAsC,IAAxBtH,EAAQtoB,WAAWX,GAAWipB,EAAQtoB,WAAWX,EAAI,IA4ChEwwB,CAAY3rB,IAEjB9K,KAAK8uB,cAAchkB,KACrBA,EAAO,IAAIjI,WAAWiI,IAEpB9K,KAAK+uB,kBAAkBjkB,KACzBgrB,EA9CqB,SAA8BhrB,GAEnD,GAAY,QADFA,EAAK,IAAM,EAAIA,EAAK,IACV,MAAM,IAAI5D,MAAM,+BAQpC,IAPA,IAGEyjB,EAHE5f,EAAMD,EAAKpJ,OACbg1B,GAAS5rB,EAAK,IAAM,GAAKA,EAAK,GAC9B6rB,EAAM,EAKDA,EAAM5rB,GAAK,CAIhB,GADA2rB,IADA/L,EAAQ0L,EAAUvrB,EADlB6rB,GAAOD,IAEQ,IAAM,GAAK/L,EAAM,IACd,MAAbA,EAAM,IAA4B,MAAbA,EAAM,KAA6B,MAAbA,EAAM,IAAe+L,EAAQ,EAK3E,MAAO,CACLpvB,QALFqjB,EAAQ0L,EAAUvrB,EAAM6rB,EAAM,IACf,IAAM,GAAKhM,EAAM,GAK9BpjB,QAJQojB,EAAM,IAAM,GAAKA,EAAM,GAK/BiM,cAJcjM,EAAM,IAOxBgM,GAAO,EAET,MAAM,IAAIzvB,MAAM,6DAmBT2vB,CAAqB/rB,GAG5BA,EAAOojB,GAAsBluB,KAAK+rB,0BAA0BjhB,SAE3C9D,IAAfwnB,EACF,OAAQsH,EAAKc,eACX,KAAK,EACHpI,EAAaxuB,KAAKyuB,aAAaiE,YAC/B,MACF,KAAK,EACHlE,EAAaxuB,KAAKyuB,aAAa+C,YAC/B,MACF,QACA,KAAK,EACHhD,EAAaxuB,KAAKyuB,aAAaC,WAIrC,OAAO1uB,KAAKywB,gBAAgB3lB,EAAMgrB,EAAKxuB,MAAOwuB,EAAKvuB,OAAQinB,EA/BnD,EA+BoE+H,EAAQV,EAAO5H,IAE7FpyB,EAASi7B,WAAa,WACpB,OAAO92B,KAAKs2B,YAAYl1B,MAAMpB,KAAMiB,YAEtCpF,EAAS65B,cAAgB,SAAUqB,EAAMC,EAAM72B,GAC7C62B,EAAOA,IAAQ,EACf72B,EAAWA,GAAY,aACVyF,OAAOlK,UAAU+E,SAASO,KAAwB,oBAAZgX,QAA0BA,QAAU,GAkCvF,QAAwEhR,KAAjD,oBAAX6P,OAAyB,YAAc0F,QAAQ1F,UAAkG,YAAnD,oBAAbxK,SAA2B,YAAckQ,QAAQlQ,YAA8D,SAAnCA,SAAS4qB,SAASxvB,OAAO,EAAG,GACnM,OAlCc,SAAmBgW,EAAKuZ,EAAM72B,GAC5C,IAAI+2B,EAAM,IAAIC,eACVC,EAAY,GACZnxB,EAAI,EACJoxB,EAAkB,SAAyBvsB,GAC7C,IAAIwsB,EAAaxsB,EAAKpJ,OAClB61B,EAAqB1wB,OAAOC,aAGhC,IAAKb,EAAI,EAAGA,EAAIqxB,EAAYrxB,GAAK,EAC/BmxB,EAAU31B,KAAK81B,EAAwC,IAArBzsB,EAAKlE,WAAWX,KAEpD,OAAOmxB,EAAUrwB,KAAK,KAWxB,GATAmwB,EAAIhrB,KAAK,MAAOuR,GAAMuZ,GAEtBE,EAAIM,iBAAiB,uCACR,IAATR,IACFE,EAAIvX,OAAS,WACX,OAAO0X,EAAgBr3B,KAAKy3B,gBAGhCP,EAAIQ,KAAK,MACU,MAAfR,EAAIS,OAIR,OAAIX,EACKK,EAAgBH,EAAIO,mBAD7B,EAHEn2B,QAAQgwB,KAAK,wBAA0B7T,EAAM,KAUxCma,CAAUb,EAAMC,IAG3Bn7B,EAASg8B,mBAAqB,SAAU9J,GACtC,IAAIxE,EAEAznB,EADA0zB,EAAe,GAiBnB,GAfIzD,EAAahE,KACfA,EAAYkE,EAAyBlE,IAEnC/tB,KAAK2zB,SAAS5F,KAEK,MADrByH,EAAex1B,KAAKy1B,yBAAyB1H,IAE3CA,EAAYyH,OAGSxuB,KADrBwuB,EAAex1B,KAAK01B,cAAc3H,MAEhCA,EAAYyH,IAIlB1zB,EAAS9B,KAAKixB,4BAA4BlD,IACrC+D,EAAqBhwB,GAAS,MAAM,IAAIoF,MAAM,4CAA+CpF,EAAS,uCAA2CA,EAAS,uBAa/J,GAPI9B,KAAKg0B,wBAEDjG,aAAqBlrB,aACzBkrB,EAAY/tB,KAAKu0B,yBAAyBxG,OAG9CxE,EAAOvpB,KAAK,UAAY8B,EAAOsH,eAAe2kB,IAE5C,MAAM,IAAI7mB,MAAM,yDAElB,MAAO,CACLmqB,SAAUvvB,EACVwF,MAAOiiB,EAAK5W,EACZpL,OAAQgiB,EAAK3W,EACb4b,WAAYjF,EAAKkI,GACjBqG,gBAAiBvO,EAAKmI,EACtBqG,iBAAkBxO,EAAKsF,MAv1B7B,CA01BG7xB,EAAMN,KAyBNM,EAAMN,IAbEs7B,UAAY,WAGnB,IAAIC,EAQJ,OAPAj4B,KAAK+M,SAASxI,OAAOtE,UAAU,mBAAoB,WACjDg4B,EAAkBj4B,KAAK+M,SAAS/H,YAChChF,KAAK+M,SAASI,MAAM,uCAAwC,YAE9DnN,KAAK+M,SAASxI,OAAOtE,UAAU,aAAc,WAC3CD,KAAK+M,SAASI,MAAM,eAAiB8qB,EAAkB,UAElDj4B,MAeAtD,EAkRRM,EAAMN,IAtQHC,EAAqBD,EAAIC,mBAAqB,SAAUF,EAAMuF,GAC3DA,IACHA,EAAU,IAEZ,IAOIiE,EACFC,EACAgyB,EATE5V,EAAStgB,EAAQsgB,OAAStgB,EAAQsgB,OAAStiB,KAAK+M,SAASC,UAAUlH,SAASuc,QAAQC,OACtF6V,EAAmB7V,EAAO8V,IAAM9V,EAAO8V,IAAM,EAC7C7V,EAAUvgB,EAAQugB,QAAUvgB,EAAQugB,QAAUviB,KAAK+M,SAASC,UAAUlH,SAASuc,QAAQE,QACvF8V,EAAoB9V,EAAQ6V,IAAM7V,EAAQ6V,IAAM,EAOhDE,EAAkB,EAElBC,EAAqBjW,EAAO,IAAM6V,EAClCtsB,EAAS,GACX,IAAK5F,EAAI,EAAGC,EAAIzJ,EAAKiF,OAAQuE,EAAIC,EAAGD,IAClCiyB,EAAYz7B,EAAKmK,WAAWX,GAC5B4F,EAAOpK,MAAM6gB,EAAO4V,IAAcK,GAAsBJ,GAAoB5V,EAAQ2V,IAAc3V,EAAQ2V,GAAWI,IAAoB,GAAKD,GAC9IC,EAAkBJ,EAEpB,OAAOrsB,GAELjP,EAAc,SAAqBub,GAGrC,IAFA,IAAIlS,EAAIkS,EAAMzW,OACZmK,EAAS,EACJ5F,GAGL4F,GAAUsM,IADVlS,GAGF,OAAO4F,GAaLhP,EAAqBH,EAAIG,mBAAqB,SAAUJ,EAAMuF,GAChE,OAAOpF,EAAYD,EAAmBqE,KAAKhB,KAAMvD,EAAMuF,KAMrDlF,EAAgB,SAAuB07B,EAAMC,EAAcC,EAAiBC,GAO9E,IANA,IAAIC,EAAS,GAGT3yB,EAAI,EACNC,EAAIsyB,EAAK92B,OACTm3B,EAAa,EACR5yB,IAAMC,GAAK2yB,EAAaJ,EAAaxyB,GAAKyyB,GAC/CG,GAAcJ,EAAaxyB,GAC3BA,IAGF2yB,EAAOn3B,KAAK+2B,EAAKz3B,MAAM,EAAGkF,IAG1B,IAAI6yB,EAAc7yB,EAElB,IADA4yB,EAAa,EACN5yB,IAAMC,GACP2yB,EAAaJ,EAAaxyB,GAAK0yB,IACjCC,EAAOn3B,KAAK+2B,EAAKz3B,MAAM+3B,EAAa7yB,IACpC4yB,EAAa,EACbC,EAAc7yB,GAEhB4yB,GAAcJ,EAAaxyB,GAC3BA,IAKF,OAHI6yB,IAAgB7yB,GAClB2yB,EAAOn3B,KAAK+2B,EAAKz3B,MAAM+3B,EAAa7yB,IAE/B2yB,GAKL77B,EAA0B,SAAiCN,EAAMs8B,EAAQ/2B,GAItEA,IACHA,EAAU,IAEZ,IAKEw2B,EACAC,EAGAxyB,EACAC,EACA7D,EACA22B,EAZExnB,EAAO,GACTK,EAAQ,CAACL,GACTynB,EAAcj3B,EAAQwgB,YAAc,EACpC0W,EAAmB,EACnBC,EAAsB,EAGtBC,EAAQ38B,EAAKiQ,MAAM,KACnB2sB,EAAiB18B,EAAmB,IAAKqF,GAAS,GAUpD,GAJEg3B,GAD0B,IAAxBh3B,EAAQg3B,WACGI,EAAM,GAAG13B,OAAS,EAElBM,EAAQg3B,YAAc,EAErB,CACd,IAAIM,EAAMx4B,MAAMk4B,GAAYjyB,KAAK,KAC/BwyB,EAAO,GACTH,EAAMloB,IAAI,SAAUsoB,IAClBA,EAAMA,EAAI9sB,MAAM,UACRhL,OAAS,EACf63B,EAAOA,EAAK/oB,OAAOgpB,EAAItoB,IAAI,SAAUsoB,EAAKC,GACxC,OAAQA,GAAOD,EAAI93B,OAAS,KAAO,IAAM83B,KAG3CD,EAAK93B,KAAK+3B,EAAI,MAGlBJ,EAAQG,EACRP,EAAan8B,EAAmBy8B,EAAKt3B,GAEvC,IAAKiE,EAAI,EAAGC,EAAIkzB,EAAM13B,OAAQuE,EAAIC,EAAGD,IAAK,CACxC,IAAIyzB,EAAQ,EAQZ,GAPAlB,EAAOY,EAAMnzB,GACT+yB,GAAyB,MAAXR,EAAK,KACrBA,EAAOA,EAAK/wB,OAAO,GACnBiyB,EAAQ,GAEVjB,EAAe97B,EAAmB67B,EAAMx2B,GAEpCi3B,EAAcC,GADlBC,EAAsBv8B,EAAY67B,IACyBM,GAAUW,EAAO,CAC1E,GAAIP,EAAsBJ,EAAQ,CAShC,IANA12B,EAAMvF,EAAc07B,EAAMC,EAAcM,GAAUE,EAAcC,GAAmBH,GAEnFvnB,EAAK/P,KAAKY,EAAIqO,SAEdc,EAAO,CAACnP,EAAIs3B,OAELt3B,EAAIX,QACTmQ,EAAMpQ,KAAK,CAACY,EAAIqO,UAGlByoB,EAAsBv8B,EAAY67B,EAAa13B,MAAMy3B,EAAK92B,OAAS8P,EAAK,GAAG9P,cAG3E8P,EAAO,CAACgnB,GAIV3mB,EAAMpQ,KAAK+P,GACXynB,EAAcE,EAAsBH,EACpCE,EAAmBG,OAEnB7nB,EAAK/P,KAAK+2B,GACVS,GAAeC,EAAmBC,EAClCD,EAAmBG,EAGvB,GAAIL,EACF,IAAIY,EAAc,SAAqB9T,EAAI2T,GACzC,OAAQA,EAAMH,EAAM,IAAMxT,EAAG/e,KAAK,WAGhC6yB,EAAc,SAAqB9T,GACrC,OAAOA,EAAG/e,KAAK,MAGnB,OAAO8K,EAAMX,IAAI0oB,IAiBnBl9B,EAAI+lB,gBAAkB,SAAUhmB,EAAMs8B,EAAQ/2B,GAGvCA,IACHA,EAAU,IAEZ,IAkCI63B,EAlCAC,EAAQ93B,EAAQjG,UAAYiE,KAAK+M,SAASE,cAC5C8sB,EAAa,SAAU/3B,GACrB,IAAIsgB,EAAS,CACTpN,EAAG,GAELqN,EAAU,GACZ,GAAKvgB,EAAQsgB,QAAWtgB,EAAQugB,QAc9B,MAAO,CACLD,OAAQtgB,EAAQsgB,OAChBC,QAASvgB,EAAQugB,SAfnB,IAAImP,EAAI1xB,KAAK+M,SAASC,QAAQhL,EAAQlG,SAAUkG,EAAQhG,WAMxD,OAAI01B,EAAE5rB,SAAiB,QACd,CACLwc,OAAQoP,EAAE5rB,SAAiB,QAAEwc,QAAUA,EACvCC,QAASmP,EAAE5rB,SAAiB,QAAEyc,SAAWA,GAWxC,CACLD,OAAQA,EACRC,QAASA,IAEXvhB,KAAKhB,KAAMgC,GAKb63B,EADE/4B,MAAM0G,QAAQ/K,GACHA,EAEAA,EAAKiQ,MAAM,SAM1B,IAAIstB,EAAkB,EAAMh6B,KAAK+M,SAASc,YAAckrB,EAASe,EASjEC,EAAWvX,WAAaxgB,EAAQwgB,WAAkC,EAArBxgB,EAAQwgB,WAAmBxiB,KAAK+M,SAASc,YAAcisB,EAAQ,EAC5GC,EAAWf,WAAah3B,EAAQg3B,WAChC,IAAI/yB,EACFC,EACA2F,EAAS,GACX,IAAK5F,EAAI,EAAGC,EAAI2zB,EAAWn4B,OAAQuE,EAAIC,EAAGD,IACxC4F,EAASA,EAAO2E,OAAOzT,EAAwB88B,EAAW5zB,GAAI+zB,EAAiBD,IAEjF,OAAOluB,GAGX,SAAWnP,GAqHT,IAAIu9B,EAAa,SAAoBnvB,GAInC,IAHA,IAEEovB,EAAU,GACHj0B,EAAI,EAAGA,EAFJ,mBAEgBvE,OAAQuE,IAClCi0B,EAHU,mBAGMj0B,IAJJ,mBAIkBA,GAEhC,IAGEk0B,EAIAC,EAGAryB,EAIAvB,EAbAqF,EAAS,GACTwuB,EAAO,EAGPC,EAAezuB,EACf0uB,EAAc,GAEdC,EAAW,GACXC,EAAa,GAGbC,EAAU5vB,EAAKpJ,OAAS,EAK1B,IAFAuE,EAAI,EAEGA,GAAKy0B,GAGVl0B,EAAKsE,EAAK7E,GACVA,GAAK,EACK,KAANO,EACE2zB,GAEFpyB,EAAMoyB,EAAYpzB,KAAK,IACvBozB,OA1BFQ,GA6BER,EAAc,GAEPA,EACTA,EAAY14B,KAAK+E,GACF,KAANA,GAET+zB,EAAY94B,KAAK,CAAC64B,EAAcvyB,IAChCuyB,EAAe,GACfvyB,OArCA4yB,GAsCe,KAANn0B,IAET4zB,EAAkBG,EAAYZ,OACd,GAAGS,EAAgB,IAAME,EACzCvyB,OA1CA4yB,EA2CAL,EAAeF,EAAgB,IAChB,KAAN5zB,EACT6zB,GAAQ,OA7CRM,IAgDI5yB,EACEmyB,EAAQ75B,eAAemG,IACzBg0B,GAAYN,EAAQ1zB,GACpBuB,EAAMlD,SAAS21B,EAAU,IAAMH,EAC/BA,EAAO,EACPG,EAAW,IAEXA,GAAYh0B,EAGV0zB,EAAQ75B,eAAemG,IACzBi0B,GAAcP,EAAQ1zB,GACtB8zB,EAAavyB,GAAOlD,SAAS41B,EAAY,IAAMJ,EAC/CA,EAAO,EACPtyB,OA9DJ4yB,EA+DIF,EAAa,IAEbA,GAAcj0B,EAMtB,OAAOqF,GAgBLzF,EAAgB,CAChBO,UAAa,CAAC,mBACdi0B,gBAAmBX,EAAW,+JAEhC/E,EAAY,CACV7S,QAAW,CACTwY,QAAWz0B,EACX00B,eAAgB10B,EAChB20B,sBAAuB30B,EACvB40B,kBAAmB50B,EACnB60B,UAAa70B,EACb80B,iBAAkB90B,EAClB+0B,wBAAyB/0B,EACzBg1B,oBAAqBh1B,EACrBi1B,cAAej1B,EACfk1B,aAAcl1B,EACdm1B,mBAAoBn1B,EACpBo1B,eAAgBp1B,IAkBpB2b,EAAc,CACZM,QAAW,CAST2Y,kBAAmBf,EAAW,6CAC9BsB,mBAAoBtB,EAAW,kxDAC/BiB,iBAAkBjB,EAAW,gnDAC7BY,QAAWZ,EAAW,6CACtBc,sBAAuBd,EAAW,6CAClCqB,aAAcrB,EAAW,yzDAIzBgB,UAAahB,EAAW,grDACxBkB,wBAAyBlB,EAAW,gnDAIpCa,eAAgBb,EAAW,6CAC3BuB,eAAgBvB,EAAW,qrDAC3BoB,cAAepB,EAAW,02DAC1BmB,oBAAqBnB,EAAW,krDAgBtCv9B,EAAI6H,OAAO9C,KAAK,CAAC,UAAW,SAAU6D,GACpC,IAAIm2B,EACFC,EAEAt1B,GACFq1B,EAAU1Z,EAAoB,QAAEzc,EAAKC,oBAGjCm2B,EADEp2B,EAAKQ,SAAiB,QACNR,EAAKQ,SAAiB,QAEtBR,EAAKQ,SAAiB,QAAI,IAE9Bwc,OAASmZ,EAAQnZ,OACjCoZ,EAAgBnZ,QAAUkZ,EAAQlZ,UAEpCnc,EAAgB8uB,EAAkB,QAAE5vB,EAAKC,oBAGrCm2B,EADEp2B,EAAKQ,SAAiB,QACNR,EAAKQ,SAAiB,QAEtBR,EAAKQ,SAAiB,QAAI,IAE9BN,SAAWY,EACvBA,EAAcO,WAAaP,EAAcO,UAAUjF,SACrD4D,EAAKE,SAAWY,EAAcO,UAAU,QAzThD,CA6TG3J,EAAMN,KAgBT,IAAIoP,EAASA,GAAU,SAAU6vB,GAI/B,GAAyB,oBAAdlwB,YAA6B,eAAesJ,KAAKtJ,UAAUmwB,WAAtE,CAGA,IAAIC,EAAMF,EAAKvvB,SAGb0vB,EAAU,WACR,OAAOH,EAAKhwB,KAAOgwB,EAAKI,WAAaJ,GAEvCK,EAAYH,EAAII,gBAAgB,+BAAgC,KAChEC,EAAqB,aAAcF,EAKnCG,EAAY,2BAA2BpnB,KAAKtJ,UAAUmwB,WACtDQ,EAAgBT,EAAKU,wBACrBC,EAASX,EAAKY,mBAAqBH,GAAiBT,EAAKa,qBACzDC,EAAgB,SAAuBp7B,IACpCs6B,EAAKe,cAAgBf,EAAK3vB,YAAY,WACrC,MAAM3K,GACL,IAGLs7B,EAAc,EAOdC,EAAS,SAAgBC,GACvB,IAAIC,EAAU,WACQ,iBAATD,EAETf,IAAUiB,gBAAgBF,GAG1BA,EAAKG,UAGLrB,EAAKsB,OACPH,IAEA9wB,WAAW8wB,EAfY,MAkB3BI,EAAW,SAAkBC,EAAWC,EAAaC,GAGnD,IADA,IAAIp3B,GADJm3B,EAAc,GAAG5sB,OAAO4sB,IACJ17B,OACbuE,KAAK,CACV,IAAIq3B,EAAWH,EAAU,KAAOC,EAAYn3B,IAC5C,GAAwB,mBAAbq3B,EACT,IACEA,EAASt8B,KAAKm8B,EAAWE,GAASF,GAClC,MAAO97B,GACPo7B,EAAcp7B,MAKtBk8B,EAAW,SAAkBC,GAE3B,MAAI,6EAA6EzoB,KAAKyoB,EAAKnyB,MAClF,IAAID,KAAK,CAAC,SAAUoyB,GAAO,CAChCnyB,KAAMmyB,EAAKnyB,OAGRmyB,GAETC,EAAY,SAAmBD,EAAM7kB,EAAM+kB,GACpCA,IACHF,EAAOD,EAASC,IAGlB,IAGEG,EACAC,EAgDA78B,EApDEo8B,EAAYn9B,KACdqL,EAAOmyB,EAAKnyB,KACZwyB,GAAe,EAGfC,EAAe,WACbZ,EAASC,EAAW,qCAAqCzwB,MAAM,OAIjEqxB,EAAW,WACT,GAAIH,GAAezB,GAAmC,oBAAf6B,WAA4B,CAEjE,IAAIC,EAAS,IAAID,WASjB,OARAC,EAAOC,UAAY,WACjB,IAAIC,EAAaF,EAAOtR,OACxBiR,EAAYvxB,SAASC,KAAO,uBAAyB6xB,EAAWp9B,MAAMo9B,EAAWC,OAAO,SACxFjB,EAAUkB,WAAalB,EAAUmB,KACjCR,KAEFG,EAAOM,cAAcf,QACrBL,EAAUkB,WAAalB,EAAUqB,QAI/BX,GAAiBF,IACnBA,EAAa7B,IAAUlwB,gBAAgB4xB,IAErCI,GACFA,EAAYvxB,SAASC,KAAOqxB,EAGb32B,MADD20B,EAAKzvB,KAAKyxB,EAAY,WACRxB,IAE1BR,EAAKtvB,SAASC,KAAOqxB,GAGzBR,EAAUkB,WAAalB,EAAUmB,KACjCR,IACAlB,EAAOe,IAETc,EAAY,SAAmBzY,GAC7B,OAAO,WACL,GAAImX,EAAUkB,aAAelB,EAAUmB,KACrC,OAAOtY,EAAK5kB,MAAMpB,KAAMiB,aAI9By9B,EAAsB,CACpBC,QAAQ,EACRC,WAAW,GAOf,GAJAzB,EAAUkB,WAAalB,EAAUqB,KAC5B7lB,IACHA,EAAO,YAELujB,EAUF,OATAyB,EAAa7B,IAAUlwB,gBAAgB4xB,QACvCxxB,WAAW,WA3HP,IAAeke,EACjBmT,EA2HArB,EAAU1vB,KAAOqxB,EACjB3B,EAAU6C,SAAWlmB,EA7HJuR,EA8HX8R,EA7HNqB,EAAQ,IAAIyB,WAAW,SAC3B5U,EAAK6U,cAAc1B,GA6HfS,IACAlB,EAAOe,GACPR,EAAUkB,WAAalB,EAAUmB,OASjC3C,EAAKsB,QAAU5xB,GA9HC,6BA8HOA,IACzBtK,EAAQy8B,EAAKz8B,OAASy8B,EAAKwB,YAC3BxB,EAAOz8B,EAAMC,KAAKw8B,EAAM,EAAGA,EAAK5pB,KAhId,4BAiIlBiqB,GAAe,GAKbzB,GAA0B,aAATzjB,IACnBA,GAAQ,cAvIU,6BAyIhBtN,GAAgC+wB,KAClCwB,EAAcjC,GAEXW,GAILK,GAAea,EAAK5pB,KACpB0oB,EAAOX,EAAKsD,UAAWtC,EAAa8B,EAAU,SAAUrc,GACtDA,EAAG6G,KAAKiW,aAAa,QAASR,EAAqBD,EAAU,SAAUU,GACrE,IAAInpB,EAAO,WACTmpB,EAAIC,QAAQzmB,EAAM+lB,EAAqBD,EAAU,SAAU5B,GACzDA,EAAKwC,aAAaZ,EAAU,SAAUa,GACpCA,EAAOC,WAAa,SAAUlC,GAC5BO,EAAYvxB,SAASC,KAAOuwB,EAAK2C,QACjCrC,EAAUkB,WAAalB,EAAUmB,KACjCpB,EAASC,EAAW,WAAYE,GAChCT,EAAOC,IAETyC,EAAO5f,QAAU,WACf,IAAIne,EAAQ+9B,EAAO/9B,MACfA,EAAMk+B,OAASl+B,EAAMm+B,WACvB3B,KAGJ,kCAAkCrxB,MAAM,KAAK/K,QAAQ,SAAU07B,GAC7DiC,EAAO,KAAOjC,GAASF,EAAU,KAAOE,KAE1CiC,EAAOnyB,MAAMqwB,GACbL,EAAUwC,MAAQ,WAChBL,EAAOK,QACPxC,EAAUkB,WAAalB,EAAUmB,MAEnCnB,EAAUkB,WAAalB,EAAUyC,UAC/B7B,KACFA,IAENoB,EAAIC,QAAQzmB,EAAM,CAChBgmB,QAAQ,GACPF,EAAU,SAAU5B,GAErBA,EAAKG,SACLhnB,MACEyoB,EAAU,SAAUp9B,GAClBA,EAAGo+B,OAASp+B,EAAGw+B,cACjB7pB,IAEA+nB,SAGFA,KACFA,IA/CFA,KAiDJ+B,EAAWrC,EAAU/hC,UAKvB,MAAyB,oBAAd+P,WAA6BA,UAAUs0B,iBACzC,SAAUvC,EAAM7kB,EAAM+kB,GAI3B,OAHKA,IACHF,EAAOD,EAASC,IAEX/xB,UAAUs0B,iBAAiBvC,EAAM7kB,GAAQ,cAGpDmnB,EAASH,MAAQ,WACC3/B,KACNq+B,WADMr+B,KACiBs+B,KACjCpB,EAFgBl9B,KAEI,UAEtB8/B,EAASzB,WAAayB,EAAStB,KAAO,EACtCsB,EAASF,QAAU,EACnBE,EAASxB,KAAO,EAChBwB,EAASv+B,MAAQu+B,EAASE,aAAeF,EAASG,WAAaH,EAASI,QAAUJ,EAASK,QAAUL,EAASpgB,QAAUogB,EAASP,WAAa,KApBnI,SAAgB/B,EAAM7kB,EAAM+kB,GACnC,OAAO,IAAID,EAAUD,EAAM7kB,EAAM+kB,MA3NhB,CAgPL,oBAAT9mB,MAAwBA,MAA0B,oBAAXC,QAA0BA,cAAU7P,GAAUpD,SAiC1Fsf,EAAY,CAChBkd,aAAyB,CACvBC,UAAa,UACbC,aAAgB,UAChBC,KAAQ,UACRC,WAAc,UACdC,MAAS,UACTC,MAAS,UACTC,OAAU,UACVC,MAAS,UACTC,eAAkB,UAClBC,KAAQ,UACRC,WAAc,UACdC,MAAS,UACTC,UAAa,UACbC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,MAAS,UACTC,eAAkB,UAClBC,SAAY,UACZC,QAAW,UACXC,KAAQ,UACRC,SAAY,UACZC,SAAY,UACZC,cAAiB,UACjBC,SAAY,UACZC,UAAa,UACbC,UAAa,UACbC,YAAe,UACfC,eAAkB,UAClBC,WAAc,UACdC,WAAc,UACdC,QAAW,UACXC,WAAc,UACdC,aAAgB,UAChBC,cAAiB,UACjBC,cAAiB,UACjBC,cAAiB,UACjBC,WAAc,UACdC,SAAY,UACZC,YAAe,UACfC,QAAW,UACXC,WAAc,UACdC,UAAa,UACbC,YAAe,UACfC,YAAe,UACfC,QAAW,UACXC,UAAa,UACbC,WAAc,UACdC,KAAQ,UACRC,UAAa,UACbC,KAAQ,UACRC,MAAS,UACTC,YAAe,UACfC,SAAY,UACZC,QAAW,UACXC,aAAc,UACdC,OAAU,UACVC,MAAS,UACTC,MAAS,UACTC,SAAY,UACZC,cAAiB,UACjBC,UAAa,UACbC,aAAgB,UAChBC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,qBAAwB,UACxBC,UAAa,UACbC,WAAc,UACdC,UAAa,UACbC,YAAe,UACfC,cAAiB,UACjBC,aAAgB,UAChBC,eAAkB,UAClBC,eAAkB,UAClBC,YAAe,UACfC,KAAQ,UACRC,UAAa,UACbC,MAAS,UACTC,QAAW,UACXC,OAAU,UACVC,iBAAoB,UACpBC,WAAc,UACdC,aAAgB,UAChBC,aAAgB,UAChBC,eAAkB,UAClBC,gBAAmB,UACnBC,kBAAqB,UACrBC,gBAAmB,UACnBC,gBAAmB,UACnBC,aAAgB,UAChBC,UAAa,UACbC,UAAa,UACbC,SAAY,UACZC,YAAe,UACfC,KAAQ,UACRC,QAAW,UACXC,MAAS,UACTC,UAAa,UACbC,OAAU,UACVC,UAAa,UACbC,OAAU,UACVC,cAAiB,UACjBC,UAAa,UACbC,cAAiB,UACjBC,cAAiB,UACjBC,WAAc,UACdC,UAAa,UACbC,KAAQ,UACRC,KAAQ,UACRC,KAAQ,UACRC,WAAc,UACdC,OAAU,UACVC,IAAO,UACPC,UAAa,UACbC,UAAa,UACbC,YAAe,UACfC,OAAU,UACVC,WAAc,UACdC,SAAY,UACZC,SAAY,UACZC,OAAU,UACVC,OAAU,UACVC,QAAW,UACXC,UAAa,UACbC,UAAa,UACbC,KAAQ,UACRC,YAAe,UACfC,UAAa,UACbC,IAAO,UACPC,KAAQ,UACRC,QAAW,UACXC,OAAU,UACVC,UAAa,UACbC,OAAU,UACVC,MAAS,UACTC,MAAS,UACTC,WAAc,UACdC,OAAU,UACVC,YAAe,WAEjB7lB,eAA2B,SAAU1O,GAEnC,OADAA,EAAQA,EAAMvS,mBACyB,IAA5BlC,KAAKogC,aAAa3rB,IAA8BzU,KAAKogC,aAAa3rB,KAmC3E9L,EAAW,SAAUrN,GAGvB,IAAI2tC,EAAW,GACXC,EAAU,GACVC,EAAW,GAEXC,EAAW,IACXC,EAAUD,EAAW,EAFN,GAGfE,EAAY,EAAID,EAAU,EAC1BE,EAAY,IAMZC,EAAU,GAGVC,EAAY,GAGZC,EAAc,GAMdC,EAAW,GAGXC,GAAyB,EAGzBC,EAAa,EACbC,EAAiB,EACjBC,EAAqB,EACrBC,EAAa,EACbC,EAAkB,EAClBC,EAAe,EACfC,EAAW,EACXC,EAAO,EACPC,EAAe,EACfC,EAAc,EACdC,GAAkB,EAClBC,GAAgB,EAChBC,GAAe,EAKfC,EAAaqC,KAyFX,SAAS6qC,EAAWpL,EAEpB10B,GAEE,IAAI+/B,EAAM,EACV,GACEA,GAAc,EAAPrL,EACPA,KAAU,EACVqL,IAAQ,UACC//B,EAAM,GACjB,OAAO+/B,IAAQ,EAgDjBF,EAAKG,WAAa,SAAUt7B,GAC1B,IAGI5H,EAAG8E,EAEHud,EALA8gB,EAAOJ,EAAKK,SACZC,EAAQN,EAAKO,UAAUC,YACvBC,EAAQT,EAAKO,UAAUE,MAEvBC,GAAY,EAQhB,IAFA77B,EAAE87B,SAAW,EACb97B,EAAE+7B,SAAWlC,EACRzhC,EAAI,EAAGA,EAAIwjC,EAAOxjC,IACD,IAAhBmjC,EAAS,EAAJnjC,IACP4H,EAAEg8B,OAAOh8B,EAAE87B,UAAYD,EAAWzjC,EAClC4H,EAAEi8B,MAAM7jC,GAAK,GAEbmjC,EAAS,EAAJnjC,EAAQ,GAAK,EAQtB,KAAO4H,EAAE87B,SAAW,GAElBP,EAAY,GADZ9gB,EAAOza,EAAEg8B,OAAOh8B,EAAE87B,UAAYD,EAAW,IAAMA,EAAW,IACzC,EACjB77B,EAAEi8B,MAAMxhB,GAAQ,EAChBza,EAAEk8B,UACET,IAAOz7B,EAAEm8B,YAAcV,EAAa,EAAPhhB,EAAW,IAS9C,IALA0gB,EAAKU,SAAWA,EAKXzjC,EAAItH,KAAKoJ,MAAM8F,EAAE87B,SAAW,GAAI1jC,GAAK,EAAGA,IAC3C4H,EAAEo8B,WAAWb,EAAMnjC,GAMrBqiB,EAAOmhB,EACP,GAEExjC,EAAI4H,EAAEg8B,KAAK,GACXh8B,EAAEg8B,KAAK,GAAKh8B,EAAEg8B,KAAKh8B,EAAE87B,YACrB97B,EAAEo8B,WAAWb,EAAM,GACnBr+B,EAAI8C,EAAEg8B,KAAK,GAEXh8B,EAAEg8B,OAAOh8B,EAAE+7B,UAAY3jC,EACvB4H,EAAEg8B,OAAOh8B,EAAE+7B,UAAY7+B,EAGvBq+B,EAAY,EAAP9gB,GAAY8gB,EAAS,EAAJnjC,GAASmjC,EAAS,EAAJr+B,GACpC8C,EAAEi8B,MAAMxhB,GAAQ3pB,KAAK6Q,IAAI3B,EAAEi8B,MAAM7jC,GAAI4H,EAAEi8B,MAAM/+B,IAAM,EACnDq+B,EAAS,EAAJnjC,EAAQ,GAAKmjC,EAAS,EAAJr+B,EAAQ,GAAKud,EAGpCza,EAAEg8B,KAAK,GAAKvhB,IACZza,EAAEo8B,WAAWb,EAAM,SACZv7B,EAAE87B,UAAY,GACvB97B,EAAEg8B,OAAOh8B,EAAE+7B,UAAY/7B,EAAEg8B,KAAK,GAvMhC,SAAoBh8B,GAClB,IAKImD,EACA/K,EAAG8E,EACHwiB,EACA2c,EACApa,EATAsZ,EAAOJ,EAAKK,SACZC,EAAQN,EAAKO,UAAUC,YACvBW,EAAQnB,EAAKO,UAAUa,WACvBC,EAAOrB,EAAKO,UAAUe,WACtBC,EAAavB,EAAKO,UAAUgB,WAM5BC,EAAW,EAEf,IAAKjd,EAAO,EAAGA,GAAQ8Z,EAAU9Z,IAC/B1f,EAAE48B,SAASld,GAAQ,EAOrB,IAFA6b,EAA0B,EAArBv7B,EAAEg8B,KAAKh8B,EAAE+7B,UAAgB,GAAK,EAE9B54B,EAAInD,EAAE+7B,SAAW,EAAG54B,EAAI02B,EAAW12B,KAEtCuc,EAAO6b,EAAuB,EAAlBA,EAAS,GADrBnjC,EAAI4H,EAAEg8B,KAAK74B,IACc,GAAS,GAAK,GAC5Bu5B,IACThd,EAAOgd,EACPC,KAEFpB,EAAS,EAAJnjC,EAAQ,GAAKsnB,EAGdtnB,EAAI+iC,EAAKU,WAEb77B,EAAE48B,SAASld,KACX2c,EAAQ,EACJjkC,GAAKokC,IAAMH,EAAQC,EAAMlkC,EAAIokC,IACjCva,EAAIsZ,EAAS,EAAJnjC,GACT4H,EAAEk8B,SAAWja,GAAKvC,EAAO2c,GACrBZ,IAAOz7B,EAAEm8B,YAAcla,GAAKwZ,EAAU,EAAJrjC,EAAQ,GAAKikC,KAErD,GAAiB,IAAbM,EAAJ,CAIA,EAAG,CAED,IADAjd,EAAOgd,EAAa,EACQ,IAArB18B,EAAE48B,SAASld,IAChBA,IAEF1f,EAAE48B,SAASld,KACX1f,EAAE48B,SAASld,EAAO,IAAM,EACxB1f,EAAE48B,SAASF,KAGXC,GAAY,QACLA,EAAW,GACpB,IAAKjd,EAAOgd,EAAqB,IAAThd,EAAYA,IAElC,IADAtnB,EAAI4H,EAAE48B,SAASld,GACF,IAANtnB,IACL8E,EAAI8C,EAAEg8B,OAAO74B,IACLg4B,EAAKU,WACTN,EAAS,EAAJr+B,EAAQ,IAAMwiB,IACrB1f,EAAEk8B,UAAYxc,EAAO6b,EAAS,EAAJr+B,EAAQ,IAAMq+B,EAAS,EAAJr+B,GAC7Cq+B,EAAS,EAAJr+B,EAAQ,GAAKwiB,GAEpBtnB,MA2IJykC,CAAW78B,GA/Gb,SAAmBu7B,EAEnBM,EAEAe,GAEE,IAGIld,EACAtnB,EACAkD,EALAwhC,EAAY,GAEZ9M,EAAO,EAOX,IAAKtQ,EAAO,EAAGA,GAAQ8Z,EAAU9Z,IAC/Bod,EAAUpd,GAAQsQ,EAAOA,EAAO4M,EAASld,EAAO,IAAM,EASxD,IAAKtnB,EAAI,EAAGA,GAAKyjC,EAAUzjC,IAEb,KADZkD,EAAMigC,EAAS,EAAJnjC,EAAQ,MAGnBmjC,EAAS,EAAJnjC,GAASgjC,EAAW0B,EAAUxhC,KAAQA,IAqF7CyhC,CAAUxB,EAAMJ,EAAKU,SAAU77B,EAAE48B,WA0BrC,SAASI,EAAWrB,EAAaY,EAAYE,EAAYb,EAAOc,GACnDnsC,KACNorC,YAAcA,EADRprC,KAENgsC,WAAaA,EAFPhsC,KAGNksC,WAAaA,EAHPlsC,KAINqrC,MAAQA,EAJFrrC,KAKNmsC,WAAaA,EA7BpBxB,EAAK+B,aAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrgC/B,EAAKgC,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAChIhC,EAAKiC,UAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,OAKzJjC,EAAKkC,OAAS,SAAUC,GACtB,OAAOA,EAAO,IAAMpC,EAAWoC,GAAQpC,EAAW,KAAOoC,IAAS,KAIpEnC,EAAKoC,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGxGpC,EAAKqC,YAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGlHrC,EAAKsC,aAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3EtC,EAAKuC,SAAW,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAY/ET,EAAWU,aAAe,CAAC,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG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","sourcesContent":["/* eslint-disable */\r\ndefine('local_edwiserreports/vendor/jspdf', ['jquery'], function($) {\r\n    /** @preserve\r\n     * jsPDF - PDF Document creation from JavaScript\r\n     * Version ${versionID}\r\n     *                           CommitID ${commitID}\r\n     *\r\n     * Copyright (c) 2010-2014 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF\r\n     *               2010 Aaron Spike, https://github.com/acspike\r\n     *               2012 Willow Systems Corporation, willow-systems.com\r\n     *               2012 Pablo Hess, https://github.com/pablohess\r\n     *               2012 Florian Jenett, https://github.com/fjenett\r\n     *               2013 Warren Weckesser, https://github.com/warrenweckesser\r\n     *               2013 Youssef Beddad, https://github.com/lifof\r\n     *               2013 Lee Driscoll, https://github.com/lsdriscoll\r\n     *               2013 Stefan Slonevskiy, https://github.com/stefslon\r\n     *               2013 Jeremy Morel, https://github.com/jmorel\r\n     *               2013 Christoph Hartmann, https://github.com/chris-rock\r\n     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\r\n     *               2014 James Makes, https://github.com/dollaruw\r\n     *               2014 Diego Casorran, https://github.com/diegocr\r\n     *               2014 Steven Spungin, https://github.com/Flamenco\r\n     *               2014 Kenneth Glassey, https://github.com/Gavvers\r\n     *\r\n     * Permission is hereby granted, free of charge, to any person obtaining\r\n     * a copy of this software and associated documentation files (the\r\n     * \"Software\"), to deal in the Software without restriction, including\r\n     * without limitation the rights to use, copy, modify, merge, publish,\r\n     * distribute, sublicense, and/or sell copies of the Software, and to\r\n     * permit persons to whom the Software is furnished to do so, subject to\r\n     * the following conditions:\r\n     *\r\n     * The above copyright notice and this permission notice shall be\r\n     * included in all copies or substantial portions of the Software.\r\n     *\r\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n     *\r\n     * Contributor(s):\r\n     *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\r\n     *    kim3er, mfo, alnorth, Flamenco\r\n     */\r\n\r\n    /**\r\n     * Creates new jsPDF document object instance.\r\n     *\r\n     * @class\r\n     * @param orientation One of \"portrait\" or \"landscape\" (or shortcuts \"p\" (Default), \"l\")\r\n     * @param unit        Measurement unit to be used when coordinates are specified.\r\n     *                    One of \"pt\" (points), \"mm\" (Default), \"cm\", \"in\"\r\n     * @param format      One of 'pageFormats' as shown below, default: a4\r\n     * @returns {jsPDF}\r\n     * @name jsPDF\r\n     */\r\n    var jsPDF = (function(global) {\r\n        'use strict';\r\n        var pdfVersion = '1.3',\r\n            pageFormats = { // Size in pt of various paper formats\r\n                'a0': [2383.94, 3370.39],\r\n                'a1': [1683.78, 2383.94],\r\n                'a2': [1190.55, 1683.78],\r\n                'a3': [841.89, 1190.55],\r\n                'a4': [595.28, 841.89],\r\n                'a5': [419.53, 595.28],\r\n                'a6': [297.64, 419.53],\r\n                'a7': [209.76, 297.64],\r\n                'a8': [147.40, 209.76],\r\n                'a9': [104.88, 147.40],\r\n                'a10': [73.70, 104.88],\r\n                'b0': [2834.65, 4008.19],\r\n                'b1': [2004.09, 2834.65],\r\n                'b2': [1417.32, 2004.09],\r\n                'b3': [1000.63, 1417.32],\r\n                'b4': [708.66, 1000.63],\r\n                'b5': [498.90, 708.66],\r\n                'b6': [354.33, 498.90],\r\n                'b7': [249.45, 354.33],\r\n                'b8': [175.75, 249.45],\r\n                'b9': [124.72, 175.75],\r\n                'b10': [87.87, 124.72],\r\n                'c0': [2599.37, 3676.54],\r\n                'c1': [1836.85, 2599.37],\r\n                'c2': [1298.27, 1836.85],\r\n                'c3': [918.43, 1298.27],\r\n                'c4': [649.13, 918.43],\r\n                'c5': [459.21, 649.13],\r\n                'c6': [323.15, 459.21],\r\n                'c7': [229.61, 323.15],\r\n                'c8': [161.57, 229.61],\r\n                'c9': [113.39, 161.57],\r\n                'c10': [79.37, 113.39],\r\n                'dl': [311.81, 623.62],\r\n                'letter': [612, 792],\r\n                'government-letter': [576, 756],\r\n                'legal': [612, 1008],\r\n                'junior-legal': [576, 360],\r\n                'ledger': [1224, 792],\r\n                'tabloid': [792, 1224],\r\n                'credit-card': [153, 243]\r\n            };\r\n\r\n        /**\r\n         * jsPDF's Internal PubSub Implementation.\r\n         * See mrrio.github.io/jsPDF/doc/symbols/PubSub.html\r\n         * Backward compatible rewritten on 2014 by\r\n         * Diego Casorran, https://github.com/diegocr\r\n         *\r\n         * @class\r\n         * @name PubSub\r\n         */\r\n        function PubSub(context) {\r\n            var topics = {};\r\n\r\n            this.subscribe = function(topic, callback, once) {\r\n                if (typeof callback !== 'function') {\r\n                    return false;\r\n                }\r\n\r\n                if (!topics.hasOwnProperty(topic)) {\r\n                    topics[topic] = {};\r\n                }\r\n\r\n                var id = Math.random().toString(35);\r\n                topics[topic][id] = [callback, !!once];\r\n\r\n                return id;\r\n            };\r\n\r\n            this.unsubscribe = function(token) {\r\n                for (var topic in topics) {\r\n                    if (topics[topic][token]) {\r\n                        delete topics[topic][token];\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n\r\n            this.publish = function(topic) {\r\n                if (topics.hasOwnProperty(topic)) {\r\n                    var args = Array.prototype.slice.call(arguments, 1),\r\n                        idr = [];\r\n\r\n                    for (var id in topics[topic]) {\r\n                        var sub = topics[topic][id];\r\n                        try {\r\n                            sub[0].apply(context, args);\r\n                        } catch (ex) {\r\n                            if (global.console) {\r\n                                console.error('jsPDF PubSub Error', ex.message, ex);\r\n                            }\r\n                        }\r\n                        if (sub[1]) idr.push(id);\r\n                    }\r\n                    if (idr.length) idr.forEach(this.unsubscribe);\r\n                }\r\n            };\r\n        }\r\n\r\n        /**\r\n         * @constructor\r\n         * @private\r\n         */\r\n        function jsPDF(orientation, unit, format, compressPdf) {\r\n            var options = {};\r\n\r\n            if (typeof orientation === 'object') {\r\n                options = orientation;\r\n\r\n                orientation = options.orientation;\r\n                unit = options.unit || unit;\r\n                format = options.format || format;\r\n                compressPdf = options.compress || options.compressPdf || compressPdf;\r\n            }\r\n\r\n            // Default options\r\n            unit = unit || 'mm';\r\n            format = format || 'a4';\r\n            orientation = ('' + (orientation || 'P')).toLowerCase();\r\n\r\n            var format_as_string = ('' + format).toLowerCase(),\r\n                compress = !!compressPdf && typeof Uint8Array === 'function',\r\n                textColor = options.textColor || '0 g',\r\n                drawColor = options.drawColor || '0 G',\r\n                activeFontSize = options.fontSize || 16,\r\n                lineHeightProportion = options.lineHeight || 1.15,\r\n                lineWidth = options.lineWidth || 0.200025, // 2mm\r\n                objectNumber = 2, // 'n' Current object number\r\n                outToPages = !1, // switches where out() prints. outToPages true = push to pages obj. outToPages false = doc builder content\r\n                offsets = [], // List of offsets. Activated and reset by buildDocument(). Pupulated by various calls buildDocument makes.\r\n                fonts = {}, // collection of font objects, where key is fontKey - a dynamically created label for a given font.\r\n                fontmap = {}, // mapping structure fontName > fontStyle > font key - performance layer. See addFont()\r\n                activeFontKey, // will be string representing the KEY of the font as combination of fontName + fontStyle\r\n                k, // Scale factor\r\n                tmp,\r\n                page = 0,\r\n                currentPage,\r\n                pages = [],\r\n                pagesContext = [], // same index as pages and pagedim\r\n                pagedim = [],\r\n                content = [],\r\n                additionalObjects = [],\r\n                lineCapID = 0,\r\n                lineJoinID = 0,\r\n                content_length = 0,\r\n                pageWidth,\r\n                pageHeight,\r\n                pageMode,\r\n                zoomMode,\r\n                layoutMode,\r\n                documentProperties = {\r\n                    'title': '',\r\n                    'subject': '',\r\n                    'author': '',\r\n                    'keywords': '',\r\n                    'creator': ''\r\n                },\r\n                API = {},\r\n                events = new PubSub(API),\r\n\r\n                /////////////////////\r\n                // Private functions\r\n                /////////////////////\r\n                f2 = function(number) {\r\n                    return number.toFixed(2); // Ie, %.2f\r\n                },\r\n                f3 = function(number) {\r\n                    return number.toFixed(3); // Ie, %.3f\r\n                },\r\n                padd2 = function(number) {\r\n                    return ('0' + parseInt(number)).slice(-2);\r\n                },\r\n                out = function(string) {\r\n                    if (outToPages) {\r\n                        /* set by beginPage */\r\n                        pages[currentPage].push(string);\r\n                    } else {\r\n                        // +1 for '\\n' that will be used to join 'content'\r\n                        content_length += string.length + 1;\r\n                        content.push(string);\r\n                    }\r\n                },\r\n                newObject = function() {\r\n                    // Begin a new object\r\n                    objectNumber++;\r\n                    offsets[objectNumber] = content_length;\r\n                    out(objectNumber + ' 0 obj');\r\n                    return objectNumber;\r\n                },\r\n                // Does not output the object until after the pages have been output.\r\n                // Returns an object containing the objectId and content.\r\n                // All pages have been added so the object ID can be estimated to start right after.\r\n                // This does not modify the current objectNumber;  It must be updated after the newObjects are output.\r\n                newAdditionalObject = function() {\r\n                    var objId = pages.length * 2 + 1;\r\n                    objId += additionalObjects.length;\r\n                    var obj = { objId: objId, content: '' };\r\n                    additionalObjects.push(obj);\r\n                    return obj;\r\n                },\r\n                // Does not output the object.  The caller must call newObjectDeferredBegin(oid) before outputing any data\r\n                newObjectDeferred = function() {\r\n                    objectNumber++;\r\n                    offsets[objectNumber] = function() {\r\n                        return content_length;\r\n                    };\r\n                    return objectNumber;\r\n                },\r\n                newObjectDeferredBegin = function(oid) {\r\n                    offsets[oid] = content_length;\r\n                },\r\n                putStream = function(str) {\r\n                    out('stream');\r\n                    out(str);\r\n                    out('endstream');\r\n                },\r\n                putPages = function() {\r\n                    var n, p, arr, i, deflater, adler32, adler32cs, wPt, hPt, pageObjectNumbers = [];\r\n\r\n                    adler32cs = global.adler32cs || jsPDF.adler32cs;\r\n                    if (compress && typeof adler32cs === 'undefined') {\r\n                        compress = false;\r\n                    }\r\n\r\n                    // outToPages = false as set in endDocument(). out() writes to content.\r\n\r\n                    for (n = 1; n <= page; n++) {\r\n                        pageObjectNumbers.push(newObject());\r\n                        wPt = (pageWidth = pagedim[n].width) * k;\r\n                        hPt = (pageHeight = pagedim[n].height) * k;\r\n                        out('<</Type /Page');\r\n                        out('/Parent 1 0 R');\r\n                        out('/Resources 2 0 R');\r\n                        out('/MediaBox [0 0 ' + f2(wPt) + ' ' + f2(hPt) + ']');\r\n                        // Added for annotation plugin\r\n                        events.publish('putPage', { pageNumber: n, page: pages[n] });\r\n                        out('/Contents ' + (objectNumber + 1) + ' 0 R');\r\n                        out('>>');\r\n                        out('endobj');\r\n\r\n                        // Page content\r\n                        p = pages[n].join('\\n');\r\n                        newObject();\r\n                        if (compress) {\r\n                            arr = [];\r\n                            i = p.length;\r\n                            while (i--) {\r\n                                arr[i] = p.charCodeAt(i);\r\n                            }\r\n                            adler32 = adler32cs.from(p);\r\n                            deflater = new Deflater(6);\r\n                            deflater.append(new Uint8Array(arr));\r\n                            p = deflater.flush();\r\n                            arr = new Uint8Array(p.length + 6);\r\n                            arr.set(new Uint8Array([120, 156])),\r\n                                arr.set(p, 2);\r\n                            arr.set(new Uint8Array([adler32 & 0xFF, (adler32 >> 8) & 0xFF, (adler32 >> 16) & 0xFF, (adler32 >> 24) & 0xFF]), p.length + 2);\r\n                            p = String.fromCharCode.apply(null, arr);\r\n                            out('<</Length ' + p.length + ' /Filter [/FlateDecode]>>');\r\n                        } else {\r\n                            out('<</Length ' + p.length + '>>');\r\n                        }\r\n                        putStream(p);\r\n                        out('endobj');\r\n                    }\r\n                    offsets[1] = content_length;\r\n                    out('1 0 obj');\r\n                    out('<</Type /Pages');\r\n                    var kids = '/Kids [';\r\n                    for (i = 0; i < page; i++) {\r\n                        kids += pageObjectNumbers[i] + ' 0 R ';\r\n                    }\r\n                    out(kids + ']');\r\n                    out('/Count ' + page);\r\n                    out('>>');\r\n                    out('endobj');\r\n                    events.publish('postPutPages');\r\n                },\r\n                putFont = function(font) {\r\n                    font.objectNumber = newObject();\r\n                    out('<</BaseFont/' + font.PostScriptName + '/Type/Font');\r\n                    if (typeof font.encoding === 'string') {\r\n                        out('/Encoding/' + font.encoding);\r\n                    }\r\n                    out('/Subtype/Type1>>');\r\n                    out('endobj');\r\n                },\r\n                putFonts = function() {\r\n                    for (var fontKey in fonts) {\r\n                        if (fonts.hasOwnProperty(fontKey)) {\r\n                            putFont(fonts[fontKey]);\r\n                        }\r\n                    }\r\n                },\r\n                putXobjectDict = function() {\r\n                    // Loop through images, or other data objects\r\n                    events.publish('putXobjectDict');\r\n                },\r\n                putResourceDictionary = function() {\r\n                    out('/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]');\r\n                    out('/Font <<');\r\n\r\n                    // Do this for each font, the '1' bit is the index of the font\r\n                    for (var fontKey in fonts) {\r\n                        if (fonts.hasOwnProperty(fontKey)) {\r\n                            out('/' + fontKey + ' ' + fonts[fontKey].objectNumber + ' 0 R');\r\n                        }\r\n                    }\r\n                    out('>>');\r\n                    out('/XObject <<');\r\n                    putXobjectDict();\r\n                    out('>>');\r\n                },\r\n                putResources = function() {\r\n                    putFonts();\r\n                    events.publish('putResources');\r\n                    // Resource dictionary\r\n                    offsets[2] = content_length;\r\n                    out('2 0 obj');\r\n                    out('<<');\r\n                    putResourceDictionary();\r\n                    out('>>');\r\n                    out('endobj');\r\n                    events.publish('postPutResources');\r\n                },\r\n                putAdditionalObjects = function() {\r\n                    events.publish('putAdditionalObjects');\r\n                    for (var i = 0; i < additionalObjects.length; i++) {\r\n                        var obj = additionalObjects[i];\r\n                        offsets[obj.objId] = content_length;\r\n                        out(obj.objId + ' 0 obj');\r\n                        out(obj.content);;\r\n                        out('endobj');\r\n                    }\r\n                    objectNumber += additionalObjects.length;\r\n                    events.publish('postPutAdditionalObjects');\r\n                },\r\n                addToFontDictionary = function(fontKey, fontName, fontStyle) {\r\n                    // this is mapping structure for quick font key lookup.\r\n                    // returns the KEY of the font (ex: \"F1\") for a given\r\n                    // pair of font name and type (ex: \"Arial\". \"Italic\")\r\n                    if (!fontmap.hasOwnProperty(fontName)) {\r\n                        fontmap[fontName] = {};\r\n                    }\r\n                    fontmap[fontName][fontStyle] = fontKey;\r\n                },\r\n                /**\r\n                 * FontObject describes a particular font as member of an instnace of jsPDF\r\n                 *\r\n                 * It's a collection of properties like 'id' (to be used in PDF stream),\r\n                 * 'fontName' (font's family name), 'fontStyle' (font's style variant label)\r\n                 *\r\n                 * @class\r\n                 * @public\r\n                 * @property id {String} PDF-document-instance-specific label assinged to the font.\r\n                 * @property PostScriptName {String} PDF specification full name for the font\r\n                 * @property encoding {Object} Encoding_name-to-Font_metrics_object mapping.\r\n                 * @name FontObject\r\n                 */\r\n                addFont = function(PostScriptName, fontName, fontStyle, encoding) {\r\n                    var fontKey = 'F' + (Object.keys(fonts).length + 1).toString(10),\r\n                        // This is FontObject\r\n                        font = fonts[fontKey] = {\r\n                            'id': fontKey,\r\n                            'PostScriptName': PostScriptName,\r\n                            'fontName': fontName,\r\n                            'fontStyle': fontStyle,\r\n                            'encoding': encoding,\r\n                            'metadata': {}\r\n                        };\r\n                    addToFontDictionary(fontKey, fontName, fontStyle);\r\n                    events.publish('addFont', font);\r\n\r\n                    return fontKey;\r\n                },\r\n                addFonts = function() {\r\n\r\n                    var HELVETICA = \"helvetica\",\r\n                        TIMES = \"times\",\r\n                        COURIER = \"courier\",\r\n                        NORMAL = \"normal\",\r\n                        BOLD = \"bold\",\r\n                        ITALIC = \"italic\",\r\n                        BOLD_ITALIC = \"bolditalic\",\r\n                        encoding = 'StandardEncoding',\r\n                        ZAPF = \"zapfdingbats\",\r\n                        standardFonts = [\r\n                            ['Helvetica', HELVETICA, NORMAL],\r\n                            ['Helvetica-Bold', HELVETICA, BOLD],\r\n                            ['Helvetica-Oblique', HELVETICA, ITALIC],\r\n                            ['Helvetica-BoldOblique', HELVETICA, BOLD_ITALIC],\r\n                            ['Courier', COURIER, NORMAL],\r\n                            ['Courier-Bold', COURIER, BOLD],\r\n                            ['Courier-Oblique', COURIER, ITALIC],\r\n                            ['Courier-BoldOblique', COURIER, BOLD_ITALIC],\r\n                            ['Times-Roman', TIMES, NORMAL],\r\n                            ['Times-Bold', TIMES, BOLD],\r\n                            ['Times-Italic', TIMES, ITALIC],\r\n                            ['Times-BoldItalic', TIMES, BOLD_ITALIC],\r\n                            ['ZapfDingbats', ZAPF]\r\n                        ];\r\n\r\n                    for (var i = 0, l = standardFonts.length; i < l; i++) {\r\n                        var fontKey = addFont(\r\n                            standardFonts[i][0],\r\n                            standardFonts[i][1],\r\n                            standardFonts[i][2],\r\n                            encoding);\r\n\r\n                        // adding aliases for standard fonts, this time matching the capitalization\r\n                        var parts = standardFonts[i][0].split('-');\r\n                        addToFontDictionary(fontKey, parts[0], parts[1] || '');\r\n                    }\r\n                    events.publish('addFonts', { fonts: fonts, dictionary: fontmap });\r\n                },\r\n                SAFE = function __safeCall(fn) {\r\n                    fn.foo = function __safeCallWrapper() {\r\n                        try {\r\n                            return fn.apply(this, arguments);\r\n                        } catch (e) {\r\n                            var stack = e.stack || '';\r\n                            if (~stack.indexOf(' at ')) stack = stack.split(\" at \")[1];\r\n                            var m = \"Error in function \" + stack.split(\"\\n\")[0].split('<')[0] + \": \" + e.message;\r\n                            if (global.console) {\r\n                                global.console.error(m, e);\r\n                                if (global.alert) alert(m);\r\n                            } else {\r\n                                throw new Error(m);\r\n                            }\r\n                        }\r\n                    };\r\n                    fn.foo.bar = fn;\r\n                    return fn.foo;\r\n                },\r\n                to8bitStream = function(text, flags) {\r\n                    /**\r\n                     * PDF 1.3 spec:\r\n                     * \"For text strings encoded in Unicode, the first two bytes must be 254 followed by\r\n                     * 255, representing the Unicode byte order marker, U+FEFF. (This sequence conflicts\r\n                     * with the PDFDocEncoding character sequence thorn ydieresis, which is unlikely\r\n                     * to be a meaningful beginning of a word or phrase.) The remainder of the\r\n                     * string consists of Unicode character codes, according to the UTF-16 encoding\r\n                     * specified in the Unicode standard, version 2.0. Commonly used Unicode values\r\n                     * are represented as 2 bytes per character, with the high-order byte appearing first\r\n                     * in the string.\"\r\n                     *\r\n                     * In other words, if there are chars in a string with char code above 255, we\r\n                     * recode the string to UCS2 BE - string doubles in length and BOM is prepended.\r\n                     *\r\n                     * HOWEVER!\r\n                     * Actual *content* (body) text (as opposed to strings used in document properties etc)\r\n                     * does NOT expect BOM. There, it is treated as a literal GID (Glyph ID)\r\n                     *\r\n                     * Because of Adobe's focus on \"you subset your fonts!\" you are not supposed to have\r\n                     * a font that maps directly Unicode (UCS2 / UTF16BE) code to font GID, but you could\r\n                     * fudge it with \"Identity-H\" encoding and custom CIDtoGID map that mimics Unicode\r\n                     * code page. There, however, all characters in the stream are treated as GIDs,\r\n                     * including BOM, which is the reason we need to skip BOM in content text (i.e. that\r\n                     * that is tied to a font).\r\n                     *\r\n                     * To signal this \"special\" PDFEscape / to8bitStream handling mode,\r\n                     * API.text() function sets (unless you overwrite it with manual values\r\n                     * given to API.text(.., flags) )\r\n                     * flags.autoencode = true\r\n                     * flags.noBOM = true\r\n                     *\r\n                     * ===================================================================================\r\n                     * `flags` properties relied upon:\r\n                     *   .sourceEncoding = string with encoding label.\r\n                     *                     \"Unicode\" by default. = encoding of the incoming text.\r\n                     *                     pass some non-existing encoding name\r\n                     *                     (ex: 'Do not touch my strings! I know what I am doing.')\r\n                     *                     to make encoding code skip the encoding step.\r\n                     *   .outputEncoding = Either valid PDF encoding name\r\n                     *                     (must be supported by jsPDF font metrics, otherwise no encoding)\r\n                     *                     or a JS object, where key = sourceCharCode, value = outputCharCode\r\n                     *                     missing keys will be treated as: sourceCharCode === outputCharCode\r\n                     *   .noBOM\r\n                     *       See comment higher above for explanation for why this is important\r\n                     *   .autoencode\r\n                     *       See comment higher above for explanation for why this is important\r\n                     */\r\n\r\n                    var i, l, sourceEncoding, encodingBlock, outputEncoding, newtext, isUnicode, ch, bch;\r\n\r\n                    flags = flags || {};\r\n                    sourceEncoding = flags.sourceEncoding || 'Unicode';\r\n                    outputEncoding = flags.outputEncoding;\r\n\r\n                    // This 'encoding' section relies on font metrics format\r\n                    // attached to font objects by, among others,\r\n                    // \"Willow Systems' standard_font_metrics plugin\"\r\n                    // see jspdf.plugin.standard_font_metrics.js for format\r\n                    // of the font.metadata.encoding Object.\r\n                    // It should be something like\r\n                    //   .encoding = {'codePages':['WinANSI....'], 'WinANSI...':{code:code, ...}}\r\n                    //   .widths = {0:width, code:width, ..., 'fof':divisor}\r\n                    //   .kerning = {code:{previous_char_code:shift, ..., 'fof':-divisor},...}\r\n                    if ((flags.autoencode || outputEncoding) &&\r\n                        fonts[activeFontKey].metadata &&\r\n                        fonts[activeFontKey].metadata[sourceEncoding] &&\r\n                        fonts[activeFontKey].metadata[sourceEncoding].encoding) {\r\n                        encodingBlock = fonts[activeFontKey].metadata[sourceEncoding].encoding;\r\n\r\n                        // each font has default encoding. Some have it clearly defined.\r\n                        if (!outputEncoding && fonts[activeFontKey].encoding) {\r\n                            outputEncoding = fonts[activeFontKey].encoding;\r\n                        }\r\n\r\n                        // Hmmm, the above did not work? Let's try again, in different place.\r\n                        if (!outputEncoding && encodingBlock.codePages) {\r\n                            outputEncoding = encodingBlock.codePages[0]; // let's say, first one is the default\r\n                        }\r\n\r\n                        if (typeof outputEncoding === 'string') {\r\n                            outputEncoding = encodingBlock[outputEncoding];\r\n                        }\r\n                        // we want output encoding to be a JS Object, where\r\n                        // key = sourceEncoding's character code and\r\n                        // value = outputEncoding's character code.\r\n                        if (outputEncoding) {\r\n                            isUnicode = false;\r\n                            newtext = [];\r\n                            for (i = 0, l = text.length; i < l; i++) {\r\n                                ch = outputEncoding[text.charCodeAt(i)];\r\n                                if (ch) {\r\n                                    newtext.push(\r\n                                        String.fromCharCode(ch));\r\n                                } else {\r\n                                    newtext.push(\r\n                                        text[i]);\r\n                                }\r\n\r\n                                // since we are looping over chars anyway, might as well\r\n                                // check for residual unicodeness\r\n                                if (newtext[i].charCodeAt(0) >> 8) {\r\n                                    /* more than 255 */\r\n                                    isUnicode = true;\r\n                                }\r\n                            }\r\n                            text = newtext.join('');\r\n                        }\r\n                    }\r\n\r\n                    i = text.length;\r\n                    // isUnicode may be set to false above. Hence the triple-equal to undefined\r\n                    while (isUnicode === undefined && i !== 0) {\r\n                        if (text.charCodeAt(i - 1) >> 8) {\r\n                            /* more than 255 */\r\n                            isUnicode = true;\r\n                        }\r\n                        i--;\r\n                    }\r\n                    if (!isUnicode) {\r\n                        return text;\r\n                    }\r\n\r\n                    newtext = flags.noBOM ? [] : [254, 255];\r\n                    for (i = 0, l = text.length; i < l; i++) {\r\n                        ch = text.charCodeAt(i);\r\n                        bch = ch >> 8; // divide by 256\r\n                        if (bch >> 8) {\r\n                            /* something left after dividing by 256 second time */\r\n                            throw new Error(\"Character at position \" + i + \" of string '\" +\r\n                                text + \"' exceeds 16bits. Cannot be encoded into UCS-2 BE\");\r\n                        }\r\n                        newtext.push(bch);\r\n                        newtext.push(ch - (bch << 8));\r\n                    }\r\n                    return String.fromCharCode.apply(undefined, newtext);\r\n                },\r\n                pdfEscape = function(text, flags) {\r\n                    /**\r\n                     * Replace '/', '(', and ')' with pdf-safe versions\r\n                     *\r\n                     * Doing to8bitStream does NOT make this PDF display unicode text. For that\r\n                     * we also need to reference a unicode font and embed it - royal pain in the rear.\r\n                     *\r\n                     * There is still a benefit to to8bitStream - PDF simply cannot handle 16bit chars,\r\n                     * which JavaScript Strings are happy to provide. So, while we still cannot display\r\n                     * 2-byte characters property, at least CONDITIONALLY converting (entire string containing)\r\n                     * 16bit chars to (USC-2-BE) 2-bytes per char + BOM streams we ensure that entire PDF\r\n                     * is still parseable.\r\n                     * This will allow immediate support for unicode in document properties strings.\r\n                     */\r\n                    return to8bitStream(text, flags).replace(/\\\\/g, '\\\\\\\\').replace(/\\(/g, '\\\\(').replace(/\\)/g, '\\\\)');\r\n                },\r\n                putInfo = function() {\r\n                    out('/Producer (jsPDF ' + jsPDF.version + ')');\r\n                    for (var key in documentProperties) {\r\n                        if (documentProperties.hasOwnProperty(key) && documentProperties[key]) {\r\n                            out('/' + key.substr(0, 1).toUpperCase() + key.substr(1) +\r\n                                ' (' + pdfEscape(documentProperties[key]) + ')');\r\n                        }\r\n                    }\r\n                    var created = new Date(),\r\n                        tzoffset = created.getTimezoneOffset(),\r\n                        tzsign = tzoffset < 0 ? '+' : '-',\r\n                        tzhour = Math.floor(Math.abs(tzoffset / 60)),\r\n                        tzmin = Math.abs(tzoffset % 60),\r\n                        tzstr = [tzsign, padd2(tzhour), \"'\", padd2(tzmin), \"'\"].join('');\r\n                    out(['/CreationDate (D:',\r\n                        created.getFullYear(),\r\n                        padd2(created.getMonth() + 1),\r\n                        padd2(created.getDate()),\r\n                        padd2(created.getHours()),\r\n                        padd2(created.getMinutes()),\r\n                        padd2(created.getSeconds()), tzstr, ')'\r\n                    ].join(''));\r\n                },\r\n                putCatalog = function() {\r\n                    out('/Type /Catalog');\r\n                    out('/Pages 1 0 R');\r\n                    // PDF13ref Section 7.2.1\r\n                    if (!zoomMode) zoomMode = 'fullwidth';\r\n                    switch (zoomMode) {\r\n                        case 'fullwidth':\r\n                            out('/OpenAction [3 0 R /FitH null]');\r\n                            break;\r\n                        case 'fullheight':\r\n                            out('/OpenAction [3 0 R /FitV null]');\r\n                            break;\r\n                        case 'fullpage':\r\n                            out('/OpenAction [3 0 R /Fit]');\r\n                            break;\r\n                        case 'original':\r\n                            out('/OpenAction [3 0 R /XYZ null null 1]');\r\n                            break;\r\n                        default:\r\n                            var pcn = '' + zoomMode;\r\n                            if (pcn.substr(pcn.length - 1) === '%')\r\n                                zoomMode = parseInt(zoomMode) / 100;\r\n                            if (typeof zoomMode === 'number') {\r\n                                out('/OpenAction [3 0 R /XYZ null null ' + f2(zoomMode) + ']');\r\n                            }\r\n                    }\r\n                    if (!layoutMode) layoutMode = 'continuous';\r\n                    switch (layoutMode) {\r\n                        case 'continuous':\r\n                            out('/PageLayout /OneColumn');\r\n                            break;\r\n                        case 'single':\r\n                            out('/PageLayout /SinglePage');\r\n                            break;\r\n                        case 'two':\r\n                        case 'twoleft':\r\n                            out('/PageLayout /TwoColumnLeft');\r\n                            break;\r\n                        case 'tworight':\r\n                            out('/PageLayout /TwoColumnRight');\r\n                            break;\r\n                    }\r\n                    if (pageMode) {\r\n                        /**\r\n                         * A name object specifying how the document should be displayed when opened:\r\n                         * UseNone      : Neither document outline nor thumbnail images visible -- DEFAULT\r\n                         * UseOutlines  : Document outline visible\r\n                         * UseThumbs    : Thumbnail images visible\r\n                         * FullScreen   : Full-screen mode, with no menu bar, window controls, or any other window visible\r\n                         */\r\n                        out('/PageMode /' + pageMode);\r\n                    }\r\n                    events.publish('putCatalog');\r\n                },\r\n                putTrailer = function() {\r\n                    out('/Size ' + (objectNumber + 1));\r\n                    out('/Root ' + objectNumber + ' 0 R');\r\n                    out('/Info ' + (objectNumber - 1) + ' 0 R');\r\n                },\r\n                beginPage = function(width, height) {\r\n                    // Dimensions are stored as user units and converted to points on output\r\n                    var orientation = typeof height === 'string' && height.toLowerCase();\r\n                    if (typeof width === 'string') {\r\n                        var format = width.toLowerCase();\r\n                        if (pageFormats.hasOwnProperty(format)) {\r\n                            width = pageFormats[format][0] / k;\r\n                            height = pageFormats[format][1] / k;\r\n                        }\r\n                    }\r\n                    if (Array.isArray(width)) {\r\n                        height = width[1];\r\n                        width = width[0];\r\n                    }\r\n                    if (orientation) {\r\n                        switch (orientation.substr(0, 1)) {\r\n                            case 'l':\r\n                                if (height > width) orientation = 's';\r\n                                break;\r\n                            case 'p':\r\n                                if (width > height) orientation = 's';\r\n                                break;\r\n                        }\r\n                        if (orientation === 's') {\r\n                            tmp = width;\r\n                            width = height;\r\n                            height = tmp;\r\n                        }\r\n                    }\r\n                    outToPages = true;\r\n                    pages[++page] = [];\r\n                    pagedim[page] = {\r\n                        width: Number(width) || pageWidth,\r\n                        height: Number(height) || pageHeight\r\n                    };\r\n                    pagesContext[page] = {};\r\n                    _setPage(page);\r\n                },\r\n                _addPage = function() {\r\n                    beginPage.apply(this, arguments);\r\n                    // Set line width\r\n                    out(f2(lineWidth * k) + ' w');\r\n                    // Set draw color\r\n                    out(drawColor);\r\n                    // resurrecting non-default line caps, joins\r\n                    if (lineCapID !== 0) {\r\n                        out(lineCapID + ' J');\r\n                    }\r\n                    if (lineJoinID !== 0) {\r\n                        out(lineJoinID + ' j');\r\n                    }\r\n                    events.publish('addPage', { pageNumber: page });\r\n                },\r\n                _deletePage = function(n) {\r\n                    if (n > 0 && n <= page) {\r\n                        pages.splice(n, 1);\r\n                        pagedim.splice(n, 1);\r\n                        page--;\r\n                        if (currentPage > page) {\r\n                            currentPage = page;\r\n                        }\r\n                        this.setPage(currentPage);\r\n                    }\r\n                },\r\n                _setPage = function(n) {\r\n                    if (n > 0 && n <= page) {\r\n                        currentPage = n;\r\n                        pageWidth = pagedim[n].width;\r\n                        pageHeight = pagedim[n].height;\r\n                    }\r\n                },\r\n                /**\r\n                 * Returns a document-specific font key - a label assigned to a\r\n                 * font name + font type combination at the time the font was added\r\n                 * to the font inventory.\r\n                 *\r\n                 * Font key is used as label for the desired font for a block of text\r\n                 * to be added to the PDF document stream.\r\n                 * @private\r\n                 * @function\r\n                 * @param fontName {String} can be undefined on \"falthy\" to indicate \"use current\"\r\n                 * @param fontStyle {String} can be undefined on \"falthy\" to indicate \"use current\"\r\n                 * @returns {String} Font key.\r\n                 */\r\n                getFont = function(fontName, fontStyle) {\r\n                    var key;\r\n\r\n                    fontName = fontName !== undefined ? fontName : fonts[activeFontKey].fontName;\r\n                    fontStyle = fontStyle !== undefined ? fontStyle : fonts[activeFontKey].fontStyle;\r\n\r\n                    if (fontName !== undefined) {\r\n                        fontName = fontName.toLowerCase();\r\n                    }\r\n                    switch (fontName) {\r\n                        case 'sans-serif':\r\n                        case 'verdana':\r\n                        case 'arial':\r\n                        case 'helvetica':\r\n                            fontName = 'helvetica';\r\n                            break;\r\n                        case 'fixed':\r\n                        case 'monospace':\r\n                        case 'terminal':\r\n                        case 'courier':\r\n                            fontName = 'courier';\r\n                            break;\r\n                        case 'serif':\r\n                        case 'cursive':\r\n                        case 'fantasy':\r\n                        default:\r\n                            fontName = 'times';\r\n                            break;\r\n                    }\r\n\r\n                    try {\r\n                        // get a string like 'F3' - the KEY corresponding tot he font + type combination.\r\n                        key = fontmap[fontName][fontStyle];\r\n                    } catch (e) {}\r\n\r\n                    if (!key) {\r\n                        //throw new Error(\"Unable to look up font label for font '\" + fontName + \"', '\"\r\n                        //+ fontStyle + \"'. Refer to getFontList() for available fonts.\");\r\n                        key = fontmap['times'][fontStyle];\r\n                        if (key == null) {\r\n                            key = fontmap['times']['normal'];\r\n                        }\r\n                    }\r\n                    return key;\r\n                },\r\n                buildDocument = function() {\r\n                    outToPages = false; // switches out() to content\r\n\r\n                    objectNumber = 2;\r\n                    content_length = 0;\r\n                    content = [];\r\n                    offsets = [];\r\n                    additionalObjects = [];\r\n                    // Added for AcroForm\r\n                    events.publish('buildDocument');\r\n\r\n                    // putHeader()\r\n                    out('%PDF-' + pdfVersion);\r\n\r\n                    putPages();\r\n\r\n                    // Must happen after putPages\r\n                    // Modifies current object Id\r\n                    putAdditionalObjects();\r\n\r\n                    putResources();\r\n\r\n                    // Info\r\n                    newObject();\r\n                    out('<<');\r\n                    putInfo();\r\n                    out('>>');\r\n                    out('endobj');\r\n\r\n                    // Catalog\r\n                    newObject();\r\n                    out('<<');\r\n                    putCatalog();\r\n                    out('>>');\r\n                    out('endobj');\r\n\r\n                    // Cross-ref\r\n                    var o = content_length,\r\n                        i, p = \"0000000000\";\r\n                    out('xref');\r\n                    out('0 ' + (objectNumber + 1));\r\n                    out(p + ' 65535 f ');\r\n                    for (i = 1; i <= objectNumber; i++) {\r\n                        var offset = offsets[i];\r\n                        if (typeof offset === 'function') {\r\n                            out((p + offsets[i]()).slice(-10) + ' 00000 n ');\r\n                        } else {\r\n                            out((p + offsets[i]).slice(-10) + ' 00000 n ');\r\n                        }\r\n                    }\r\n                    // Trailer\r\n                    out('trailer');\r\n                    out('<<');\r\n                    putTrailer();\r\n                    out('>>');\r\n                    out('startxref');\r\n                    out('' + o);\r\n                    out('%%EOF');\r\n\r\n                    outToPages = true;\r\n\r\n                    return content.join('\\n');\r\n                },\r\n                getStyle = function(style) {\r\n                    // see path-painting operators in PDF spec\r\n                    var op = 'S'; // stroke\r\n                    if (style === 'F') {\r\n                        op = 'f'; // fill\r\n                    } else if (style === 'FD' || style === 'DF') {\r\n                        op = 'B'; // both\r\n                    } else if (style === 'f' || style === 'f*' || style === 'B' || style === 'B*') {\r\n                        /*\r\n                        Allow direct use of these PDF path-painting operators:\r\n                        - f\tfill using nonzero winding number rule\r\n                        - f*\tfill using even-odd rule\r\n                        - B\tfill then stroke with fill using non-zero winding number rule\r\n                        - B*\tfill then stroke with fill using even-odd rule\r\n                        */\r\n                        op = style;\r\n                    }\r\n                    return op;\r\n                },\r\n                getArrayBuffer = function() {\r\n                    var data = buildDocument(),\r\n                        len = data.length,\r\n                        ab = new ArrayBuffer(len),\r\n                        u8 = new Uint8Array(ab);\r\n\r\n                    while (len--) u8[len] = data.charCodeAt(len);\r\n                    return ab;\r\n                },\r\n                getBlob = function() {\r\n                    return new Blob([getArrayBuffer()], { type: \"application/pdf\" });\r\n                },\r\n                /**\r\n                 * Generates the PDF document.\r\n                 *\r\n                 * If `type` argument is undefined, output is raw body of resulting PDF returned as a string.\r\n                 *\r\n                 * @param {String} type A string identifying one of the possible output types.\r\n                 * @param {Object} options An object providing some additional signalling to PDF generator.\r\n                 * @function\r\n                 * @returns {jsPDF}\r\n                 * @methodOf jsPDF#\r\n                 * @name output\r\n                 */\r\n                output = SAFE(function(type, options) {\r\n                    var datauri = ('' + type).substr(0, 6) === 'dataur' ?\r\n                        'data:application/pdf;base64,' + btoa(buildDocument()) : 0;\r\n\r\n                    switch (type) {\r\n                        case undefined:\r\n                            return buildDocument();\r\n                        case 'save':\r\n                            if (navigator.getUserMedia) {\r\n                                if (global.URL === undefined ||\r\n                                    global.URL.createObjectURL === undefined) {\r\n                                    return API.output('dataurlnewwindow');\r\n                                }\r\n                            }\r\n                            saveAs(getBlob(), options);\r\n                            if (typeof saveAs.unload === 'function') {\r\n                                if (global.setTimeout) {\r\n                                    setTimeout(saveAs.unload, 911);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case 'arraybuffer':\r\n                            return getArrayBuffer();\r\n                        case 'blob':\r\n                            return getBlob();\r\n                        case 'bloburi':\r\n                        case 'bloburl':\r\n                            // User is responsible of calling revokeObjectURL\r\n                            return global.URL && global.URL.createObjectURL(getBlob()) || void 0;\r\n                        case 'datauristring':\r\n                        case 'dataurlstring':\r\n                            return datauri;\r\n                        case 'dataurlnewwindow':\r\n                            var nW = global.open(datauri);\r\n                            if (nW || typeof safari === \"undefined\") return nW;\r\n                            /* pass through */\r\n                        case 'datauri':\r\n                        case 'dataurl':\r\n                            return global.document.location.href = datauri;\r\n                        default:\r\n                            throw new Error('Output type \"' + type + '\" is not supported.');\r\n                    }\r\n                    // @TODO: Add different output options\r\n                });\r\n\r\n            switch (unit) {\r\n                case 'pt':\r\n                    k = 1;\r\n                    break;\r\n                case 'mm':\r\n                    k = 72 / 25.4000508;\r\n                    break;\r\n                case 'cm':\r\n                    k = 72 / 2.54000508;\r\n                    break;\r\n                case 'in':\r\n                    k = 72;\r\n                    break;\r\n                case 'px':\r\n                    k = 96 / 72;\r\n                    break;\r\n                case 'pc':\r\n                    k = 12;\r\n                    break;\r\n                case 'em':\r\n                    k = 12;\r\n                    break;\r\n                case 'ex':\r\n                    k = 6;\r\n                    break;\r\n                default:\r\n                    throw ('Invalid unit: ' + unit);\r\n            }\r\n\r\n            //---------------------------------------\r\n            // Public API\r\n\r\n            /**\r\n             * Object exposing internal API to plugins\r\n             * @public\r\n             */\r\n            API.internal = {\r\n                'pdfEscape': pdfEscape,\r\n                'getStyle': getStyle,\r\n                /**\r\n                 * Returns {FontObject} describing a particular font.\r\n                 * @public\r\n                 * @function\r\n                 * @param fontName {String} (Optional) Font's family name\r\n                 * @param fontStyle {String} (Optional) Font's style variation name (Example:\"Italic\")\r\n                 * @returns {FontObject}\r\n                 */\r\n                'getFont': function() {\r\n                    return fonts[getFont.apply(API, arguments)];\r\n                },\r\n                'getFontSize': function() {\r\n                    return activeFontSize;\r\n                },\r\n                'getLineHeight': function() {\r\n                    return activeFontSize * lineHeightProportion;\r\n                },\r\n                'write': function(string1 /*, string2, string3, etc */ ) {\r\n                    out(arguments.length === 1 ? string1 : Array.prototype.join.call(arguments, ' '));\r\n                },\r\n                'getCoordinateString': function(value) {\r\n                    return f2(value * k);\r\n                },\r\n                'getVerticalCoordinateString': function(value) {\r\n                    return f2((pageHeight - value) * k);\r\n                },\r\n                'collections': {},\r\n                'newObject': newObject,\r\n                'newAdditionalObject': newAdditionalObject,\r\n                'newObjectDeferred': newObjectDeferred,\r\n                'newObjectDeferredBegin': newObjectDeferredBegin,\r\n                'putStream': putStream,\r\n                'events': events,\r\n                // ratio that you use in multiplication of a given \"size\" number to arrive to 'point'\r\n                // units of measurement.\r\n                // scaleFactor is set at initialization of the document and calculated against the stated\r\n                // default measurement units for the document.\r\n                // If default is \"mm\", k is the number that will turn number in 'mm' into 'points' number.\r\n                // through multiplication.\r\n                'scaleFactor': k,\r\n                'pageSize': {\r\n                    get width() {\r\n                        return pageWidth\r\n                    },\r\n                    get height() {\r\n                        return pageHeight\r\n                    }\r\n                },\r\n                'output': function(type, options) {\r\n                    return output(type, options);\r\n                },\r\n                'getNumberOfPages': function() {\r\n                    return pages.length - 1;\r\n                },\r\n                'pages': pages,\r\n                'out': out,\r\n                'f2': f2,\r\n                'getPageInfo': function(pageNumberOneBased) {\r\n                    var objId = (pageNumberOneBased - 1) * 2 + 3;\r\n                    return { objId: objId, pageNumber: pageNumberOneBased, pageContext: pagesContext[pageNumberOneBased] };\r\n                },\r\n                'getCurrentPageInfo': function() {\r\n                    var objId = (currentPage - 1) * 2 + 3;\r\n                    return { objId: objId, pageNumber: currentPage, pageContext: pagesContext[currentPage] };\r\n                },\r\n                'getPDFVersion': function() {\r\n                    return pdfVersion;\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Adds (and transfers the focus to) new page to the PDF document.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             *\r\n             * @methodOf jsPDF#\r\n             * @name addPage\r\n             */\r\n            API.addPage = function() {\r\n                _addPage.apply(this, arguments);\r\n                return this;\r\n            };\r\n            API.setPage = function() {\r\n                _setPage.apply(this, arguments);\r\n                return this;\r\n            };\r\n            API.insertPage = function(beforePage) {\r\n                this.addPage();\r\n                this.movePage(currentPage, beforePage);\r\n                return this;\r\n            };\r\n            API.movePage = function(targetPage, beforePage) {\r\n                if (targetPage > beforePage) {\r\n                    var tmpPages = pages[targetPage];\r\n                    var tmpPagedim = pagedim[targetPage];\r\n                    var tmpPagesContext = pagesContext[targetPage];\r\n                    for (var i = targetPage; i > beforePage; i--) {\r\n                        pages[i] = pages[i - 1];\r\n                        pagedim[i] = pagedim[i - 1];\r\n                        pagesContext[i] = pagesContext[i - 1];\r\n                    }\r\n                    pages[beforePage] = tmpPages;\r\n                    pagedim[beforePage] = tmpPagedim;\r\n                    pagesContext[beforePage] = tmpPagesContext;\r\n                    this.setPage(beforePage);\r\n                } else if (targetPage < beforePage) {\r\n                    var tmpPages = pages[targetPage];\r\n                    var tmpPagedim = pagedim[targetPage];\r\n                    var tmpPagesContext = pagesContext[targetPage];\r\n                    for (var i = targetPage; i < beforePage; i++) {\r\n                        pages[i] = pages[i + 1];\r\n                        pagedim[i] = pagedim[i + 1];\r\n                        pagesContext[i] = pagesContext[i + 1];\r\n                    }\r\n                    pages[beforePage] = tmpPages;\r\n                    pagedim[beforePage] = tmpPagedim;\r\n                    pagesContext[beforePage] = tmpPagesContext;\r\n                    this.setPage(beforePage);\r\n                }\r\n                return this;\r\n            };\r\n\r\n            API.deletePage = function() {\r\n                _deletePage.apply(this, arguments);\r\n                return this;\r\n            };\r\n            API.setDisplayMode = function(zoom, layout, pmode) {\r\n                    zoomMode = zoom;\r\n                    layoutMode = layout;\r\n                    pageMode = pmode;\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Adds text to page. Supports adding multiline text when 'text' argument is an Array of Strings.\r\n                 *\r\n                 * @function\r\n                 * @param {String|Array} text String or array of strings to be added to the page. Each line is shifted one line down per font, spacing settings declared before this call.\r\n                 * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n                 * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n                 * @param {Object} flags Collection of settings signalling how the text must be encoded. Defaults are sane. If you think you want to pass some flags, you likely can read the source.\r\n                 * @returns {jsPDF}\r\n                 * @methodOf jsPDF#\r\n                 * @name text\r\n                 */\r\n                API.text = function(text, x, y, flags, angle, align) {\r\n                    /**\r\n                     * Inserts something like this into PDF\r\n                     *   BT\r\n                     *    /F1 16 Tf  % Font name + size\r\n                     *    16 TL % How many units down for next line in multiline text\r\n                     *    0 g % color\r\n                     *    28.35 813.54 Td % position\r\n                     *    (line one) Tj\r\n                     *    T* (line two) Tj\r\n                     *    T* (line three) Tj\r\n                     *   ET\r\n                     */\r\n                    function ESC(s) {\r\n                        s = s.split(\"\\t\").join(Array(options.TabLen || 9).join(\" \"));\r\n                        return pdfEscape(s, flags);\r\n                    }\r\n\r\n                    // Pre-August-2012 the order of arguments was function(x, y, text, flags)\r\n                    // in effort to make all calls have similar signature like\r\n                    //   function(data, coordinates... , miscellaneous)\r\n                    // this method had its args flipped.\r\n                    // code below allows backward compatibility with old arg order.\r\n                    if (typeof text === 'number') {\r\n                        tmp = y;\r\n                        y = x;\r\n                        x = text;\r\n                        text = tmp;\r\n                    }\r\n\r\n                    // If there are any newlines in text, we assume\r\n                    // the user wanted to print multiple lines, so break the\r\n                    // text up into an array.  If the text is already an array,\r\n                    // we assume the user knows what they are doing.\r\n                    // Convert text into an array anyway to simplify\r\n                    // later code.\r\n                    if (typeof text === 'string') {\r\n                        if (text.match(/[\\n\\r]/)) {\r\n                            text = text.split(/\\r\\n|\\r|\\n/g);\r\n                        } else {\r\n                            text = [text];\r\n                        }\r\n                    }\r\n                    if (typeof angle === 'string') {\r\n                        align = angle;\r\n                        angle = null;\r\n                    }\r\n                    if (typeof flags === 'string') {\r\n                        align = flags;\r\n                        flags = null;\r\n                    }\r\n                    if (typeof flags === 'number') {\r\n                        angle = flags;\r\n                        flags = null;\r\n                    }\r\n                    var xtra = '',\r\n                        mode = 'Td',\r\n                        todo;\r\n                    if (angle) {\r\n                        angle *= (Math.PI / 180);\r\n                        var c = Math.cos(angle),\r\n                            s = Math.sin(angle);\r\n                        xtra = [f2(c), f2(s), f2(s * -1), f2(c), ''].join(\" \");\r\n                        mode = 'Tm';\r\n                    }\r\n                    flags = flags || {};\r\n                    if (!('noBOM' in flags))\r\n                        flags.noBOM = true;\r\n                    if (!('autoencode' in flags))\r\n                        flags.autoencode = true;\r\n\r\n                    var strokeOption = '';\r\n                    var pageContext = this.internal.getCurrentPageInfo().pageContext;\r\n                    if (true === flags.stroke) {\r\n                        if (pageContext.lastTextWasStroke !== true) {\r\n                            strokeOption = '1 Tr\\n';\r\n                            pageContext.lastTextWasStroke = true;\r\n                        }\r\n                    } else {\r\n                        if (pageContext.lastTextWasStroke) {\r\n                            strokeOption = '0 Tr\\n';\r\n                        }\r\n                        pageContext.lastTextWasStroke = false;\r\n                    }\r\n\r\n                    if (typeof this._runningPageHeight === 'undefined') {\r\n                        this._runningPageHeight = 0;\r\n                    }\r\n\r\n                    if (typeof text === 'string') {\r\n                        text = ESC(text);\r\n                    } else if (Object.prototype.toString.call(text) === '[object Array]') {\r\n                        // we don't want to destroy  original text array, so cloning it\r\n                        var sa = text.concat(),\r\n                            da = [],\r\n                            len = sa.length;\r\n                        // we do array.join('text that must not be PDFescaped\")\r\n                        // thus, pdfEscape each component separately\r\n                        while (len--) {\r\n                            da.push(ESC(sa.shift()));\r\n                        }\r\n                        var linesLeft = Math.ceil((pageHeight - y - this._runningPageHeight) * k / (activeFontSize * lineHeightProportion));\r\n                        if (0 <= linesLeft && linesLeft < da.length + 1) {\r\n                            //todo = da.splice(linesLeft-1);\r\n                        }\r\n\r\n                        if (align) {\r\n                            var left,\r\n                                prevX,\r\n                                maxLineLength,\r\n                                leading = activeFontSize * lineHeightProportion,\r\n                                lineWidths = text.map(function(v) {\r\n                                    return this.getStringUnitWidth(v) * activeFontSize / k;\r\n                                }, this);\r\n                            maxLineLength = Math.max.apply(Math, lineWidths);\r\n                            // The first line uses the \"main\" Td setting,\r\n                            // and the subsequent lines are offset by the\r\n                            // previous line's x coordinate.\r\n                            if (align === \"center\") {\r\n                                // The passed in x coordinate defines\r\n                                // the center point.\r\n                                left = x - maxLineLength / 2;\r\n                                x -= lineWidths[0] / 2;\r\n                            } else if (align === \"right\") {\r\n                                // The passed in x coordinate defines the\r\n                                // rightmost point of the text.\r\n                                left = x - maxLineLength;\r\n                                x -= lineWidths[0];\r\n                            } else {\r\n                                throw new Error('Unrecognized alignment option, use \"center\" or \"right\".');\r\n                            }\r\n                            prevX = x;\r\n                            text = da[0];\r\n                            for (var i = 1, len = da.length; i < len; i++) {\r\n                                var delta = maxLineLength - lineWidths[i];\r\n                                if (align === \"center\") delta /= 2;\r\n                                // T* = x-offset leading Td ( text )\r\n                                text += \") Tj\\n\" + ((left - prevX) + delta) + \" -\" + leading + \" Td (\" + da[i];\r\n                                prevX = left + delta;\r\n                            }\r\n                        } else {\r\n                            text = da.join(\") Tj\\nT* (\");\r\n                        }\r\n                    } else {\r\n                        throw new Error('Type of text must be string or Array. \"' + text + '\" is not recognized.');\r\n                    }\r\n                    // Using \"'\" (\"go next line and render text\" mark) would save space but would complicate our rendering code, templates\r\n\r\n                    // BT .. ET does NOT have default settings for Tf. You must state that explicitely every time for BT .. ET\r\n                    // if you want text transformation matrix (+ multiline) to work reliably (which reads sizes of things from font declarations)\r\n                    // Thus, there is NO useful, *reliable* concept of \"default\" font for a page.\r\n                    // The fact that \"default\" (reuse font used before) font worked before in basic cases is an accident\r\n                    // - readers dealing smartly with brokenness of jsPDF's markup.\r\n\r\n                    var curY;\r\n\r\n                    if (todo) {\r\n                        //this.addPage();\r\n                        //this._runningPageHeight += y -  (activeFontSize * 1.7 / k);\r\n                        //curY = f2(pageHeight - activeFontSize * 1.7 /k);\r\n                    } else {\r\n                        curY = f2((pageHeight - y) * k);\r\n                    }\r\n                    //curY = f2((pageHeight - (y - this._runningPageHeight)) * k);\r\n\r\n                    //\t\t\tif (curY < 0){\r\n                    //\t\t\t\tconsole.log('auto page break');\r\n                    //\t\t\t\tthis.addPage();\r\n                    //\t\t\t\tthis._runningPageHeight = y -  (activeFontSize * 1.7 / k);\r\n                    //\t\t\t\tcurY = f2(pageHeight - activeFontSize * 1.7 /k);\r\n                    //\t\t\t}\r\n\r\n                    out(\r\n                        'BT\\n/' +\r\n                        activeFontKey + ' ' + activeFontSize + ' Tf\\n' + // font face, style, size\r\n                        (activeFontSize * lineHeightProportion) + ' TL\\n' + // line spacing\r\n                        strokeOption + // stroke option\r\n                        textColor +\r\n                        '\\n' + xtra + f2(x * k) + ' ' + curY + ' ' + mode + '\\n(' +\r\n                        text +\r\n                        ') Tj\\nET');\r\n\r\n                    if (todo) {\r\n                        //this.text( todo, x, activeFontSize * 1.7 / k);\r\n                        //this.text( todo, x, this._runningPageHeight + (activeFontSize * 1.7 / k));\r\n                        this.text(todo, x, y); // + (activeFontSize * 1.7 / k));\r\n                    }\r\n\r\n                    return this;\r\n                };\r\n\r\n            API.lstext = function(text, x, y, spacing) {\r\n                for (var i = 0, len = text.length; i < len; i++, x += spacing) this.text(text[i], x, y);\r\n            };\r\n\r\n            API.line = function(x1, y1, x2, y2) {\r\n                return this.lines([\r\n                    [x2 - x1, y2 - y1]\r\n                ], x1, y1);\r\n            };\r\n\r\n            API.clip = function() {\r\n                // By patrick-roberts, github.com/MrRio/jsPDF/issues/328\r\n                // Call .clip() after calling .rect() with a style argument of null\r\n                out('W') // clip\r\n                out('S') // stroke path; necessary for clip to work\r\n            };\r\n\r\n            /**\r\n             * This fixes the previous function clip(). Perhaps the 'stroke path' hack was due to the missing 'n' instruction?\r\n             * We introduce the fixed version so as to not break API.\r\n             * @param fillRule\r\n             */\r\n            API.clip_fixed = function(fillRule) {\r\n                // Call .clip() after calling drawing ops with a style argument of null\r\n                // W is the PDF clipping op\r\n                if ('evenodd' === fillRule) {\r\n                    out('W*');\r\n                } else {\r\n                    out('W');\r\n                }\r\n                // End the path object without filling or stroking it.\r\n                // This operator is a path-painting no-op, used primarily for the side effect of changing the current clipping path\r\n                // (see Section 4.4.3, “Clipping Path Operators”)\r\n                out('n');\r\n            };\r\n\r\n            /**\r\n             * Adds series of curves (straight lines or cubic bezier curves) to canvas, starting at `x`, `y` coordinates.\r\n             * All data points in `lines` are relative to last line origin.\r\n             * `x`, `y` become x1,y1 for first line / curve in the set.\r\n             * For lines you only need to specify [x2, y2] - (ending point) vector against x1, y1 starting point.\r\n             * For bezier curves you need to specify [x2,y2,x3,y3,x4,y4] - vectors to control points 1, 2, ending point. All vectors are against the start of the curve - x1,y1.\r\n             *\r\n             * @example .lines([[2,2],[-2,2],[1,1,2,2,3,3],[2,1]], 212,110, 10) // line, line, bezier curve, line\r\n             * @param {Array} lines Array of *vector* shifts as pairs (lines) or sextets (cubic bezier curves).\r\n             * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} scale (Defaults to [1.0,1.0]) x,y Scaling factor for all vectors. Elements can be any floating number Sub-one makes drawing smaller. Over-one grows the drawing. Negative flips the direction.\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @param {Boolean} closed If true, the path is closed with a straight line from the end of the last curve to the starting point.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name lines\r\n             */\r\n            API.lines = function(lines, x, y, scale, style, closed) {\r\n                var scalex, scaley, i, l, leg, x2, y2, x3, y3, x4, y4;\r\n\r\n                // Pre-August-2012 the order of arguments was function(x, y, lines, scale, style)\r\n                // in effort to make all calls have similar signature like\r\n                //   function(content, coordinateX, coordinateY , miscellaneous)\r\n                // this method had its args flipped.\r\n                // code below allows backward compatibility with old arg order.\r\n                if (typeof lines === 'number') {\r\n                    tmp = y;\r\n                    y = x;\r\n                    x = lines;\r\n                    lines = tmp;\r\n                }\r\n\r\n                scale = scale || [1, 1];\r\n\r\n                // starting point\r\n                out(f3(x * k) + ' ' + f3((pageHeight - y) * k) + ' m ');\r\n\r\n                scalex = scale[0];\r\n                scaley = scale[1];\r\n                l = lines.length;\r\n                //, x2, y2 // bezier only. In page default measurement \"units\", *after* scaling\r\n                //, x3, y3 // bezier only. In page default measurement \"units\", *after* scaling\r\n                // ending point for all, lines and bezier. . In page default measurement \"units\", *after* scaling\r\n                x4 = x; // last / ending point = starting point for first item.\r\n                y4 = y; // last / ending point = starting point for first item.\r\n\r\n                for (i = 0; i < l; i++) {\r\n                    leg = lines[i];\r\n                    if (leg.length === 2) {\r\n                        // simple line\r\n                        x4 = leg[0] * scalex + x4; // here last x4 was prior ending point\r\n                        y4 = leg[1] * scaley + y4; // here last y4 was prior ending point\r\n                        out(f3(x4 * k) + ' ' + f3((pageHeight - y4) * k) + ' l');\r\n                    } else {\r\n                        // bezier curve\r\n                        x2 = leg[0] * scalex + x4; // here last x4 is prior ending point\r\n                        y2 = leg[1] * scaley + y4; // here last y4 is prior ending point\r\n                        x3 = leg[2] * scalex + x4; // here last x4 is prior ending point\r\n                        y3 = leg[3] * scaley + y4; // here last y4 is prior ending point\r\n                        x4 = leg[4] * scalex + x4; // here last x4 was prior ending point\r\n                        y4 = leg[5] * scaley + y4; // here last y4 was prior ending point\r\n                        out(\r\n                            f3(x2 * k) + ' ' +\r\n                            f3((pageHeight - y2) * k) + ' ' +\r\n                            f3(x3 * k) + ' ' +\r\n                            f3((pageHeight - y3) * k) + ' ' +\r\n                            f3(x4 * k) + ' ' +\r\n                            f3((pageHeight - y4) * k) + ' c');\r\n                    }\r\n                }\r\n\r\n                if (closed) {\r\n                    out(' h');\r\n                }\r\n\r\n                // stroking / filling / both the path\r\n                if (style !== null) {\r\n                    out(getStyle(style));\r\n                }\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Adds a rectangle to PDF\r\n             *\r\n             * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} w Width (in units declared at inception of PDF document)\r\n             * @param {Number} h Height (in units declared at inception of PDF document)\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name rect\r\n             */\r\n            API.rect = function(x, y, w, h, style) {\r\n                var op = getStyle(style);\r\n                out([\r\n                    f2(x * k),\r\n                    f2((pageHeight - y) * k),\r\n                    f2(w * k),\r\n                    f2(-h * k),\r\n                    're'\r\n                ].join(' '));\r\n\r\n                if (style !== null) {\r\n                    out(getStyle(style));\r\n                }\r\n\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Adds a triangle to PDF\r\n             *\r\n             * @param {Number} x1 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y1 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} x2 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y2 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} x3 Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y3 Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name triangle\r\n             */\r\n            API.triangle = function(x1, y1, x2, y2, x3, y3, style) {\r\n                this.lines(\r\n                    [\r\n                        [x2 - x1, y2 - y1], // vector to point 2\r\n                        [x3 - x2, y3 - y2], // vector to point 3\r\n                        [x1 - x3, y1 - y3] // closing vector back to point 1\r\n                    ],\r\n                    x1,\r\n                    y1, // start of path\r\n                    [1, 1],\r\n                    style,\r\n                    true);\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Adds a rectangle with rounded corners to PDF\r\n             *\r\n             * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} w Width (in units declared at inception of PDF document)\r\n             * @param {Number} h Height (in units declared at inception of PDF document)\r\n             * @param {Number} rx Radius along x axis (in units declared at inception of PDF document)\r\n             * @param {Number} rx Radius along y axis (in units declared at inception of PDF document)\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name roundedRect\r\n             */\r\n            API.roundedRect = function(x, y, w, h, rx, ry, style) {\r\n                var MyArc = 4 / 3 * (Math.SQRT2 - 1);\r\n                this.lines(\r\n                    [\r\n                        [(w - 2 * rx), 0],\r\n                        [(rx * MyArc), 0, rx, ry - (ry * MyArc), rx, ry],\r\n                        [0, (h - 2 * ry)],\r\n                        [0, (ry * MyArc), -(rx * MyArc), ry, -rx, ry],\r\n                        [(-w + 2 * rx), 0],\r\n                        [-(rx * MyArc), 0, -rx, -(ry * MyArc), -rx, -ry],\r\n                        [0, (-h + 2 * ry)],\r\n                        [0, -(ry * MyArc), (rx * MyArc), -ry, rx, -ry]\r\n                    ],\r\n                    x + rx,\r\n                    y, // start of path\r\n                    [1, 1],\r\n                    style);\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Adds an ellipse to PDF\r\n             *\r\n             * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} rx Radius along x axis (in units declared at inception of PDF document)\r\n             * @param {Number} rx Radius along y axis (in units declared at inception of PDF document)\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name ellipse\r\n             */\r\n            API.ellipse = function(x, y, rx, ry, style) {\r\n                var lx = 4 / 3 * (Math.SQRT2 - 1) * rx,\r\n                    ly = 4 / 3 * (Math.SQRT2 - 1) * ry;\r\n\r\n                out([\r\n                    f2((x + rx) * k),\r\n                    f2((pageHeight - y) * k),\r\n                    'm',\r\n                    f2((x + rx) * k),\r\n                    f2((pageHeight - (y - ly)) * k),\r\n                    f2((x + lx) * k),\r\n                    f2((pageHeight - (y - ry)) * k),\r\n                    f2(x * k),\r\n                    f2((pageHeight - (y - ry)) * k),\r\n                    'c'\r\n                ].join(' '));\r\n                out([\r\n                    f2((x - lx) * k),\r\n                    f2((pageHeight - (y - ry)) * k),\r\n                    f2((x - rx) * k),\r\n                    f2((pageHeight - (y - ly)) * k),\r\n                    f2((x - rx) * k),\r\n                    f2((pageHeight - y) * k),\r\n                    'c'\r\n                ].join(' '));\r\n                out([\r\n                    f2((x - rx) * k),\r\n                    f2((pageHeight - (y + ly)) * k),\r\n                    f2((x - lx) * k),\r\n                    f2((pageHeight - (y + ry)) * k),\r\n                    f2(x * k),\r\n                    f2((pageHeight - (y + ry)) * k),\r\n                    'c'\r\n                ].join(' '));\r\n                out([\r\n                    f2((x + lx) * k),\r\n                    f2((pageHeight - (y + ry)) * k),\r\n                    f2((x + rx) * k),\r\n                    f2((pageHeight - (y + ly)) * k),\r\n                    f2((x + rx) * k),\r\n                    f2((pageHeight - y) * k),\r\n                    'c'\r\n                ].join(' '));\r\n\r\n                if (style !== null) {\r\n                    out(getStyle(style));\r\n                }\r\n\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Adds an circle to PDF\r\n             *\r\n             * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n             * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n             * @param {Number} r Radius (in units declared at inception of PDF document)\r\n             * @param {String} style A string specifying the painting style or null.  Valid styles include: 'S' [default] - stroke, 'F' - fill,  and 'DF' (or 'FD') -  fill then stroke. A null value postpones setting the style so that a shape may be composed using multiple method calls. The last drawing method call used to define the shape should not have a null style argument.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name circle\r\n             */\r\n            API.circle = function(x, y, r, style) {\r\n                return this.ellipse(x, y, r, r, style);\r\n            };\r\n\r\n            /**\r\n             * Adds a properties to the PDF document\r\n             *\r\n             * @param {Object} A property_name-to-property_value object structure.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setProperties\r\n             */\r\n            API.setProperties = function(properties) {\r\n                // copying only those properties we can render.\r\n                for (var property in documentProperties) {\r\n                    if (documentProperties.hasOwnProperty(property) && properties[property]) {\r\n                        documentProperties[property] = properties[property];\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets font size for upcoming text elements.\r\n             *\r\n             * @param {Number} size Font size in points.\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setFontSize\r\n             */\r\n            API.setFontSize = function(size) {\r\n                activeFontSize = size;\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets text font face, variant for upcoming text elements.\r\n             * See output of jsPDF.getFontList() for possible font names, styles.\r\n             *\r\n             * @param {String} fontName Font name or family. Example: \"times\"\r\n             * @param {String} fontStyle Font style or variant. Example: \"italic\"\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setFont\r\n             */\r\n            API.setFont = function(fontName, fontStyle) {\r\n                activeFontKey = getFont(fontName, fontStyle);\r\n                // if font is not found, the above line blows up and we never go further\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Switches font style or variant for upcoming text elements,\r\n             * while keeping the font face or family same.\r\n             * See output of jsPDF.getFontList() for possible font names, styles.\r\n             *\r\n             * @param {String} style Font style or variant. Example: \"italic\"\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setFontStyle\r\n             */\r\n            API.setFontStyle = API.setFontType = function(style) {\r\n                activeFontKey = getFont(undefined, style);\r\n                // if font is not found, the above line blows up and we never go further\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Returns an object - a tree of fontName to fontStyle relationships available to\r\n             * active PDF document.\r\n             *\r\n             * @public\r\n             * @function\r\n             * @returns {Object} Like {'times':['normal', 'italic', ... ], 'arial':['normal', 'bold', ... ], ... }\r\n             * @methodOf jsPDF#\r\n             * @name getFontList\r\n             */\r\n            API.getFontList = function() {\r\n                // TODO: iterate over fonts array or return copy of fontmap instead in case more are ever added.\r\n                var list = {},\r\n                    fontName, fontStyle, tmp;\r\n\r\n                for (fontName in fontmap) {\r\n                    if (fontmap.hasOwnProperty(fontName)) {\r\n                        list[fontName] = tmp = [];\r\n                        for (fontStyle in fontmap[fontName]) {\r\n                            if (fontmap[fontName].hasOwnProperty(fontStyle)) {\r\n                                tmp.push(fontStyle);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return list;\r\n            };\r\n\r\n            /**\r\n             * Add a custom font.\r\n             *\r\n             * @param {String} Postscript name of the Font.  Example: \"Menlo-Regular\"\r\n             * @param {String} Name of font-family from @font-face definition.  Example: \"Menlo Regular\"\r\n             * @param {String} Font style.  Example: \"normal\"\r\n             * @function\r\n             * @returns the {fontKey} (same as the internal method)\r\n             * @methodOf jsPDF#\r\n             * @name addFont\r\n             */\r\n            API.addFont = function(postScriptName, fontName, fontStyle) {\r\n                addFont(postScriptName, fontName, fontStyle, 'StandardEncoding');\r\n            };\r\n\r\n            /**\r\n             * Sets line width for upcoming lines.\r\n             *\r\n             * @param {Number} width Line width (in units declared at inception of PDF document)\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setLineWidth\r\n             */\r\n            API.setLineWidth = function(width) {\r\n                out((width * k).toFixed(2) + ' w');\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets the stroke color for upcoming elements.\r\n             *\r\n             * Depending on the number of arguments given, Gray, RGB, or CMYK\r\n             * color space is implied.\r\n             *\r\n             * When only ch1 is given, \"Gray\" color space is implied and it\r\n             * must be a value in the range from 0.00 (solid black) to to 1.00 (white)\r\n             * if values are communicated as String types, or in range from 0 (black)\r\n             * to 255 (white) if communicated as Number type.\r\n             * The RGB-like 0-255 range is provided for backward compatibility.\r\n             *\r\n             * When only ch1,ch2,ch3 are given, \"RGB\" color space is implied and each\r\n             * value must be in the range from 0.00 (minimum intensity) to to 1.00\r\n             * (max intensity) if values are communicated as String types, or\r\n             * from 0 (min intensity) to to 255 (max intensity) if values are communicated\r\n             * as Number types.\r\n             * The RGB-like 0-255 range is provided for backward compatibility.\r\n             *\r\n             * When ch1,ch2,ch3,ch4 are given, \"CMYK\" color space is implied and each\r\n             * value must be a in the range from 0.00 (0% concentration) to to\r\n             * 1.00 (100% concentration)\r\n             *\r\n             * Because JavaScript treats fixed point numbers badly (rounds to\r\n             * floating point nearest to binary representation) it is highly advised to\r\n             * communicate the fractional numbers as String types, not JavaScript Number type.\r\n             *\r\n             * @param {Number|String} ch1 Color channel value\r\n             * @param {Number|String} ch2 Color channel value\r\n             * @param {Number|String} ch3 Color channel value\r\n             * @param {Number|String} ch4 Color channel value\r\n             *\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setDrawColor\r\n             */\r\n            API.setDrawColor = function(ch1, ch2, ch3, ch4) {\r\n                var color;\r\n                if (ch2 === undefined || (ch4 === undefined && ch1 === ch2 === ch3)) {\r\n                    // Gray color space.\r\n                    if (typeof ch1 === 'string') {\r\n                        color = ch1 + ' G';\r\n                    } else {\r\n                        color = f2(ch1 / 255) + ' G';\r\n                    }\r\n                } else if (ch4 === undefined) {\r\n                    // RGB\r\n                    if (typeof ch1 === 'string') {\r\n                        color = [ch1, ch2, ch3, 'RG'].join(' ');\r\n                    } else {\r\n                        color = [f2(ch1 / 255), f2(ch2 / 255), f2(ch3 / 255), 'RG'].join(' ');\r\n                    }\r\n                } else {\r\n                    // CMYK\r\n                    if (typeof ch1 === 'string') {\r\n                        color = [ch1, ch2, ch3, ch4, 'K'].join(' ');\r\n                    } else {\r\n                        color = [f2(ch1), f2(ch2), f2(ch3), f2(ch4), 'K'].join(' ');\r\n                    }\r\n                }\r\n\r\n                out(color);\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets the fill color for upcoming elements.\r\n             *\r\n             * Depending on the number of arguments given, Gray, RGB, or CMYK\r\n             * color space is implied.\r\n             *\r\n             * When only ch1 is given, \"Gray\" color space is implied and it\r\n             * must be a value in the range from 0.00 (solid black) to to 1.00 (white)\r\n             * if values are communicated as String types, or in range from 0 (black)\r\n             * to 255 (white) if communicated as Number type.\r\n             * The RGB-like 0-255 range is provided for backward compatibility.\r\n             *\r\n             * When only ch1,ch2,ch3 are given, \"RGB\" color space is implied and each\r\n             * value must be in the range from 0.00 (minimum intensity) to to 1.00\r\n             * (max intensity) if values are communicated as String types, or\r\n             * from 0 (min intensity) to to 255 (max intensity) if values are communicated\r\n             * as Number types.\r\n             * The RGB-like 0-255 range is provided for backward compatibility.\r\n             *\r\n             * When ch1,ch2,ch3,ch4 are given, \"CMYK\" color space is implied and each\r\n             * value must be a in the range from 0.00 (0% concentration) to to\r\n             * 1.00 (100% concentration)\r\n             *\r\n             * Because JavaScript treats fixed point numbers badly (rounds to\r\n             * floating point nearest to binary representation) it is highly advised to\r\n             * communicate the fractional numbers as String types, not JavaScript Number type.\r\n             *\r\n             * @param {Number|String} ch1 Color channel value\r\n             * @param {Number|String} ch2 Color channel value\r\n             * @param {Number|String} ch3 Color channel value\r\n             * @param {Number|String} ch4 Color channel value\r\n             *\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setFillColor\r\n             */\r\n            API.setFillColor = function(ch1, ch2, ch3, ch4) {\r\n                var color;\r\n\r\n                if (ch2 === undefined || (ch4 === undefined && ch1 === ch2 === ch3)) {\r\n                    // Gray color space.\r\n                    if (typeof ch1 === 'string') {\r\n                        color = ch1 + ' g';\r\n                    } else {\r\n                        color = f2(ch1 / 255) + ' g';\r\n                    }\r\n                } else if (ch4 === undefined || typeof ch4 === 'object') {\r\n                    // RGB\r\n                    if (typeof ch1 === 'string') {\r\n                        color = [ch1, ch2, ch3, 'rg'].join(' ');\r\n                    } else {\r\n                        color = [f2(ch1 / 255), f2(ch2 / 255), f2(ch3 / 255), 'rg'].join(' ');\r\n                    }\r\n                    if (ch4 && ch4.a === 0) {\r\n                        //TODO Implement transparency.\r\n                        //WORKAROUND use white for now\r\n                        color = ['255', '255', '255', 'rg'].join(' ');\r\n                    }\r\n                } else {\r\n                    // CMYK\r\n                    if (typeof ch1 === 'string') {\r\n                        color = [ch1, ch2, ch3, ch4, 'k'].join(' ');\r\n                    } else {\r\n                        color = [f2(ch1), f2(ch2), f2(ch3), f2(ch4), 'k'].join(' ');\r\n                    }\r\n                }\r\n\r\n                out(color);\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets the text color for upcoming elements.\r\n             * If only one, first argument is given,\r\n             * treats the value as gray-scale color value.\r\n             *\r\n             * @param {Number} r Red channel color value in range 0-255 or {String} r color value in hexadecimal, example: '#FFFFFF'\r\n             * @param {Number} g Green channel color value in range 0-255\r\n             * @param {Number} b Blue channel color value in range 0-255\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setTextColor\r\n             */\r\n            API.setTextColor = function(r, g, b) {\r\n                if ((typeof r === 'string') && /^#[0-9A-Fa-f]{6}$/.test(r)) {\r\n                    var hex = parseInt(r.substr(1), 16);\r\n                    r = (hex >> 16) & 255;\r\n                    g = (hex >> 8) & 255;\r\n                    b = (hex & 255);\r\n                }\r\n\r\n                if ((r === 0 && g === 0 && b === 0) || (typeof g === 'undefined')) {\r\n                    textColor = f3(r / 255) + ' g';\r\n                } else {\r\n                    textColor = [f3(r / 255), f3(g / 255), f3(b / 255), 'rg'].join(' ');\r\n                }\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Is an Object providing a mapping from human-readable to\r\n             * integer flag values designating the varieties of line cap\r\n             * and join styles.\r\n             *\r\n             * @returns {Object}\r\n             * @fieldOf jsPDF#\r\n             * @name CapJoinStyles\r\n             */\r\n            API.CapJoinStyles = {\r\n                0: 0,\r\n                'butt': 0,\r\n                'but': 0,\r\n                'miter': 0,\r\n                1: 1,\r\n                'round': 1,\r\n                'rounded': 1,\r\n                'circle': 1,\r\n                2: 2,\r\n                'projecting': 2,\r\n                'project': 2,\r\n                'square': 2,\r\n                'bevel': 2\r\n            };\r\n\r\n            /**\r\n             * Sets the line cap styles\r\n             * See {jsPDF.CapJoinStyles} for variants\r\n             *\r\n             * @param {String|Number} style A string or number identifying the type of line cap\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setLineCap\r\n             */\r\n            API.setLineCap = function(style) {\r\n                var id = this.CapJoinStyles[style];\r\n                if (id === undefined) {\r\n                    throw new Error(\"Line cap style of '\" + style + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\r\n                }\r\n                lineCapID = id;\r\n                out(id + ' J');\r\n\r\n                return this;\r\n            };\r\n\r\n            /**\r\n             * Sets the line join styles\r\n             * See {jsPDF.CapJoinStyles} for variants\r\n             *\r\n             * @param {String|Number} style A string or number identifying the type of line join\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name setLineJoin\r\n             */\r\n            API.setLineJoin = function(style) {\r\n                var id = this.CapJoinStyles[style];\r\n                if (id === undefined) {\r\n                    throw new Error(\"Line join style of '\" + style + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\r\n                }\r\n                lineJoinID = id;\r\n                out(id + ' j');\r\n\r\n                return this;\r\n            };\r\n\r\n            // Output is both an internal (for plugins) and external function\r\n            API.output = output;\r\n\r\n            /**\r\n             * Saves as PDF document. An alias of jsPDF.output('save', 'filename.pdf')\r\n             * @param  {String} filename The filename including extension.\r\n             *\r\n             * @function\r\n             * @returns {jsPDF}\r\n             * @methodOf jsPDF#\r\n             * @name save\r\n             */\r\n            API.save = function(filename) {\r\n                API.output('save', filename);\r\n            };\r\n\r\n            // applying plugins (more methods) ON TOP of built-in API.\r\n            // this is intentional as we allow plugins to override\r\n            // built-ins\r\n            for (var plugin in jsPDF.API) {\r\n                if (jsPDF.API.hasOwnProperty(plugin)) {\r\n                    if (plugin === 'events' && jsPDF.API.events.length) {\r\n                        (function(events, newEvents) {\r\n\r\n                            // jsPDF.API.events is a JS Array of Arrays\r\n                            // where each Array is a pair of event name, handler\r\n                            // Events were added by plugins to the jsPDF instantiator.\r\n                            // These are always added to the new instance and some ran\r\n                            // during instantiation.\r\n                            var eventname, handler_and_args, i;\r\n\r\n                            for (i = newEvents.length - 1; i !== -1; i--) {\r\n                                // subscribe takes 3 args: 'topic', function, runonce_flag\r\n                                // if undefined, runonce is false.\r\n                                // users can attach callback directly,\r\n                                // or they can attach an array with [callback, runonce_flag]\r\n                                // that's what the \"apply\" magic is for below.\r\n                                eventname = newEvents[i][0];\r\n                                handler_and_args = newEvents[i][1];\r\n                                events.subscribe.apply(\r\n                                    events, [eventname].concat(\r\n                                        typeof handler_and_args === 'function' ? [handler_and_args] : handler_and_args));\r\n                            }\r\n                        }(events, jsPDF.API.events));\r\n                    } else {\r\n                        API[plugin] = jsPDF.API[plugin];\r\n                    }\r\n                }\r\n            }\r\n\r\n            //////////////////////////////////////////////////////\r\n            // continuing initialization of jsPDF Document object\r\n            //////////////////////////////////////////////////////\r\n            // Add the first page automatically\r\n            addFonts();\r\n            activeFontKey = 'F1';\r\n            _addPage(format, orientation);\r\n\r\n            events.publish('initialized');\r\n            return API;\r\n        }\r\n\r\n        /**\r\n         * jsPDF.API is a STATIC property of jsPDF class.\r\n         * jsPDF.API is an object you can add methods and properties to.\r\n         * The methods / properties you add will show up in new jsPDF objects.\r\n         *\r\n         * One property is prepopulated. It is the 'events' Object. Plugin authors can add topics,\r\n         * callbacks to this object. These will be reassigned to all new instances of jsPDF.\r\n         * Examples:\r\n         * jsPDF.API.events['initialized'] = function(){ 'this' is API object }\r\n         * jsPDF.API.events['addFont'] = function(added_font_object){ 'this' is API object }\r\n         *\r\n         * @static\r\n         * @public\r\n         * @memberOf jsPDF\r\n         * @name API\r\n         *\r\n         * @example\r\n         * jsPDF.API.mymethod = function(){\r\n         *   // 'this' will be ref to internal API object. see jsPDF source\r\n         *   // , so you can refer to built-in methods like so:\r\n         *   //     this.line(....)\r\n         *   //     this.text(....)\r\n         * }\r\n         * var pdfdoc = new jsPDF()\r\n         * pdfdoc.mymethod() // <- !!!!!!\r\n         */\r\n        jsPDF.API = { events: [] };\r\n        jsPDF.version = \"1.0.0-trunk\";\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define('jsPDF', function() {\r\n                return jsPDF;\r\n            });\r\n        } else if (typeof module !== 'undefined' && module.exports) {\r\n            module.exports = jsPDF;\r\n        } else {\r\n            global.jsPDF = jsPDF;\r\n        }\r\n        return jsPDF;\r\n    })(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this);\r\n\r\n    /** @preserve\r\n     * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser\r\n     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com\r\n     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\r\n     *               2014 Diego Casorran, https://github.com/diegocr\r\n     *               2014 Daniel Husar, https://github.com/danielhusar\r\n     *               2014 Wolfgang Gassler, https://github.com/woolfg\r\n     *               2014 Steven Spungin, https://github.com/flamenco\r\n     *\r\n     *\r\n     * ====================================================================\r\n     */\r\n\r\n    (function(jsPDFAPI) {\r\n        var clone, _DrillForContent, FontNameDB, FontStyleMap, TextAlignMap, FontWeightMap, FloatMap, ClearMap, GetCSS, PurgeWhiteSpace, Renderer, ResolveFont, ResolveUnitedNumber, UnitedNumberMap, elementHandledElsewhere, images, loadImgs, checkForFooter, process, tableToJson;\r\n        clone = function() {\r\n            return function(obj) {\r\n                Clone.prototype = obj;\r\n                return new Clone();\r\n            };\r\n\r\n            function Clone() {}\r\n        }();\r\n        PurgeWhiteSpace = function PurgeWhiteSpace(array) {\r\n            var fragment, i, l, lTrimmed, r, rTrimmed, trailingSpace;\r\n            i = 0;\r\n            l = array.length;\r\n            fragment = void 0;\r\n            lTrimmed = false;\r\n            rTrimmed = false;\r\n            while (!lTrimmed && i !== l) {\r\n                fragment = array[i] = array[i].trimLeft();\r\n                if (fragment) {\r\n                    lTrimmed = true;\r\n                }\r\n                i++;\r\n            }\r\n            i = l - 1;\r\n            while (l && !rTrimmed && i !== -1) {\r\n                fragment = array[i] = array[i].trimRight();\r\n                if (fragment) {\r\n                    rTrimmed = true;\r\n                }\r\n                i--;\r\n            }\r\n            r = /\\s+$/g;\r\n            trailingSpace = true;\r\n            i = 0;\r\n            while (i !== l) {\r\n                // Leave the line breaks intact\r\n                if (array[i] != \"\\u2028\") {\r\n                    fragment = array[i].replace(/\\s+/g, \" \");\r\n                    if (trailingSpace) {\r\n                        fragment = fragment.trimLeft();\r\n                    }\r\n                    if (fragment) {\r\n                        trailingSpace = r.test(fragment);\r\n                    }\r\n                    array[i] = fragment;\r\n                }\r\n                i++;\r\n            }\r\n            return array;\r\n        };\r\n        Renderer = function Renderer(pdf, x, y, settings) {\r\n            this.pdf = pdf;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.settings = settings;\r\n            //list of functions which are called after each element-rendering process\r\n            this.watchFunctions = [];\r\n            this.init();\r\n            return this;\r\n        };\r\n        ResolveFont = function ResolveFont(css_font_family_string) {\r\n            var name, part, parts;\r\n            name = void 0;\r\n            parts = css_font_family_string.split(\",\");\r\n            part = parts.shift();\r\n            while (!name && part) {\r\n                name = FontNameDB[part.trim().toLowerCase()];\r\n                part = parts.shift();\r\n            }\r\n            return name;\r\n        };\r\n        ResolveUnitedNumber = function ResolveUnitedNumber(css_line_height_string) {\r\n\r\n            //IE8 issues\r\n            css_line_height_string = css_line_height_string === \"auto\" ? \"0px\" : css_line_height_string;\r\n            if (css_line_height_string.indexOf(\"em\") > -1 && !isNaN(Number(css_line_height_string.replace(\"em\", \"\")))) {\r\n                css_line_height_string = Number(css_line_height_string.replace(\"em\", \"\")) * 18.719 + \"px\";\r\n            }\r\n            if (css_line_height_string.indexOf(\"pt\") > -1 && !isNaN(Number(css_line_height_string.replace(\"pt\", \"\")))) {\r\n                css_line_height_string = Number(css_line_height_string.replace(\"pt\", \"\")) * 1.333 + \"px\";\r\n            }\r\n\r\n            var normal, undef, value;\r\n            undef = void 0;\r\n            normal = 16.00;\r\n            value = UnitedNumberMap[css_line_height_string];\r\n            if (value) {\r\n                return value;\r\n            }\r\n            value = {\r\n                \"xx-small\": 9,\r\n                \"x-small\": 11,\r\n                small: 13,\r\n                medium: 16,\r\n                large: 19,\r\n                \"x-large\": 23,\r\n                \"xx-large\": 28,\r\n                auto: 0\r\n            }[{ css_line_height_string: css_line_height_string }];\r\n\r\n            if (value !== undef) {\r\n                return UnitedNumberMap[css_line_height_string] = value / normal;\r\n            }\r\n            if (value = parseFloat(css_line_height_string)) {\r\n                return UnitedNumberMap[css_line_height_string] = value / normal;\r\n            }\r\n            value = css_line_height_string.match(/([\\d\\.]+)(px)/);\r\n            if (value.length === 3) {\r\n                return UnitedNumberMap[css_line_height_string] = parseFloat(value[1]) / normal;\r\n            }\r\n            return UnitedNumberMap[css_line_height_string] = 1;\r\n        };\r\n        GetCSS = function GetCSS(element) {\r\n            var css, tmp, computedCSSElement;\r\n            computedCSSElement = function(el) {\r\n                var compCSS;\r\n                compCSS = function(el) {\r\n                    if (document.defaultView && document.defaultView.getComputedStyle) {\r\n                        return document.defaultView.getComputedStyle(el, null);\r\n                    } else if (el.currentStyle) {\r\n                        return el.currentStyle;\r\n                    } else {\r\n                        return el.style;\r\n                    }\r\n                }(el);\r\n                return function(prop) {\r\n                    prop = prop.replace(/-\\D/g, function(match) {\r\n                        return match.charAt(1).toUpperCase();\r\n                    });\r\n                    return compCSS[prop];\r\n                };\r\n            }(element);\r\n            css = {};\r\n            tmp = void 0;\r\n            css[\"font-family\"] = ResolveFont(computedCSSElement(\"font-family\")) || \"times\";\r\n            css[\"font-style\"] = FontStyleMap[computedCSSElement(\"font-style\")] || \"normal\";\r\n            css[\"text-align\"] = TextAlignMap[computedCSSElement(\"text-align\")] || \"left\";\r\n            tmp = FontWeightMap[computedCSSElement(\"font-weight\")] || \"normal\";\r\n            if (tmp === \"bold\") {\r\n                if (css[\"font-style\"] === \"normal\") {\r\n                    css[\"font-style\"] = tmp;\r\n                } else {\r\n                    css[\"font-style\"] = tmp + css[\"font-style\"];\r\n                }\r\n            }\r\n            css[\"font-size\"] = ResolveUnitedNumber(computedCSSElement(\"font-size\")) || 1;\r\n            css[\"line-height\"] = ResolveUnitedNumber(computedCSSElement(\"line-height\")) || 1;\r\n            css[\"display\"] = computedCSSElement(\"display\") === \"inline\" ? \"inline\" : \"block\";\r\n\r\n            tmp = css[\"display\"] === \"block\";\r\n            css[\"margin-top\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-top\")) || 0;\r\n            css[\"margin-bottom\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-bottom\")) || 0;\r\n            css[\"padding-top\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-top\")) || 0;\r\n            css[\"padding-bottom\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-bottom\")) || 0;\r\n            css[\"margin-left\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-left\")) || 0;\r\n            css[\"margin-right\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"margin-right\")) || 0;\r\n            css[\"padding-left\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-left\")) || 0;\r\n            css[\"padding-right\"] = tmp && ResolveUnitedNumber(computedCSSElement(\"padding-right\")) || 0;\r\n\r\n            css[\"page-break-before\"] = computedCSSElement(\"page-break-before\") || \"auto\";\r\n\r\n            //float and clearing of floats\r\n            css[\"float\"] = FloatMap[computedCSSElement(\"cssFloat\")] || \"none\";\r\n            css[\"clear\"] = ClearMap[computedCSSElement(\"clear\")] || \"none\";\r\n\r\n            css[\"color\"] = computedCSSElement(\"color\");\r\n\r\n            return css;\r\n        };\r\n        elementHandledElsewhere = function elementHandledElsewhere(element, renderer, elementHandlers) {\r\n            var handlers, i, isHandledElsewhere, l, t;\r\n            isHandledElsewhere = false;\r\n            i = void 0;\r\n            l = void 0;\r\n            t = void 0;\r\n            handlers = elementHandlers[\"#\" + element.id];\r\n            if (handlers) {\r\n                if (typeof handlers === \"function\") {\r\n                    isHandledElsewhere = handlers(element, renderer);\r\n                } else {\r\n                    i = 0;\r\n                    l = handlers.length;\r\n                    while (!isHandledElsewhere && i !== l) {\r\n                        isHandledElsewhere = handlers[i](element, renderer);\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            handlers = elementHandlers[element.nodeName];\r\n            if (!isHandledElsewhere && handlers) {\r\n                if (typeof handlers === \"function\") {\r\n                    isHandledElsewhere = handlers(element, renderer);\r\n                } else {\r\n                    i = 0;\r\n                    l = handlers.length;\r\n                    while (!isHandledElsewhere && i !== l) {\r\n                        isHandledElsewhere = handlers[i](element, renderer);\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n            return isHandledElsewhere;\r\n        };\r\n        tableToJson = function tableToJson(table, renderer) {\r\n            var data, headers, i, j, rowData, tableRow, table_obj, table_with, cell, l;\r\n            data = [];\r\n            headers = [];\r\n            i = 0;\r\n            l = table.rows[0].cells.length;\r\n            table_with = table.clientWidth;\r\n            while (i < l) {\r\n                cell = table.rows[0].cells[i];\r\n                headers[i] = {\r\n                    name: cell.textContent.toLowerCase().replace(/\\s+/g, ''),\r\n                    prompt: cell.textContent.replace(/\\r?\\n/g, ''),\r\n                    width: cell.clientWidth / table_with * renderer.pdf.internal.pageSize.width\r\n                };\r\n                i++;\r\n            }\r\n            i = 1;\r\n            while (i < table.rows.length) {\r\n                tableRow = table.rows[i];\r\n                rowData = {};\r\n                j = 0;\r\n                while (j < tableRow.cells.length) {\r\n                    rowData[headers[j].name] = tableRow.cells[j].textContent.replace(/\\r?\\n/g, '');\r\n                    j++;\r\n                }\r\n                data.push(rowData);\r\n                i++;\r\n            }\r\n            return table_obj = {\r\n                rows: data,\r\n                headers: headers\r\n            };\r\n        };\r\n        var SkipNode = {\r\n            SCRIPT: 1,\r\n            STYLE: 1,\r\n            NOSCRIPT: 1,\r\n            OBJECT: 1,\r\n            EMBED: 1,\r\n            SELECT: 1\r\n        };\r\n        var listCount = 1;\r\n        _DrillForContent = function DrillForContent(element, renderer, elementHandlers) {\r\n            var cn, cns, fragmentCSS, i, isBlock, l, px2pt, table2json, cb;\r\n            cns = element.childNodes;\r\n            cn = void 0;\r\n            fragmentCSS = GetCSS(element);\r\n            isBlock = fragmentCSS.display === \"block\";\r\n            if (isBlock) {\r\n                renderer.setBlockBoundary();\r\n                renderer.setBlockStyle(fragmentCSS);\r\n            }\r\n            px2pt = 0.264583 * 72 / 25.4;\r\n            i = 0;\r\n            l = cns.length;\r\n            while (i < l) {\r\n                cn = cns[i];\r\n                if ((typeof cn === \"undefined\" ? \"undefined\" : _typeof(cn)) === \"object\") {\r\n\r\n                    //execute all watcher functions to e.g. reset floating\r\n                    renderer.executeWatchFunctions(cn);\r\n\r\n                    /*** HEADER rendering **/\r\n                    if (cn.nodeType === 1 && cn.nodeName === 'HEADER') {\r\n                        var header = cn;\r\n                        //store old top margin\r\n                        var oldMarginTop = renderer.pdf.margins_doc.top;\r\n                        //subscribe for new page event and render header first on every page\r\n                        renderer.pdf.internal.events.subscribe('addPage', function(pageInfo) {\r\n                            //set current y position to old margin\r\n                            renderer.y = oldMarginTop;\r\n                            //render all child nodes of the header element\r\n                            _DrillForContent(header, renderer, elementHandlers);\r\n                            //set margin to old margin + rendered header + 10 space to prevent overlapping\r\n                            //important for other plugins (e.g. table) to start rendering at correct position after header\r\n                            renderer.pdf.margins_doc.top = renderer.y + 10;\r\n                            renderer.y += 10;\r\n                        }, false);\r\n                    }\r\n\r\n                    if (cn.nodeType === 8 && cn.nodeName === \"#comment\") {\r\n                        if (~cn.textContent.indexOf(\"ADD_PAGE\")) {\r\n                            renderer.pdf.addPage();\r\n                            renderer.y = renderer.pdf.margins_doc.top;\r\n                        }\r\n                    } else if (cn.nodeType === 1 && !SkipNode[cn.nodeName]) {\r\n                        /*** IMAGE RENDERING ***/\r\n                        var cached_image;\r\n                        if (cn.nodeName === \"IMG\") {\r\n                            var url = cn.getAttribute(\"src\");\r\n                            cached_image = images[renderer.pdf.sHashCode(url) || url];\r\n                        }\r\n                        if (cached_image) {\r\n                            if (renderer.pdf.internal.pageSize.height - renderer.pdf.margins_doc.bottom < renderer.y + cn.height && renderer.y > renderer.pdf.margins_doc.top) {\r\n                                renderer.pdf.addPage();\r\n                                renderer.y = renderer.pdf.margins_doc.top;\r\n                                //check if we have to set back some values due to e.g. header rendering for new page\r\n                                renderer.executeWatchFunctions(cn);\r\n                            }\r\n\r\n                            var imagesCSS = GetCSS(cn);\r\n                            var imageX = renderer.x;\r\n                            var fontToUnitRatio = 12 / renderer.pdf.internal.scaleFactor;\r\n\r\n                            //define additional paddings, margins which have to be taken into account for margin calculations\r\n                            var additionalSpaceLeft = (imagesCSS[\"margin-left\"] + imagesCSS[\"padding-left\"]) * fontToUnitRatio;\r\n                            var additionalSpaceRight = (imagesCSS[\"margin-right\"] + imagesCSS[\"padding-right\"]) * fontToUnitRatio;\r\n                            var additionalSpaceTop = (imagesCSS[\"margin-top\"] + imagesCSS[\"padding-top\"]) * fontToUnitRatio;\r\n                            var additionalSpaceBottom = (imagesCSS[\"margin-bottom\"] + imagesCSS[\"padding-bottom\"]) * fontToUnitRatio;\r\n\r\n                            //if float is set to right, move the image to the right border\r\n                            //add space if margin is set\r\n                            if (imagesCSS['float'] !== undefined && imagesCSS['float'] === 'right') {\r\n                                imageX += renderer.settings.width - cn.width - additionalSpaceRight;\r\n                            } else {\r\n                                imageX += additionalSpaceLeft;\r\n                            }\r\n\r\n                            renderer.pdf.addImage(cached_image, imageX, renderer.y + additionalSpaceTop, cn.width, cn.height);\r\n                            cached_image = undefined;\r\n                            //if the float prop is specified we have to float the text around the image\r\n                            if (imagesCSS['float'] === 'right' || imagesCSS['float'] === 'left') {\r\n                                //add functiont to set back coordinates after image rendering\r\n                                renderer.watchFunctions.push(function(diffX, thresholdY, diffWidth, el) {\r\n                                    //undo drawing box adaptions which were set by floating\r\n                                    if (renderer.y >= thresholdY) {\r\n                                        renderer.x += diffX;\r\n                                        renderer.settings.width += diffWidth;\r\n                                        return true;\r\n                                    } else if (el && el.nodeType === 1 && !SkipNode[el.nodeName] && renderer.x + el.width > renderer.pdf.margins_doc.left + renderer.pdf.margins_doc.width) {\r\n                                        renderer.x += diffX;\r\n                                        renderer.y = thresholdY;\r\n                                        renderer.settings.width += diffWidth;\r\n                                        return true;\r\n                                    } else {\r\n                                        return false;\r\n                                    }\r\n                                }.bind(this, imagesCSS['float'] === 'left' ? -cn.width - additionalSpaceLeft - additionalSpaceRight : 0, renderer.y + cn.height + additionalSpaceTop + additionalSpaceBottom, cn.width));\r\n                                //reset floating by clear:both divs\r\n                                //just set cursorY after the floating element\r\n                                renderer.watchFunctions.push(function(yPositionAfterFloating, pages, el) {\r\n                                    if (renderer.y < yPositionAfterFloating && pages === renderer.pdf.internal.getNumberOfPages()) {\r\n                                        if (el.nodeType === 1 && GetCSS(el).clear === 'both') {\r\n                                            renderer.y = yPositionAfterFloating;\r\n                                            return true;\r\n                                        } else {\r\n                                            return false;\r\n                                        }\r\n                                    } else {\r\n                                        return true;\r\n                                    }\r\n                                }.bind(this, renderer.y + cn.height, renderer.pdf.internal.getNumberOfPages()));\r\n\r\n                                //if floating is set we decrease the available width by the image width\r\n                                renderer.settings.width -= cn.width + additionalSpaceLeft + additionalSpaceRight;\r\n                                //if left just add the image width to the X coordinate\r\n                                if (imagesCSS['float'] === 'left') {\r\n                                    renderer.x += cn.width + additionalSpaceLeft + additionalSpaceRight;\r\n                                }\r\n                            } else {\r\n                                //if no floating is set, move the rendering cursor after the image height\r\n                                renderer.y += cn.height + additionalSpaceTop + additionalSpaceBottom;\r\n                            }\r\n\r\n                            /*** TABLE RENDERING ***/\r\n                        } else if (cn.nodeName === \"TABLE\") {\r\n                            table2json = tableToJson(cn, renderer);\r\n                            renderer.y += 10;\r\n                            renderer.pdf.table(renderer.x, renderer.y, table2json.rows, table2json.headers, {\r\n                                autoSize: false,\r\n                                printHeaders: elementHandlers.printHeaders,\r\n                                margins: renderer.pdf.margins_doc,\r\n                                css: GetCSS(cn)\r\n                            });\r\n                            renderer.y = renderer.pdf.lastCellPos.y + renderer.pdf.lastCellPos.h + 20;\r\n                        } else if (cn.nodeName === \"OL\" || cn.nodeName === \"UL\") {\r\n                            listCount = 1;\r\n                            if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\r\n                                _DrillForContent(cn, renderer, elementHandlers);\r\n                            }\r\n                            renderer.y += 10;\r\n                        } else if (cn.nodeName === \"LI\") {\r\n                            var temp = renderer.x;\r\n                            renderer.x += 20 / renderer.pdf.internal.scaleFactor;\r\n                            renderer.y += 3;\r\n                            if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\r\n                                _DrillForContent(cn, renderer, elementHandlers);\r\n                            }\r\n                            renderer.x = temp;\r\n                        } else if (cn.nodeName === \"BR\") {\r\n                            renderer.y += fragmentCSS[\"font-size\"] * renderer.pdf.internal.scaleFactor;\r\n                            renderer.addText(\"\\u2028\", clone(fragmentCSS));\r\n                        } else {\r\n                            if (!elementHandledElsewhere(cn, renderer, elementHandlers)) {\r\n                                _DrillForContent(cn, renderer, elementHandlers);\r\n                            }\r\n                        }\r\n                    } else if (cn.nodeType === 3) {\r\n                        var value = cn.nodeValue;\r\n                        if (cn.nodeValue && cn.parentNode.nodeName === \"LI\") {\r\n                            if (cn.parentNode.parentNode.nodeName === \"OL\") {\r\n                                value = listCount++ + '. ' + value;\r\n                            } else {\r\n                                var fontSize = fragmentCSS[\"font-size\"];\r\n                                var offsetX = (3 - fontSize * 0.75) * renderer.pdf.internal.scaleFactor;\r\n                                var offsetY = fontSize * 0.75 * renderer.pdf.internal.scaleFactor;\r\n                                var radius = fontSize * 1.74 / renderer.pdf.internal.scaleFactor;\r\n                                cb = function cb(x, y) {\r\n                                    this.pdf.circle(x + offsetX, y + offsetY, radius, 'FD');\r\n                                };\r\n                            }\r\n                        }\r\n                        // Only add the text if the text node is in the body element\r\n                        // Add compatibility with IE11\r\n                        if (!!(cn.ownerDocument.body.compareDocumentPosition(cn) & 16)) {\r\n                            renderer.addText(value, fragmentCSS);\r\n                        }\r\n                    } else if (typeof cn === \"string\") {\r\n                        renderer.addText(cn, fragmentCSS);\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            elementHandlers.outY = renderer.y;\r\n\r\n            if (isBlock) {\r\n                return renderer.setBlockBoundary(cb);\r\n            }\r\n        };\r\n        images = {};\r\n        loadImgs = function loadImgs(element, renderer, elementHandlers, cb) {\r\n            var imgs = element.getElementsByTagName('img'),\r\n                l = imgs.length,\r\n                found_images,\r\n                x = 0;\r\n\r\n            function done() {\r\n                renderer.pdf.internal.events.publish('imagesLoaded');\r\n                cb(found_images);\r\n            }\r\n\r\n            function loadImage(url, width, height) {\r\n                if (!url) return;\r\n                var img = new Image();\r\n                found_images = ++x;\r\n                img.crossOrigin = '';\r\n                img.onerror = img.onload = function() {\r\n                    if (img.complete) {\r\n                        //to support data urls in images, set width and height\r\n                        //as those values are not recognized automatically\r\n                        if (img.src.indexOf('data:image/') === 0) {\r\n                            img.width = width || img.width || 0;\r\n                            img.height = height || img.height || 0;\r\n                        }\r\n                        //if valid image add to known images array\r\n                        if (img.width + img.height) {\r\n                            var hash = renderer.pdf.sHashCode(url) || url;\r\n                            images[hash] = images[hash] || img;\r\n                        }\r\n                    }\r\n                    if (!--x) {\r\n                        done();\r\n                    }\r\n                };\r\n                img.src = url;\r\n            }\r\n            while (l--) {\r\n                loadImage(imgs[l].getAttribute(\"src\"), imgs[l].width, imgs[l].height);\r\n            }\r\n            return x || done();\r\n        };\r\n        checkForFooter = function checkForFooter(elem, renderer, elementHandlers) {\r\n            //check if we can found a <footer> element\r\n            var footer = elem.getElementsByTagName(\"footer\");\r\n            if (footer.length > 0) {\r\n\r\n                footer = footer[0];\r\n\r\n                //bad hack to get height of footer\r\n                //creat dummy out and check new y after fake rendering\r\n                var oldOut = renderer.pdf.internal.write;\r\n                var oldY = renderer.y;\r\n                renderer.pdf.internal.write = function() {};\r\n                _DrillForContent(footer, renderer, elementHandlers);\r\n                var footerHeight = Math.ceil(renderer.y - oldY) + 5;\r\n                renderer.y = oldY;\r\n                renderer.pdf.internal.write = oldOut;\r\n\r\n                //add 20% to prevent overlapping\r\n                renderer.pdf.margins_doc.bottom += footerHeight;\r\n\r\n                //Create function render header on every page\r\n                var renderFooter = function renderFooter(pageInfo) {\r\n                    var pageNumber = pageInfo !== undefined ? pageInfo.pageNumber : 1;\r\n                    //set current y position to old margin\r\n                    var oldPosition = renderer.y;\r\n                    //render all child nodes of the header element\r\n                    renderer.y = renderer.pdf.internal.pageSize.height - renderer.pdf.margins_doc.bottom;\r\n                    renderer.pdf.margins_doc.bottom -= footerHeight;\r\n\r\n                    //check if we have to add page numbers\r\n                    var spans = footer.getElementsByTagName('span');\r\n                    for (var i = 0; i < spans.length; ++i) {\r\n                        //if we find some span element with class pageCounter, set the page\r\n                        if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" pageCounter \") > -1) {\r\n                            spans[i].innerHTML = pageNumber;\r\n                        }\r\n                        //if we find some span element with class totalPages, set a variable which is replaced after rendering of all pages\r\n                        if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" totalPages \") > -1) {\r\n                            spans[i].innerHTML = '###jsPDFVarTotalPages###';\r\n                        }\r\n                    }\r\n\r\n                    //render footer content\r\n                    _DrillForContent(footer, renderer, elementHandlers);\r\n                    //set bottom margin to previous height including the footer height\r\n                    renderer.pdf.margins_doc.bottom += footerHeight;\r\n                    //important for other plugins (e.g. table) to start rendering at correct position after header\r\n                    renderer.y = oldPosition;\r\n                };\r\n\r\n                //check if footer contains totalPages which should be replace at the disoposal of the document\r\n                var spans = footer.getElementsByTagName('span');\r\n                for (var i = 0; i < spans.length; ++i) {\r\n                    if ((\" \" + spans[i].className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(\" totalPages \") > -1) {\r\n                        renderer.pdf.internal.events.subscribe('htmlRenderingFinished', renderer.pdf.putTotalPages.bind(renderer.pdf, '###jsPDFVarTotalPages###'), true);\r\n                    }\r\n                }\r\n\r\n                //register event to render footer on every new page\r\n                renderer.pdf.internal.events.subscribe('addPage', renderFooter, false);\r\n                //render footer on first page\r\n                renderFooter();\r\n\r\n                //prevent footer rendering\r\n                SkipNode['FOOTER'] = 1;\r\n            }\r\n        };\r\n        process = function process(pdf, element, x, y, settings, callback) {\r\n            if (!element) return false;\r\n            if (typeof element !== \"string\" && !element.parentNode) element = '' + element.innerHTML;\r\n            if (typeof element === \"string\") {\r\n                element = function(element) {\r\n                    var $frame, $hiddendiv, framename, visuallyhidden;\r\n                    framename = \"jsPDFhtmlText\" + Date.now().toString() + (Math.random() * 1000).toFixed(0);\r\n                    visuallyhidden = \"position: absolute !important;\" + \"clip: rect(1px 1px 1px 1px); /* IE6, IE7 */\" + \"clip: rect(1px, 1px, 1px, 1px);\" + \"padding:0 !important;\" + \"border:0 !important;\" + \"height: 1px !important;\" + \"width: 1px !important; \" + \"top:auto;\" + \"left:-100px;\" + \"overflow: hidden;\";\r\n                    $hiddendiv = document.createElement('div');\r\n                    $hiddendiv.style.cssText = visuallyhidden;\r\n                    $hiddendiv.innerHTML = \"<iframe style=\\\"height:1px;width:1px\\\" name=\\\"\" + framename + \"\\\" />\";\r\n                    document.body.appendChild($hiddendiv);\r\n                    $frame = window.frames[framename];\r\n                    $frame.document.open();\r\n                    $frame.document.writeln(element);\r\n                    $frame.document.close();\r\n                    return $frame.document.body;\r\n                }(element.replace(/<\\/?script[^>]*?>/gi, ''));\r\n            }\r\n            var r = new Renderer(pdf, x, y, settings),\r\n                out;\r\n\r\n            // 1. load images\r\n            // 2. prepare optional footer elements\r\n            // 3. render content\r\n            loadImgs.call(this, element, r, settings.elementHandlers, function(found_images) {\r\n                checkForFooter(element, r, settings.elementHandlers);\r\n                _DrillForContent(element, r, settings.elementHandlers);\r\n                //send event dispose for final taks (e.g. footer totalpage replacement)\r\n                r.pdf.internal.events.publish('htmlRenderingFinished');\r\n                out = r.dispose();\r\n                if (typeof callback === 'function') callback(out);\r\n                else if (found_images) console.error('jsPDF Warning: rendering issues? provide a callback to fromHTML!');\r\n            });\r\n            return out || { x: r.x, y: r.y };\r\n        };\r\n        Renderer.prototype.init = function() {\r\n            this.paragraph = {\r\n                text: [],\r\n                style: []\r\n            };\r\n            return this.pdf.internal.write(\"q\");\r\n        };\r\n        Renderer.prototype.dispose = function() {\r\n            this.pdf.internal.write(\"Q\");\r\n            return {\r\n                x: this.x,\r\n                y: this.y,\r\n                ready: true\r\n            };\r\n        };\r\n\r\n        //Checks if we have to execute some watcher functions\r\n        //e.g. to end text floating around an image\r\n        Renderer.prototype.executeWatchFunctions = function(el) {\r\n            var ret = false;\r\n            var narray = [];\r\n            if (this.watchFunctions.length > 0) {\r\n                for (var i = 0; i < this.watchFunctions.length; ++i) {\r\n                    if (this.watchFunctions[i](el) === true) {\r\n                        ret = true;\r\n                    } else {\r\n                        narray.push(this.watchFunctions[i]);\r\n                    }\r\n                }\r\n                this.watchFunctions = narray;\r\n            }\r\n            return ret;\r\n        };\r\n\r\n        Renderer.prototype.splitFragmentsIntoLines = function(fragments, styles) {\r\n            var currentLineLength, defaultFontSize, ff, fontMetrics, fontMetricsCache, fragment, fragmentChopped, fragmentLength, fragmentSpecificMetrics, fs, k, line, lines, maxLineLength, style;\r\n            defaultFontSize = 12;\r\n            k = this.pdf.internal.scaleFactor;\r\n            fontMetricsCache = {};\r\n            ff = void 0;\r\n            fs = void 0;\r\n            fontMetrics = void 0;\r\n            fragment = void 0;\r\n            style = void 0;\r\n            fragmentSpecificMetrics = void 0;\r\n            fragmentLength = void 0;\r\n            fragmentChopped = void 0;\r\n            line = [];\r\n            lines = [line];\r\n            currentLineLength = 0;\r\n            maxLineLength = this.settings.width;\r\n            while (fragments.length) {\r\n                fragment = fragments.shift();\r\n                style = styles.shift();\r\n                if (fragment) {\r\n                    ff = style[\"font-family\"];\r\n                    fs = style[\"font-style\"];\r\n                    fontMetrics = fontMetricsCache[ff + fs];\r\n                    if (!fontMetrics) {\r\n                        fontMetrics = this.pdf.internal.getFont(ff, fs).metadata.Unicode;\r\n                        fontMetricsCache[ff + fs] = fontMetrics;\r\n                    }\r\n                    fragmentSpecificMetrics = {\r\n                        widths: fontMetrics.widths,\r\n                        kerning: fontMetrics.kerning,\r\n                        fontSize: style[\"font-size\"] * defaultFontSize,\r\n                        textIndent: currentLineLength\r\n                    };\r\n                    fragmentLength = this.pdf.getStringUnitWidth(fragment, fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k;\r\n                    if (fragment == \"\\u2028\") {\r\n                        line = [];\r\n                        lines.push(line);\r\n                    } else if (currentLineLength + fragmentLength > maxLineLength) {\r\n                        fragmentChopped = this.pdf.splitTextToSize(fragment, maxLineLength, fragmentSpecificMetrics);\r\n                        line.push([fragmentChopped.shift(), style]);\r\n                        while (fragmentChopped.length) {\r\n                            line = [\r\n                                [fragmentChopped.shift(), style]\r\n                            ];\r\n                            lines.push(line);\r\n                        }\r\n                        currentLineLength = this.pdf.getStringUnitWidth(line[0][0], fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k;\r\n                    } else {\r\n                        line.push([fragment, style]);\r\n                        currentLineLength += fragmentLength;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //if text alignment was set, set margin/indent of each line\r\n            if (style['text-align'] !== undefined && (style['text-align'] === 'center' || style['text-align'] === 'right' || style['text-align'] === 'justify')) {\r\n                for (var i = 0; i < lines.length; ++i) {\r\n                    var length = this.pdf.getStringUnitWidth(lines[i][0][0], fragmentSpecificMetrics) * fragmentSpecificMetrics.fontSize / k;\r\n                    //if there is more than on line we have to clone the style object as all lines hold a reference on this object\r\n                    if (i > 0) {\r\n                        lines[i][0][1] = clone(lines[i][0][1]);\r\n                    }\r\n                    var space = maxLineLength - length;\r\n\r\n                    if (style['text-align'] === 'right') {\r\n                        lines[i][0][1]['margin-left'] = space;\r\n                        //if alignment is not right, it has to be center so split the space to the left and the right\r\n                    } else if (style['text-align'] === 'center') {\r\n                        lines[i][0][1]['margin-left'] = space / 2;\r\n                        //if justify was set, calculate the word spacing and define in by using the css property\r\n                    } else if (style['text-align'] === 'justify') {\r\n                        var countSpaces = lines[i][0][0].split(' ').length - 1;\r\n                        lines[i][0][1]['word-spacing'] = space / countSpaces;\r\n                        //ignore the last line in justify mode\r\n                        if (i === lines.length - 1) {\r\n                            lines[i][0][1]['word-spacing'] = 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return lines;\r\n        };\r\n        Renderer.prototype.RenderTextFragment = function(text, style) {\r\n            var defaultFontSize, font, maxLineHeight;\r\n\r\n            maxLineHeight = 0;\r\n            defaultFontSize = 12;\r\n\r\n            if (this.pdf.internal.pageSize.height - this.pdf.margins_doc.bottom < this.y + this.pdf.internal.getFontSize()) {\r\n                this.pdf.internal.write(\"ET\", \"Q\");\r\n                this.pdf.addPage();\r\n                this.y = this.pdf.margins_doc.top;\r\n                this.pdf.internal.write(\"q\", \"BT 0 g\", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), style.color, \"Td\");\r\n                //move cursor by one line on new page\r\n                maxLineHeight = Math.max(maxLineHeight, style[\"line-height\"], style[\"font-size\"]);\r\n                this.pdf.internal.write(0, (-1 * defaultFontSize * maxLineHeight).toFixed(2), \"Td\");\r\n            }\r\n\r\n            font = this.pdf.internal.getFont(style[\"font-family\"], style[\"font-style\"]);\r\n\r\n            // text color\r\n            var pdfTextColor = this.getPdfColor(style[\"color\"]);\r\n            if (pdfTextColor !== this.lastTextColor) {\r\n                this.pdf.internal.write(pdfTextColor);\r\n                this.lastTextColor = pdfTextColor;\r\n            }\r\n\r\n            //set the word spacing for e.g. justify style\r\n            if (style['word-spacing'] !== undefined && style['word-spacing'] > 0) {\r\n                this.pdf.internal.write(style['word-spacing'].toFixed(2), \"Tw\");\r\n            }\r\n\r\n            this.pdf.internal.write(\"/\" + font.id, (defaultFontSize * style[\"font-size\"]).toFixed(2), \"Tf\", \"(\" + this.pdf.internal.pdfEscape(text) + \") Tj\");\r\n\r\n            //set the word spacing back to neutral => 0\r\n            if (style['word-spacing'] !== undefined) {\r\n                this.pdf.internal.write(0, \"Tw\");\r\n            }\r\n        };\r\n\r\n        // Accepts #FFFFFF, rgb(int,int,int), or CSS Color Name\r\n        Renderer.prototype.getPdfColor = function(style) {\r\n            var textColor;\r\n            var r, g, b;\r\n\r\n            var rx = /rgb\\s*\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+\\s*)\\)/;\r\n            var m = rx.exec(style);\r\n            if (m != null) {\r\n                r = parseInt(m[1]);\r\n                g = parseInt(m[2]);\r\n                b = parseInt(m[3]);\r\n            } else {\r\n                if (style.charAt(0) != '#') {\r\n                    style = CssColors.colorNameToHex(style);\r\n                    if (!style) {\r\n                        style = '#000000';\r\n                    }\r\n                }\r\n                r = style.substring(1, 3);\r\n                r = parseInt(r, 16);\r\n                g = style.substring(3, 5);\r\n                g = parseInt(g, 16);\r\n                b = style.substring(5, 7);\r\n                b = parseInt(b, 16);\r\n            }\r\n\r\n            if (typeof r === 'string' && /^#[0-9A-Fa-f]{6}$/.test(r)) {\r\n                var hex = parseInt(r.substr(1), 16);\r\n                r = hex >> 16 & 255;\r\n                g = hex >> 8 & 255;\r\n                b = hex & 255;\r\n            }\r\n\r\n            var f3 = this.f3;\r\n            if (r === 0 && g === 0 && b === 0 || typeof g === 'undefined') {\r\n                textColor = f3(r / 255) + ' g';\r\n            } else {\r\n                textColor = [f3(r / 255), f3(g / 255), f3(b / 255), 'rg'].join(' ');\r\n            }\r\n            return textColor;\r\n        };\r\n\r\n        Renderer.prototype.f3 = function(number) {\r\n            return number.toFixed(3); // Ie, %.3f\r\n        }, Renderer.prototype.renderParagraph = function(cb) {\r\n            var blockstyle, defaultFontSize, fontToUnitRatio, fragments, i, l, line, lines, maxLineHeight, out, paragraphspacing_after, paragraphspacing_before, priorblockstyle, styles, fontSize;\r\n            fragments = PurgeWhiteSpace(this.paragraph.text);\r\n            styles = this.paragraph.style;\r\n            blockstyle = this.paragraph.blockstyle;\r\n            priorblockstyle = this.paragraph.priorblockstyle || {};\r\n            this.paragraph = {\r\n                text: [],\r\n                style: [],\r\n                blockstyle: {},\r\n                priorblockstyle: blockstyle\r\n            };\r\n            if (!fragments.join(\"\").trim()) {\r\n                return;\r\n            }\r\n            lines = this.splitFragmentsIntoLines(fragments, styles);\r\n            line = void 0;\r\n            maxLineHeight = void 0;\r\n            defaultFontSize = 12;\r\n            fontToUnitRatio = defaultFontSize / this.pdf.internal.scaleFactor;\r\n            this.priorMarginBottom = this.priorMarginBottom || 0;\r\n            paragraphspacing_before = (Math.max((blockstyle[\"margin-top\"] || 0) - this.priorMarginBottom, 0) + (blockstyle[\"padding-top\"] || 0)) * fontToUnitRatio;\r\n            paragraphspacing_after = ((blockstyle[\"margin-bottom\"] || 0) + (blockstyle[\"padding-bottom\"] || 0)) * fontToUnitRatio;\r\n            this.priorMarginBottom = blockstyle[\"margin-bottom\"] || 0;\r\n\r\n            if (blockstyle['page-break-before'] === 'always') {\r\n                this.pdf.addPage();\r\n                this.y = 0;\r\n                paragraphspacing_before = ((blockstyle[\"margin-top\"] || 0) + (blockstyle[\"padding-top\"] || 0)) * fontToUnitRatio;\r\n            }\r\n\r\n            out = this.pdf.internal.write;\r\n            i = void 0;\r\n            l = void 0;\r\n            this.y += paragraphspacing_before;\r\n            out(\"q\", \"BT 0 g\", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), \"Td\");\r\n\r\n            //stores the current indent of cursor position\r\n            var currentIndent = 0;\r\n\r\n            while (lines.length) {\r\n                line = lines.shift();\r\n                maxLineHeight = 0;\r\n                i = 0;\r\n                l = line.length;\r\n                while (i !== l) {\r\n                    if (line[i][0].trim()) {\r\n                        maxLineHeight = Math.max(maxLineHeight, line[i][1][\"line-height\"], line[i][1][\"font-size\"]);\r\n                        fontSize = line[i][1][\"font-size\"] * 7;\r\n                    }\r\n                    i++;\r\n                }\r\n                //if we have to move the cursor to adapt the indent\r\n                var indentMove = 0;\r\n                var wantedIndent = 0;\r\n                //if a margin was added (by e.g. a text-alignment), move the cursor\r\n                if (line[0][1][\"margin-left\"] !== undefined && line[0][1][\"margin-left\"] > 0) {\r\n                    wantedIndent = this.pdf.internal.getCoordinateString(line[0][1][\"margin-left\"]);\r\n                    indentMove = wantedIndent - currentIndent;\r\n                    currentIndent = wantedIndent;\r\n                }\r\n                var indentMore = Math.max(blockstyle[\"margin-left\"] || 0, 0) * fontToUnitRatio;\r\n                //move the cursor\r\n                out(indentMove + indentMore, (-1 * defaultFontSize * maxLineHeight).toFixed(2), \"Td\");\r\n                i = 0;\r\n                l = line.length;\r\n                while (i !== l) {\r\n                    if (line[i][0]) {\r\n                        this.RenderTextFragment(line[i][0], line[i][1]);\r\n                    }\r\n                    i++;\r\n                }\r\n                this.y += maxLineHeight * fontToUnitRatio;\r\n\r\n                //if some watcher function was executed successful, so e.g. margin and widths were changed,\r\n                //reset line drawing and calculate position and lines again\r\n                //e.g. to stop text floating around an image\r\n                if (this.executeWatchFunctions(line[0][1]) && lines.length > 0) {\r\n                    var localFragments = [];\r\n                    var localStyles = [];\r\n                    //create fragment array of\r\n                    lines.forEach(function(localLine) {\r\n                        var i = 0;\r\n                        var l = localLine.length;\r\n                        while (i !== l) {\r\n                            if (localLine[i][0]) {\r\n                                localFragments.push(localLine[i][0] + ' ');\r\n                                localStyles.push(localLine[i][1]);\r\n                            }\r\n                            ++i;\r\n                        }\r\n                    });\r\n                    //split lines again due to possible coordinate changes\r\n                    lines = this.splitFragmentsIntoLines(PurgeWhiteSpace(localFragments), localStyles);\r\n                    //reposition the current cursor\r\n                    out(\"ET\", \"Q\");\r\n                    out(\"q\", \"BT 0 g\", this.pdf.internal.getCoordinateString(this.x), this.pdf.internal.getVerticalCoordinateString(this.y), \"Td\");\r\n                }\r\n            }\r\n            if (cb && typeof cb === \"function\") {\r\n                cb.call(this, this.x - 9, this.y - fontSize / 2);\r\n            }\r\n            out(\"ET\", \"Q\");\r\n            return this.y += paragraphspacing_after;\r\n        };\r\n        Renderer.prototype.setBlockBoundary = function(cb) {\r\n            return this.renderParagraph(cb);\r\n        };\r\n        Renderer.prototype.setBlockStyle = function(css) {\r\n            return this.paragraph.blockstyle = css;\r\n        };\r\n        Renderer.prototype.addText = function(text, css) {\r\n            this.paragraph.text.push(text);\r\n            return this.paragraph.style.push(css);\r\n        };\r\n        FontNameDB = {\r\n            helvetica: \"helvetica\",\r\n            \"sans-serif\": \"helvetica\",\r\n            \"times new roman\": \"times\",\r\n            serif: \"times\",\r\n            times: \"times\",\r\n            monospace: \"courier\",\r\n            courier: \"courier\"\r\n        };\r\n        FontWeightMap = {\r\n            100: \"normal\",\r\n            200: \"normal\",\r\n            300: \"normal\",\r\n            400: \"normal\",\r\n            500: \"bold\",\r\n            600: \"bold\",\r\n            700: \"bold\",\r\n            800: \"bold\",\r\n            900: \"bold\",\r\n            normal: \"normal\",\r\n            bold: \"bold\",\r\n            bolder: \"bold\",\r\n            lighter: \"normal\"\r\n        };\r\n        FontStyleMap = {\r\n            normal: \"normal\",\r\n            italic: \"italic\",\r\n            oblique: \"italic\"\r\n        };\r\n        TextAlignMap = {\r\n            left: \"left\",\r\n            right: \"right\",\r\n            center: \"center\",\r\n            justify: \"justify\"\r\n        };\r\n        FloatMap = {\r\n            none: 'none',\r\n            right: 'right',\r\n            left: 'left'\r\n        };\r\n        ClearMap = {\r\n            none: 'none',\r\n            both: 'both'\r\n        };\r\n        UnitedNumberMap = {\r\n            normal: 1\r\n        };\r\n        /**\r\n         * Converts HTML-formatted text into formatted PDF text.\r\n         *\r\n         * Notes:\r\n         * 2012-07-18\r\n         * Plugin relies on having browser, DOM around. The HTML is pushed into dom and traversed.\r\n         * Plugin relies on jQuery for CSS extraction.\r\n         * Targeting HTML output from Markdown templating, which is a very simple\r\n         * markup - div, span, em, strong, p. No br-based paragraph separation supported explicitly (but still may work.)\r\n         * Images, tables are NOT supported.\r\n         *\r\n         * @public\r\n         * @function\r\n         * @param HTML {String or DOM Element} HTML-formatted text, or pointer to DOM element that is to be rendered into PDF.\r\n         * @param x {Number} starting X coordinate in jsPDF instance's declared units.\r\n         * @param y {Number} starting Y coordinate in jsPDF instance's declared units.\r\n         * @param settings {Object} Additional / optional variables controlling parsing, rendering.\r\n         * @returns {Object} jsPDF instance\r\n         */\r\n        jsPDFAPI.fromHTML = function(HTML, x, y, settings, callback, margins) {\r\n            \"use strict\";\r\n\r\n            this.margins_doc = margins || {\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            if (!settings) settings = {};\r\n            if (!settings.elementHandlers) settings.elementHandlers = {};\r\n\r\n            return process(this, HTML, isNaN(x) ? 4 : x, isNaN(y) ? 4 : y, settings, callback);\r\n        };\r\n    })(jsPDF.API);\r\n\r\n\r\n    /** ====================================================================\r\n     * jsPDF Cell plugin\r\n     * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\r\n     *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br\r\n     *               2013 Lee Driscoll, https://github.com/lsdriscoll\r\n     *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\r\n     *               2014 James Hall, james@parall.ax\r\n     *               2014 Diego Casorran, https://github.com/diegocr\r\n     *\r\n     *\r\n     * ====================================================================\r\n     */\r\n\r\n    (function(jsPDFAPI) {\r\n        'use strict';\r\n        /*jslint browser:true */\r\n        /*global document: false, jsPDF */\r\n\r\n        var fontName,\r\n            fontSize,\r\n            fontStyle,\r\n            padding = 3,\r\n            margin = 13,\r\n            headerFunction,\r\n            lastCellPos = { x: undefined, y: undefined, w: undefined, h: undefined, ln: undefined },\r\n            pages = 1,\r\n            setLastCellPosition = function setLastCellPosition(x, y, w, h, ln) {\r\n                lastCellPos = { 'x': x, 'y': y, 'w': w, 'h': h, 'ln': ln };\r\n            },\r\n            getLastCellPosition = function getLastCellPosition() {\r\n                return lastCellPos;\r\n            },\r\n            NO_MARGINS = { left: 0, top: 0, bottom: 0 };\r\n\r\n        jsPDFAPI.setHeaderFunction = function(func) {\r\n            headerFunction = func;\r\n        };\r\n\r\n        jsPDFAPI.getTextDimensions = function(txt) {\r\n            fontName = this.internal.getFont().fontName;\r\n            fontSize = this.table_font_size || this.internal.getFontSize();\r\n            fontStyle = this.internal.getFont().fontStyle;\r\n            // 1 pixel = 0.264583 mm and 1 mm = 72/25.4 point\r\n            var px2pt = 0.264583 * 72 / 25.4,\r\n                dimensions,\r\n                text;\r\n\r\n            text = document.createElement('font');\r\n            text.id = \"jsPDFCell\";\r\n\r\n            try {\r\n                text.style.fontStyle = fontStyle;\r\n            } catch (e) {\r\n                text.style.fontWeight = fontStyle;\r\n            }\r\n\r\n            text.style.fontName = fontName;\r\n            text.style.fontSize = fontSize + 'pt';\r\n            try {\r\n                text.textContent = txt;\r\n            } catch (e) {\r\n                text.innerText = txt;\r\n            }\r\n\r\n            document.body.appendChild(text);\r\n\r\n            dimensions = { w: (text.offsetWidth + 1) * px2pt, h: (text.offsetHeight + 1) * px2pt };\r\n\r\n            document.body.removeChild(text);\r\n\r\n            return dimensions;\r\n        };\r\n\r\n        jsPDFAPI.cellAddPage = function() {\r\n            var margins = this.margins || NO_MARGINS;\r\n\r\n            this.addPage();\r\n\r\n            setLastCellPosition(margins.left, margins.top, undefined, undefined);\r\n            //setLastCellPosition(undefined, undefined, undefined, undefined, undefined);\r\n            pages += 1;\r\n        };\r\n\r\n        jsPDFAPI.cellInitialize = function() {\r\n            lastCellPos = { x: undefined, y: undefined, w: undefined, h: undefined, ln: undefined };\r\n            pages = 1;\r\n        };\r\n\r\n        jsPDFAPI.cell = function(x, y, w, h, txt, ln, align) {\r\n            var curCell = getLastCellPosition();\r\n            var pgAdded = false;\r\n\r\n            // If this is not the first cell, we must change its position\r\n            if (curCell.ln !== undefined) {\r\n                if (curCell.ln === ln) {\r\n                    //Same line\r\n                    x = curCell.x + curCell.w;\r\n                    y = curCell.y;\r\n                } else {\r\n                    //New line\r\n                    var margins = this.margins || NO_MARGINS;\r\n                    if (curCell.y + curCell.h + h + margin >= this.internal.pageSize.height - margins.bottom) {\r\n                        this.cellAddPage();\r\n                        pgAdded = true;\r\n                        if (this.printHeaders && this.tableHeaderRow) {\r\n                            this.printHeaderRow(ln, true);\r\n                        }\r\n                    }\r\n                    //We ignore the passed y: the lines may have different heights\r\n                    y = getLastCellPosition().y + getLastCellPosition().h;\r\n                    if (pgAdded) y = margin + 10;\r\n                }\r\n            }\r\n\r\n            if (txt[0] !== undefined) {\r\n                if (this.printingHeaderRow) {\r\n                    this.rect(x, y, w, h, 'FD');\r\n                } else {\r\n                    this.rect(x, y, w, h);\r\n                }\r\n                if (align === 'right') {\r\n                    if (!(txt instanceof Array)) {\r\n                        txt = [txt];\r\n                    }\r\n                    for (var i = 0; i < txt.length; i++) {\r\n                        var currentLine = txt[i];\r\n                        var textSize = this.getStringUnitWidth(currentLine) * this.internal.getFontSize();\r\n                        this.text(currentLine, x + w - textSize - padding, y + this.internal.getLineHeight() * (i + 1));\r\n                    }\r\n                } else {\r\n                    this.text(txt, x + padding, y + this.internal.getLineHeight());\r\n                }\r\n            }\r\n            setLastCellPosition(x, y, w, h, ln);\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Return the maximum value from an array\r\n         * @param array\r\n         * @param comparisonFn\r\n         * @returns {*}\r\n         */\r\n        jsPDFAPI.arrayMax = function(array, comparisonFn) {\r\n            var max = array[0],\r\n                i,\r\n                ln,\r\n                item;\r\n\r\n            for (i = 0, ln = array.length; i < ln; i += 1) {\r\n                item = array[i];\r\n\r\n                if (comparisonFn) {\r\n                    if (comparisonFn(max, item) === -1) {\r\n                        max = item;\r\n                    }\r\n                } else {\r\n                    if (item > max) {\r\n                        max = item;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return max;\r\n        };\r\n\r\n        /**\r\n         * Create a table from a set of data.\r\n         * @param {Integer} [x] : left-position for top-left corner of table\r\n         * @param {Integer} [y] top-position for top-left corner of table\r\n         * @param {Object[]} [data] As array of objects containing key-value pairs corresponding to a row of data.\r\n         * @param {String[]} [headers] Omit or null to auto-generate headers at a performance cost\r\n         * @param {Object} [config.printHeaders] True to print column headers at the top of every page\r\n         * @param {Object} [config.autoSize] True to dynamically set the column widths to match the widest cell value\r\n         * @param {Object} [config.margins] margin values for left, top, bottom, and width\r\n         * @param {Object} [config.fontSize] Integer fontSize to use (optional)\r\n         */\r\n\r\n        jsPDFAPI.table = function(x, y, data, headers, config) {\r\n            if (!data) {\r\n                throw 'No data for PDF table';\r\n            }\r\n\r\n            var headerNames = [],\r\n                headerPrompts = [],\r\n                header,\r\n                i,\r\n                ln,\r\n                cln,\r\n                columnMatrix = {},\r\n                columnWidths = {},\r\n                columnData,\r\n                column,\r\n                columnMinWidths = [],\r\n                j,\r\n                tableHeaderConfigs = [],\r\n                model,\r\n                jln,\r\n                func,\r\n\r\n\r\n                //set up defaults. If a value is provided in config, defaults will be overwritten:\r\n                autoSize = false,\r\n                printHeaders = true,\r\n                fontSize = 12,\r\n                margins = NO_MARGINS;\r\n\r\n            margins.width = this.internal.pageSize.width;\r\n\r\n            if (config) {\r\n                //override config defaults if the user has specified non-default behavior:\r\n                if (config.autoSize === true) {\r\n                    autoSize = true;\r\n                }\r\n                if (config.printHeaders === false) {\r\n                    printHeaders = false;\r\n                }\r\n                if (config.fontSize) {\r\n                    fontSize = config.fontSize;\r\n                }\r\n                if (config.css && typeof config.css['font-size'] !== \"undefined\") {\r\n                    fontSize = config.css['font-size'] * 16;\r\n                }\r\n                if (config.margins) {\r\n                    margins = config.margins;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @property {Number} lnMod\r\n             * Keep track of the current line number modifier used when creating cells\r\n             */\r\n            this.lnMod = 0;\r\n            lastCellPos = { x: undefined, y: undefined, w: undefined, h: undefined, ln: undefined }, pages = 1;\r\n\r\n            this.printHeaders = printHeaders;\r\n            this.margins = margins;\r\n            this.setFontSize(fontSize);\r\n            this.table_font_size = fontSize;\r\n\r\n            // Set header values\r\n            if (headers === undefined || headers === null) {\r\n                // No headers defined so we derive from data\r\n                headerNames = Object.keys(data[0]);\r\n            } else if (headers[0] && typeof headers[0] !== 'string') {\r\n                var px2pt = 0.264583 * 72 / 25.4;\r\n\r\n                // Split header configs into names and prompts\r\n                for (i = 0, ln = headers.length; i < ln; i += 1) {\r\n                    header = headers[i];\r\n                    headerNames.push(header.name);\r\n                    headerPrompts.push(header.prompt);\r\n                    columnWidths[header.name] = header.width * px2pt;\r\n                }\r\n            } else {\r\n                headerNames = headers;\r\n            }\r\n\r\n            if (autoSize) {\r\n                // Create a matrix of columns e.g., {column_title: [row1_Record, row2_Record]}\r\n                func = function func(rec) {\r\n                    return rec[header];\r\n                };\r\n\r\n                for (i = 0, ln = headerNames.length; i < ln; i += 1) {\r\n                    header = headerNames[i];\r\n\r\n                    columnMatrix[header] = data.map(func);\r\n\r\n                    // get header width\r\n                    columnMinWidths.push(this.getTextDimensions(headerPrompts[i] || header).w);\r\n                    column = columnMatrix[header];\r\n\r\n                    // get cell widths\r\n                    for (j = 0, cln = column.length; j < cln; j += 1) {\r\n                        columnData = column[j];\r\n                        columnMinWidths.push(this.getTextDimensions(columnData).w);\r\n                    }\r\n\r\n                    // get final column width\r\n                    columnWidths[header] = jsPDFAPI.arrayMax(columnMinWidths);\r\n\r\n                    //have to reset\r\n                    columnMinWidths = [];\r\n                }\r\n            }\r\n\r\n            // -- Construct the table\r\n\r\n            if (printHeaders) {\r\n                var lineHeight = this.calculateLineHeight(headerNames, columnWidths, headerPrompts.length ? headerPrompts : headerNames);\r\n\r\n                // Construct the header row\r\n                for (i = 0, ln = headerNames.length; i < ln; i += 1) {\r\n                    header = headerNames[i];\r\n                    tableHeaderConfigs.push([x, y, columnWidths[header], lineHeight, String(headerPrompts.length ? headerPrompts[i] : header)]);\r\n                }\r\n\r\n                // Store the table header config\r\n                this.setTableHeaderRow(tableHeaderConfigs);\r\n\r\n                // Print the header for the start of the table\r\n                this.printHeaderRow(1, false);\r\n            }\r\n\r\n            // Construct the data rows\r\n            for (i = 0, ln = data.length; i < ln; i += 1) {\r\n                var lineHeight;\r\n                model = data[i];\r\n                lineHeight = this.calculateLineHeight(headerNames, columnWidths, model);\r\n\r\n                for (j = 0, jln = headerNames.length; j < jln; j += 1) {\r\n                    header = headerNames[j];\r\n                    this.cell(x, y, columnWidths[header], lineHeight, model[header], i + 2, header.align);\r\n                }\r\n            }\r\n            this.lastCellPos = lastCellPos;\r\n            this.table_x = x;\r\n            this.table_y = y;\r\n            return this;\r\n        };\r\n        /**\r\n         * Calculate the height for containing the highest column\r\n         * @param {String[]} headerNames is the header, used as keys to the data\r\n         * @param {Integer[]} columnWidths is size of each column\r\n         * @param {Object[]} model is the line of data we want to calculate the height of\r\n         */\r\n        jsPDFAPI.calculateLineHeight = function(headerNames, columnWidths, model) {\r\n            var header,\r\n                lineHeight = 0;\r\n            for (var j = 0; j < headerNames.length; j++) {\r\n                header = headerNames[j];\r\n                model[header] = this.splitTextToSize(String(model[header]), columnWidths[header] - padding);\r\n                var h = this.internal.getLineHeight() * model[header].length + padding;\r\n                if (h > lineHeight) lineHeight = h;\r\n            }\r\n            return lineHeight;\r\n        };\r\n\r\n        /**\r\n         * Store the config for outputting a table header\r\n         * @param {Object[]} config\r\n         * An array of cell configs that would define a header row: Each config matches the config used by jsPDFAPI.cell\r\n         * except the ln parameter is excluded\r\n         */\r\n        jsPDFAPI.setTableHeaderRow = function(config) {\r\n            this.tableHeaderRow = config;\r\n        };\r\n\r\n        /**\r\n         * Output the store header row\r\n         * @param lineNumber The line number to output the header at\r\n         */\r\n        jsPDFAPI.printHeaderRow = function(lineNumber, new_page) {\r\n            if (!this.tableHeaderRow) {\r\n                throw 'Property tableHeaderRow does not exist.';\r\n            }\r\n\r\n            var tableHeaderCell, tmpArray, i, ln;\r\n\r\n            this.printingHeaderRow = true;\r\n            if (headerFunction !== undefined) {\r\n                var position = headerFunction(this, pages);\r\n                setLastCellPosition(position[0], position[1], position[2], position[3], -1);\r\n            }\r\n            this.setFontStyle('bold');\r\n            var tempHeaderConf = [];\r\n            for (i = 0, ln = this.tableHeaderRow.length; i < ln; i += 1) {\r\n                this.setFillColor(200, 200, 200);\r\n\r\n                tableHeaderCell = this.tableHeaderRow[i];\r\n                if (new_page) {\r\n                    this.margins.top = -50;\r\n                    tableHeaderCell[1] = this.margins && this.margins.top || 0;\r\n                    tempHeaderConf.push(tableHeaderCell);\r\n                }\r\n                tmpArray = [].concat(tableHeaderCell);\r\n                this.cell.apply(this, tmpArray.concat(lineNumber));\r\n            }\r\n            if (tempHeaderConf.length > 0) {\r\n                this.setTableHeaderRow(tempHeaderConf);\r\n            }\r\n            this.setFontStyle('normal');\r\n            this.printingHeaderRow = false;\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    /** ====================================================================\r\n     * jsPDF JavaScript plugin\r\n     * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\r\n     *\r\n     *\r\n     * ====================================================================\r\n     */\r\n\r\n    /*global jsPDF */\r\n\r\n    (function(jsPDFAPI) {\r\n        'use strict';\r\n\r\n        var jsNamesObj, jsJsObj, text;\r\n        jsPDFAPI.addJS = function(txt) {\r\n            text = txt;\r\n            this.internal.events.subscribe('postPutResources', function(txt) {\r\n                jsNamesObj = this.internal.newObject();\r\n                this.internal.write('<< /Names [(EmbeddedJS) ' + (jsNamesObj + 1) + ' 0 R] >>', 'endobj');\r\n                jsJsObj = this.internal.newObject();\r\n                this.internal.write('<< /S /JavaScript /JS (', text, ') >>', 'endobj');\r\n            });\r\n            this.internal.events.subscribe('putCatalog', function() {\r\n                if (jsNamesObj !== undefined && jsJsObj !== undefined) {\r\n                    this.internal.write('/Names <</JavaScript ' + jsNamesObj + ' 0 R>>');\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    /**\r\n     * jsPDF Outline PlugIn\r\n     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\r\n     *\r\n     * Licensed under the MIT License.\r\n     * http://opensource.org/licenses/mit-license\r\n     */\r\n\r\n    /**\r\n     * Generates a PDF Outline\r\n     */\r\n    ;\r\n    (function(jsPDFAPI) {\r\n        'use strict';\r\n\r\n        jsPDFAPI.events.push(['postPutResources', function() {\r\n            var pdf = this;\r\n            var rx = /^(\\d+) 0 obj$/;\r\n\r\n            // Write action goto objects for each page\r\n            // this.outline.destsGoto = [];\r\n            // for (var i = 0; i < totalPages; i++) {\r\n            // var id = pdf.internal.newObject();\r\n            // this.outline.destsGoto.push(id);\r\n            // pdf.internal.write(\"<</D[\" + (i * 2 + 3) + \" 0 R /XYZ null\r\n            // null null]/S/GoTo>> endobj\");\r\n            // }\r\n            //\r\n            // for (var i = 0; i < dests.length; i++) {\r\n            // pdf.internal.write(\"(page_\" + (i + 1) + \")\" + dests[i] + \" 0\r\n            // R\");\r\n            // }\r\n            //\r\n            if (this.outline.root.children.length > 0) {\r\n                var lines = pdf.outline.render().split(/\\r\\n/);\r\n                for (var i = 0; i < lines.length; i++) {\r\n                    var line = lines[i];\r\n                    var m = rx.exec(line);\r\n                    if (m != null) {\r\n                        var oid = m[1];\r\n                        pdf.internal.newObjectDeferredBegin(oid);\r\n                    }\r\n                    pdf.internal.write(line);\r\n                }\r\n            }\r\n\r\n            // This code will write named destination for each page reference\r\n            // (page_1, etc)\r\n            if (this.outline.createNamedDestinations) {\r\n                var totalPages = this.internal.pages.length;\r\n                // WARNING: this assumes jsPDF starts on page 3 and pageIDs\r\n                // follow 5, 7, 9, etc\r\n                // Write destination objects for each page\r\n                var dests = [];\r\n                for (var i = 0; i < totalPages; i++) {\r\n                    var id = pdf.internal.newObject();\r\n                    dests.push(id);\r\n                    var info = pdf.internal.getPageInfo(i + 1);\r\n                    pdf.internal.write(\"<< /D[\" + info.objId + \" 0 R /XYZ null null null]>> endobj\");\r\n                }\r\n\r\n                // assign a name for each destination\r\n                var names2Oid = pdf.internal.newObject();\r\n                pdf.internal.write('<< /Names [ ');\r\n                for (var i = 0; i < dests.length; i++) {\r\n                    pdf.internal.write(\"(page_\" + (i + 1) + \")\" + dests[i] + \" 0 R\");\r\n                }\r\n                pdf.internal.write(' ] >>', 'endobj');\r\n\r\n                // var kids = pdf.internal.newObject();\r\n                // pdf.internal.write('<< /Kids [ ' + names2Oid + ' 0 R');\r\n                // pdf.internal.write(' ] >>', 'endobj');\r\n\r\n                var namesOid = pdf.internal.newObject();\r\n                pdf.internal.write('<< /Dests ' + names2Oid + \" 0 R\");\r\n                pdf.internal.write('>>', 'endobj');\r\n            }\r\n        }]);\r\n\r\n        jsPDFAPI.events.push(['putCatalog', function() {\r\n            var pdf = this;\r\n            if (pdf.outline.root.children.length > 0) {\r\n                pdf.internal.write(\"/Outlines\", this.outline.makeRef(this.outline.root));\r\n                if (this.outline.createNamedDestinations) {\r\n                    pdf.internal.write(\"/Names \" + namesOid + \" 0 R\");\r\n                }\r\n                // Open with Bookmarks showing\r\n                // pdf.internal.write(\"/PageMode /UseOutlines\");\r\n            }\r\n        }]);\r\n\r\n        jsPDFAPI.events.push(['initialized', function() {\r\n            var pdf = this;\r\n\r\n            pdf.outline = {\r\n                createNamedDestinations: false,\r\n                root: {\r\n                    children: []\r\n                }\r\n            };\r\n\r\n            var namesOid;\r\n            var destsGoto = [];\r\n\r\n            /**\r\n             * Options: pageNumber\r\n             */\r\n            pdf.outline.add = function(parent, title, options) {\r\n                var item = {\r\n                    title: title,\r\n                    options: options,\r\n                    children: []\r\n                };\r\n                if (parent == null) {\r\n                    parent = this.root;\r\n                }\r\n                parent.children.push(item);\r\n                return item;\r\n            };\r\n\r\n            pdf.outline.render = function() {\r\n                this.ctx = {};\r\n                this.ctx.val = '';\r\n                this.ctx.pdf = pdf;\r\n\r\n                this.genIds_r(this.root);\r\n                this.renderRoot(this.root);\r\n                this.renderItems(this.root);\r\n\r\n                return this.ctx.val;\r\n            };\r\n\r\n            pdf.outline.genIds_r = function(node) {\r\n                node.id = pdf.internal.newObjectDeferred();\r\n                for (var i = 0; i < node.children.length; i++) {\r\n                    this.genIds_r(node.children[i]);\r\n                }\r\n            };\r\n\r\n            pdf.outline.renderRoot = function(node) {\r\n                this.objStart(node);\r\n                this.line('/Type /Outlines');\r\n                if (node.children.length > 0) {\r\n                    this.line('/First ' + this.makeRef(node.children[0]));\r\n                    this.line('/Last ' + this.makeRef(node.children[node.children.length - 1]));\r\n                }\r\n                this.line('/Count ' + this.count_r({\r\n                    count: 0\r\n                }, node));\r\n                this.objEnd();\r\n            };\r\n\r\n            pdf.outline.renderItems = function(node) {\r\n                for (var i = 0; i < node.children.length; i++) {\r\n                    var item = node.children[i];\r\n                    this.objStart(item);\r\n\r\n                    this.line('/Title ' + this.makeString(item.title));\r\n\r\n                    this.line('/Parent ' + this.makeRef(node));\r\n                    if (i > 0) {\r\n                        this.line('/Prev ' + this.makeRef(node.children[i - 1]));\r\n                    }\r\n                    if (i < node.children.length - 1) {\r\n                        this.line('/Next ' + this.makeRef(node.children[i + 1]));\r\n                    }\r\n                    if (item.children.length > 0) {\r\n                        this.line('/First ' + this.makeRef(item.children[0]));\r\n                        this.line('/Last ' + this.makeRef(item.children[item.children.length - 1]));\r\n                    }\r\n\r\n                    var count = this.count = this.count_r({\r\n                        count: 0\r\n                    }, item);\r\n                    if (count > 0) {\r\n                        this.line('/Count ' + count);\r\n                    }\r\n\r\n                    if (item.options) {\r\n                        if (item.options.pageNumber) {\r\n                            // Explicit Destination\r\n                            //WARNING this assumes page ids are 3,5,7, etc.\r\n                            var info = pdf.internal.getPageInfo(item.options.pageNumber);\r\n                            this.line('/Dest ' + '[' + info.objId + ' 0 R /XYZ 0 ' + this.ctx.pdf.internal.pageSize.height + ' 0]');\r\n                            // this line does not work on all clients (pageNumber instead of page ref)\r\n                            //this.line('/Dest ' + '[' + (item.options.pageNumber - 1) + ' /XYZ 0 ' + this.ctx.pdf.internal.pageSize.height + ' 0]');\r\n\r\n                            // Named Destination\r\n                            // this.line('/Dest (page_' + (item.options.pageNumber) + ')');\r\n\r\n                            // Action Destination\r\n                            // var id = pdf.internal.newObject();\r\n                            // pdf.internal.write('<</D[' + (item.options.pageNumber - 1) + ' /XYZ null null null]/S/GoTo>> endobj');\r\n                            // this.line('/A ' + id + ' 0 R' );\r\n                        }\r\n                    }\r\n                    this.objEnd();\r\n                }\r\n                for (var i = 0; i < node.children.length; i++) {\r\n                    var item = node.children[i];\r\n                    this.renderItems(item);\r\n                }\r\n            };\r\n\r\n            pdf.outline.line = function(text) {\r\n                this.ctx.val += text + '\\r\\n';\r\n            };\r\n\r\n            pdf.outline.makeRef = function(node) {\r\n                return node.id + ' 0 R';\r\n            };\r\n\r\n            pdf.outline.makeString = function(val) {\r\n                return '(' + pdf.internal.pdfEscape(val) + ')';\r\n            };\r\n\r\n            pdf.outline.objStart = function(node) {\r\n                this.ctx.val += '\\r\\n' + node.id + ' 0 obj' + '\\r\\n<<\\r\\n';\r\n            };\r\n\r\n            pdf.outline.objEnd = function(node) {\r\n                this.ctx.val += '>> \\r\\n' + 'endobj' + '\\r\\n';\r\n            };\r\n\r\n            pdf.outline.count_r = function(ctx, node) {\r\n                for (var i = 0; i < node.children.length; i++) {\r\n                    ctx.count++;\r\n                    this.count_r(ctx, node.children[i]);\r\n                }\r\n                return ctx.count;\r\n            };\r\n        }]);\r\n\r\n        return this;\r\n    })(jsPDF.API);\r\n\r\n    /**@preserve\r\n     *  ====================================================================\r\n     * jsPDF PNG PlugIn\r\n     * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb\r\n     *\r\n     *\r\n     * ====================================================================\r\n     */\r\n\r\n    (function(jsPDFAPI) {\r\n        'use strict';\r\n\r\n        /*\r\n      * @see http://www.w3.org/TR/PNG-Chunks.html\r\n      *\r\n      Color    Allowed      Interpretation\r\n      Type     Bit Depths\r\n            0       1,2,4,8,16  Each pixel is a grayscale sample.\r\n            2       8,16        Each pixel is an R,G,B triple.\r\n            3       1,2,4,8     Each pixel is a palette index;\r\n                            a PLTE chunk must appear.\r\n            4       8,16        Each pixel is a grayscale sample,\r\n                            followed by an alpha sample.\r\n            6       8,16        Each pixel is an R,G,B triple,\r\n                            followed by an alpha sample.\r\n     */\r\n\r\n        /*\r\n      * PNG filter method types\r\n      *\r\n      * @see http://www.w3.org/TR/PNG-Filters.html\r\n      * @see http://www.libpng.org/pub/png/book/chapter09.html\r\n      *\r\n      * This is what the value 'Predictor' in decode params relates to\r\n      *\r\n      * 15 is \"optimal prediction\", which means the prediction algorithm can change from line to line.\r\n      * In that case, you actually have to read the first byte off each line for the prediction algorthim (which should be 0-4, corresponding to PDF 10-14) and select the appropriate unprediction algorithm based on that byte.\r\n      *\r\n        0       None\r\n        1       Sub\r\n        2       Up\r\n        3       Average\r\n        4       Paeth\r\n      */\r\n\r\n        var doesNotHavePngJS = function doesNotHavePngJS() {\r\n                return typeof PNG !== 'function' || typeof FlateStream !== 'function';\r\n            },\r\n            canCompress = function canCompress(value) {\r\n                return value !== jsPDFAPI.image_compression.NONE && hasCompressionJS();\r\n            },\r\n            hasCompressionJS = function hasCompressionJS() {\r\n                var inst = typeof Deflater === 'function';\r\n                if (!inst) throw new Error(\"requires deflate.js for compression\");\r\n                return inst;\r\n            },\r\n            compressBytes = function compressBytes(bytes, lineLength, colorsPerPixel, compression) {\r\n\r\n                var level = 5,\r\n                    filter_method = filterUp;\r\n\r\n                switch (compression) {\r\n\r\n                    case jsPDFAPI.image_compression.FAST:\r\n\r\n                        level = 3;\r\n                        filter_method = filterSub;\r\n                        break;\r\n\r\n                    case jsPDFAPI.image_compression.MEDIUM:\r\n\r\n                        level = 6;\r\n                        filter_method = filterAverage;\r\n                        break;\r\n\r\n                    case jsPDFAPI.image_compression.SLOW:\r\n\r\n                        level = 9;\r\n                        filter_method = filterPaeth; //uses to sum to choose best filter for each line\r\n                        break;\r\n                }\r\n\r\n                bytes = applyPngFilterMethod(bytes, lineLength, colorsPerPixel, filter_method);\r\n\r\n                var header = new Uint8Array(createZlibHeader(level));\r\n                var checksum = adler32(bytes);\r\n\r\n                var deflate = new Deflater(level);\r\n                var a = deflate.append(bytes);\r\n                var cBytes = deflate.flush();\r\n\r\n                var len = header.length + a.length + cBytes.length;\r\n\r\n                var cmpd = new Uint8Array(len + 4);\r\n                cmpd.set(header);\r\n                cmpd.set(a, header.length);\r\n                cmpd.set(cBytes, header.length + a.length);\r\n\r\n                cmpd[len++] = checksum >>> 24 & 0xff;\r\n                cmpd[len++] = checksum >>> 16 & 0xff;\r\n                cmpd[len++] = checksum >>> 8 & 0xff;\r\n                cmpd[len++] = checksum & 0xff;\r\n\r\n                return jsPDFAPI.arrayBufferToBinaryString(cmpd);\r\n            },\r\n            createZlibHeader = function createZlibHeader(bytes, level) {\r\n                /*\r\n                 * @see http://www.ietf.org/rfc/rfc1950.txt for zlib header\r\n                 */\r\n                var cm = 8;\r\n                var cinfo = Math.LOG2E * Math.log(0x8000) - 8;\r\n                var cmf = cinfo << 4 | cm;\r\n\r\n                var hdr = cmf << 8;\r\n                var flevel = Math.min(3, (level - 1 & 0xff) >> 1);\r\n\r\n                hdr |= flevel << 6;\r\n                hdr |= 0; //FDICT\r\n                hdr += 31 - hdr % 31;\r\n\r\n                return [cmf, hdr & 0xff & 0xff];\r\n            },\r\n            adler32 = function adler32(array, param) {\r\n                var adler = 1;\r\n                var s1 = adler & 0xffff,\r\n                    s2 = adler >>> 16 & 0xffff;\r\n                var len = array.length;\r\n                var tlen;\r\n                var i = 0;\r\n\r\n                while (len > 0) {\r\n                    tlen = len > param ? param : len;\r\n                    len -= tlen;\r\n                    do {\r\n                        s1 += array[i++];\r\n                        s2 += s1;\r\n                    } while (--tlen);\r\n\r\n                    s1 %= 65521;\r\n                    s2 %= 65521;\r\n                }\r\n\r\n                return (s2 << 16 | s1) >>> 0;\r\n            },\r\n            applyPngFilterMethod = function applyPngFilterMethod(bytes, lineLength, colorsPerPixel, filter_method) {\r\n                var lines = bytes.length / lineLength,\r\n                    result = new Uint8Array(bytes.length + lines),\r\n                    filter_methods = getFilterMethods(),\r\n                    i = 0,\r\n                    line,\r\n                    prevLine,\r\n                    offset;\r\n\r\n                for (; i < lines; i++) {\r\n                    offset = i * lineLength;\r\n                    line = bytes.subarray(offset, offset + lineLength);\r\n\r\n                    if (filter_method) {\r\n                        result.set(filter_method(line, colorsPerPixel, prevLine), offset + i);\r\n                    } else {\r\n\r\n                        var j = 0,\r\n                            len = filter_methods.length,\r\n                            results = [];\r\n\r\n                        for (; j < len; j++) {\r\n                            results[j] = filter_methods[j](line, colorsPerPixel, prevLine);\r\n                        }\r\n                        var ind = getIndexOfSmallestSum(results.concat());\r\n\r\n                        result.set(results[ind], offset + i);\r\n                    }\r\n\r\n                    prevLine = line;\r\n                }\r\n\r\n                return result;\r\n            },\r\n            filterNone = function filterNone(line, colorsPerPixel, prevLine) {\r\n                /*var result = new Uint8Array(line.length + 1);\r\n          result[0] = 0;\r\n          result.set(line, 1);*/\r\n\r\n                var result = Array.apply([], line);\r\n                result.unshift(0);\r\n\r\n                return result;\r\n            },\r\n            filterSub = function filterSub(line, colorsPerPixel, prevLine) {\r\n                var result = [],\r\n                    i = 0,\r\n                    len = line.length,\r\n                    left;\r\n\r\n                result[0] = 1;\r\n\r\n                for (; i < len; i++) {\r\n                    left = line[i - colorsPerPixel] || 0;\r\n                    result[i + 1] = line[i] - left + 0x0100 & 0xff;\r\n                }\r\n\r\n                return result;\r\n            },\r\n            filterUp = function filterUp(line, colorsPerPixel, prevLine) {\r\n                var result = [],\r\n                    i = 0,\r\n                    len = line.length,\r\n                    up;\r\n\r\n                result[0] = 2;\r\n\r\n                for (; i < len; i++) {\r\n                    up = prevLine && prevLine[i] || 0;\r\n                    result[i + 1] = line[i] - up + 0x0100 & 0xff;\r\n                }\r\n\r\n                return result;\r\n            },\r\n            filterAverage = function filterAverage(line, colorsPerPixel, prevLine) {\r\n                var result = [],\r\n                    i = 0,\r\n                    len = line.length,\r\n                    left,\r\n                    up;\r\n\r\n                result[0] = 3;\r\n\r\n                for (; i < len; i++) {\r\n                    left = line[i - colorsPerPixel] || 0;\r\n                    up = prevLine && prevLine[i] || 0;\r\n                    result[i + 1] = line[i] + 0x0100 - (left + up >>> 1) & 0xff;\r\n                }\r\n\r\n                return result;\r\n            },\r\n            filterPaeth = function filterPaeth(line, colorsPerPixel, prevLine) {\r\n                var result = [],\r\n                    i = 0,\r\n                    len = line.length,\r\n                    left,\r\n                    up,\r\n                    upLeft,\r\n                    paeth;\r\n\r\n                result[0] = 4;\r\n\r\n                for (; i < len; i++) {\r\n                    left = line[i - colorsPerPixel] || 0;\r\n                    up = prevLine && prevLine[i] || 0;\r\n                    upLeft = prevLine && prevLine[i - colorsPerPixel] || 0;\r\n                    paeth = paethPredictor(left, up, upLeft);\r\n                    result[i + 1] = line[i] - paeth + 0x0100 & 0xff;\r\n                }\r\n\r\n                return result;\r\n            },\r\n            paethPredictor = function paethPredictor(left, up, upLeft) {\r\n\r\n                var p = left + up - upLeft,\r\n                    pLeft = Math.abs(p - left),\r\n                    pUp = Math.abs(p - up),\r\n                    pUpLeft = Math.abs(p - upLeft);\r\n\r\n                return pLeft <= pUp && pLeft <= pUpLeft ? left : pUp <= pUpLeft ? up : upLeft;\r\n            },\r\n            getFilterMethods = function getFilterMethods() {\r\n                return [filterNone, filterSub, filterUp, filterAverage, filterPaeth];\r\n            },\r\n            getIndexOfSmallestSum = function getIndexOfSmallestSum(arrays) {\r\n                var i = 0,\r\n                    len = arrays.length,\r\n                    sum,\r\n                    min,\r\n                    ind;\r\n\r\n                while (i < len) {\r\n                    sum = absSum(arrays[i].slice(1));\r\n\r\n                    if (sum < min || !min) {\r\n                        min = sum;\r\n                        ind = i;\r\n                    }\r\n\r\n                    i++;\r\n                }\r\n\r\n                return ind;\r\n            },\r\n            absSum = function absSum(array) {\r\n                var i = 0,\r\n                    len = array.length,\r\n                    sum = 0;\r\n\r\n                while (i < len) {\r\n                    sum += Math.abs(array[i++]);\r\n                }\r\n                return sum;\r\n            },\r\n            getPredictorFromCompression = function getPredictorFromCompression(compression) {\r\n                var predictor;\r\n                switch (compression) {\r\n                    case jsPDFAPI.image_compression.FAST:\r\n                        predictor = 11;\r\n                        break;\r\n\r\n                    case jsPDFAPI.image_compression.MEDIUM:\r\n                        predictor = 13;\r\n                        break;\r\n\r\n                    case jsPDFAPI.image_compression.SLOW:\r\n                        predictor = 14;\r\n                        break;\r\n                }\r\n                return predictor;\r\n            },\r\n            logImg = function logImg(img) {\r\n                console.log(\"width: \" + img.width);\r\n                console.log(\"height: \" + img.height);\r\n                console.log(\"bits: \" + img.bits);\r\n                console.log(\"colorType: \" + img.colorType);\r\n                console.log(\"transparency:\");\r\n                console.log(img.transparency);\r\n                console.log(\"text:\");\r\n                console.log(img.text);\r\n                console.log(\"compressionMethod: \" + img.compressionMethod);\r\n                console.log(\"filterMethod: \" + img.filterMethod);\r\n                console.log(\"interlaceMethod: \" + img.interlaceMethod);\r\n                console.log(\"imgData:\");\r\n                console.log(img.imgData);\r\n                console.log(\"palette:\");\r\n                console.log(img.palette);\r\n                console.log(\"colors: \" + img.colors);\r\n                console.log(\"colorSpace: \" + img.colorSpace);\r\n                console.log(\"pixelBitlength: \" + img.pixelBitlength);\r\n                console.log(\"hasAlphaChannel: \" + img.hasAlphaChannel);\r\n            };\r\n\r\n        jsPDFAPI.processPNG = function(imageData, imageIndex, alias, compression, dataAsBinaryString) {\r\n            'use strict';\r\n\r\n            var colorSpace = this.color_spaces.DEVICE_RGB,\r\n                decode = this.decode.FLATE_DECODE,\r\n                bpc = 8,\r\n                img,\r\n                dp,\r\n                trns,\r\n                colors,\r\n                pal,\r\n                smask;\r\n\r\n            /*\tif(this.isString(imageData)) {\r\n              }*/\r\n\r\n            if (this.isArrayBuffer(imageData)) imageData = new Uint8Array(imageData);\r\n\r\n            if (this.isArrayBufferView(imageData)) {\r\n\r\n                if (doesNotHavePngJS()) throw new Error(\"PNG support requires png.js and zlib.js\");\r\n\r\n                img = new PNG(imageData);\r\n                imageData = img.imgData;\r\n                bpc = img.bits;\r\n                colorSpace = img.colorSpace;\r\n                colors = img.colors;\r\n\r\n                //logImg(img);\r\n\r\n                /*\r\n                 * colorType 6 - Each pixel is an R,G,B triple, followed by an alpha sample.\r\n                 *\r\n                 * colorType 4 - Each pixel is a grayscale sample, followed by an alpha sample.\r\n                 *\r\n                 * Extract alpha to create two separate images, using the alpha as a sMask\r\n                 */\r\n                if ([4, 6].indexOf(img.colorType) !== -1) {\r\n\r\n                    /*\r\n                     * processes 8 bit RGBA and grayscale + alpha images\r\n                     */\r\n                    if (img.bits === 8) {\r\n\r\n                        var pixels = img.pixelBitlength == 32 ? new Uint32Array(img.decodePixels().buffer) : img.pixelBitlength == 16 ? new Uint16Array(img.decodePixels().buffer) : new Uint8Array(img.decodePixels().buffer),\r\n                            len = pixels.length,\r\n                            imgData = new Uint8Array(len * img.colors),\r\n                            alphaData = new Uint8Array(len),\r\n                            pDiff = img.pixelBitlength - img.bits,\r\n                            i = 0,\r\n                            n = 0,\r\n                            pixel,\r\n                            pbl;\r\n\r\n                        for (; i < len; i++) {\r\n                            pixel = pixels[i];\r\n                            pbl = 0;\r\n\r\n                            while (pbl < pDiff) {\r\n\r\n                                imgData[n++] = pixel >>> pbl & 0xff;\r\n                                pbl = pbl + img.bits;\r\n                            }\r\n\r\n                            alphaData[i] = pixel >>> pbl & 0xff;\r\n                        }\r\n                    }\r\n\r\n                    /*\r\n                     * processes 16 bit RGBA and grayscale + alpha images\r\n                     */\r\n                    if (img.bits === 16) {\r\n\r\n                        var pixels = new Uint32Array(img.decodePixels().buffer),\r\n                            len = pixels.length,\r\n                            imgData = new Uint8Array(len * (32 / img.pixelBitlength) * img.colors),\r\n                            alphaData = new Uint8Array(len * (32 / img.pixelBitlength)),\r\n                            hasColors = img.colors > 1,\r\n                            i = 0,\r\n                            n = 0,\r\n                            a = 0,\r\n                            pixel;\r\n\r\n                        while (i < len) {\r\n                            pixel = pixels[i++];\r\n\r\n                            imgData[n++] = pixel >>> 0 & 0xFF;\r\n\r\n                            if (hasColors) {\r\n                                imgData[n++] = pixel >>> 16 & 0xFF;\r\n\r\n                                pixel = pixels[i++];\r\n                                imgData[n++] = pixel >>> 0 & 0xFF;\r\n                            }\r\n\r\n                            alphaData[a++] = pixel >>> 16 & 0xFF;\r\n                        }\r\n\r\n                        bpc = 8;\r\n                    }\r\n\r\n                    if (canCompress(compression)) {\r\n\r\n                        imageData = compressBytes(imgData, img.width * img.colors, img.colors, compression);\r\n                        smask = compressBytes(alphaData, img.width, 1, compression);\r\n                    } else {\r\n\r\n                        imageData = imgData;\r\n                        smask = alphaData;\r\n                        decode = null;\r\n                    }\r\n                }\r\n\r\n                /*\r\n                 * Indexed png. Each pixel is a palette index.\r\n                 */\r\n                if (img.colorType === 3) {\r\n\r\n                    colorSpace = this.color_spaces.INDEXED;\r\n                    pal = img.palette;\r\n\r\n                    if (img.transparency.indexed) {\r\n\r\n                        var trans = img.transparency.indexed;\r\n\r\n                        var total = 0,\r\n                            i = 0,\r\n                            len = trans.length;\r\n\r\n                        for (; i < len; ++i) {\r\n                            total += trans[i];\r\n                        }\r\n                        total = total / 255;\r\n\r\n                        /*\r\n                         * a single color is specified as 100% transparent (0),\r\n                         * so we set trns to use a /Mask with that index\r\n                         */\r\n                        if (total === len - 1 && trans.indexOf(0) !== -1) {\r\n                            trns = [trans.indexOf(0)];\r\n\r\n                            /*\r\n                             * there's more than one colour within the palette that specifies\r\n                             * a transparency value less than 255, so we unroll the pixels to create an image sMask\r\n                             */\r\n                        } else if (total !== len) {\r\n\r\n                            var pixels = img.decodePixels(),\r\n                                alphaData = new Uint8Array(pixels.length),\r\n                                i = 0,\r\n                                len = pixels.length;\r\n\r\n                            for (; i < len; i++) {\r\n                                alphaData[i] = trans[pixels[i]];\r\n                            }\r\n                            smask = compressBytes(alphaData, img.width, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var predictor = getPredictorFromCompression(compression);\r\n\r\n                if (decode === this.decode.FLATE_DECODE) dp = '/Predictor ' + predictor + ' /Colors ' + colors + ' /BitsPerComponent ' + bpc + ' /Columns ' + img.width;\r\n                else\r\n                //remove 'Predictor' as it applies to the type of png filter applied to its IDAT - we only apply with compression\r\n                    dp = '/Colors ' + colors + ' /BitsPerComponent ' + bpc + ' /Columns ' + img.width;\r\n\r\n                if (this.isArrayBuffer(imageData) || this.isArrayBufferView(imageData)) imageData = this.arrayBufferToBinaryString(imageData);\r\n\r\n                if (smask && this.isArrayBuffer(smask) || this.isArrayBufferView(smask)) smask = this.arrayBufferToBinaryString(smask);\r\n\r\n                return this.createImageInfo(imageData, img.width, img.height, colorSpace, bpc, decode, imageIndex, alias, dp, trns, pal, smask, predictor);\r\n            }\r\n\r\n            throw new Error(\"Unsupported PNG image data, try using JPEG instead.\");\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    /** @preserve\r\n     * jsPDF addImage plugin\r\n     * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/\r\n     *               2013 Chris Dowling, https://github.com/gingerchris\r\n     *               2013 Trinh Ho, https://github.com/ineedfat\r\n     *               2013 Edwin Alejandro Perez, https://github.com/eaparango\r\n     *               2013 Norah Smith, https://github.com/burnburnrocket\r\n     *               2014 Diego Casorran, https://github.com/diegocr\r\n     *               2014 James Robb, https://github.com/jamesbrobb\r\n     *\r\n     *\r\n     */\r\n    (function(jsPDFAPI) {\r\n\r\n        var namespace = 'addImage_';\r\n\r\n        var imageFileTypeHeaders = {\r\n            PNG: [\r\n                [0x89, 0x50, 0x4e, 0x47]\r\n            ],\r\n            TIFF: [\r\n                [0x4D, 0x4D, 0x00, 0x2A], //Motorola\r\n                [0x49, 0x49, 0x2A, 0x00] //Intel\r\n            ],\r\n            JPEG: [\r\n                [0xFF, 0xD8, 0xFF, 0xE0, undefined, undefined, 0x4A, 0x46, 0x49, 0x46, 0x00], //JFIF\r\n                [0xFF, 0xD8, 0xFF, 0xE1, undefined, undefined, 0x45, 0x78, 0x69, 0x66, 0x00, 0x00] //Exif\r\n            ],\r\n            JPEG2000: [\r\n                [0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20]\r\n            ],\r\n            GIF87a: [\r\n                [0x47, 0x49, 0x46, 0x38, 0x37, 0x61]\r\n            ],\r\n            GIF89a: [\r\n                [0x47, 0x49, 0x46, 0x38, 0x39, 0x61]\r\n            ],\r\n            BMP: [\r\n                    [0x42, 0x4D], //BM - Windows 3.1x, 95, NT, ... etc.\r\n                    [0x42, 0x41], //BA - OS/2 struct bitmap array\r\n                    [0x43, 0x49], //CI - OS/2 struct color icon\r\n                    [0x43, 0x50], //CP - OS/2 const color pointer\r\n                    [0x49, 0x43], //IC - OS/2 struct icon\r\n                    [0x50, 0x54] //PT - OS/2 pointer\r\n                ]\r\n                /**\r\n                 * Recognize filetype of Image by magic-bytes\r\n                 *\r\n                 * https://en.wikipedia.org/wiki/List_of_file_signatures\r\n                 *\r\n                 * @name getImageFileTypeByImageData\r\n                 * @public\r\n                 * @function\r\n                 * @param {String} imageData as base64 encoded DataUrl\r\n                 * @param {String} format of file if filetype-recognition fails, e.g. 'JPEG'\r\n                 *\r\n                 * @returns {String} filetype of Image\r\n                 * @methodOf jsPDF#\r\n                 */\r\n        };\r\n        jsPDFAPI.getImageFileTypeByImageData = function(imageData, fallbackFormat) {\r\n            fallbackFormat = fallbackFormat || 'UNKNOWN';\r\n            var i;\r\n            var j;\r\n            var result = 'UNKNOWN';\r\n            var headerSchemata;\r\n            var compareResult;\r\n            var fileType;\r\n\r\n            for (fileType in imageFileTypeHeaders) {\r\n                headerSchemata = imageFileTypeHeaders[fileType];\r\n                for (i = 0; i < headerSchemata.length; i += 1) {\r\n                    compareResult = true;\r\n                    for (j = 0; j < headerSchemata[i].length; j += 1) {\r\n                        if (headerSchemata[i][j] === undefined) {\r\n                            continue;\r\n                        }\r\n                        if (headerSchemata[i][j] !== imageData.charCodeAt(j)) {\r\n                            compareResult = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (compareResult === true) {\r\n                        result = fileType;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (result === 'UNKOWN' && fallbackFormat !== 'UNKNOWN') {\r\n                console.warn('FileType of Image not recognized. Processing image as \"' + fallbackFormat + '\".');\r\n                result = fallbackFormat;\r\n            }\r\n            return result;\r\n        };\r\n\r\n        // Image functionality ported from pdf.js\r\n        var putImage = function putImage(img) {\r\n\r\n                var objectNumber = this.internal.newObject(),\r\n                    out = this.internal.write,\r\n                    putStream = this.internal.putStream;\r\n\r\n                img['n'] = objectNumber;\r\n\r\n                out('<</Type /XObject');\r\n                out('/Subtype /Image');\r\n                out('/Width ' + img['w']);\r\n                out('/Height ' + img['h']);\r\n                if (img['cs'] === this.color_spaces.INDEXED) {\r\n                    out('/ColorSpace [/Indexed /DeviceRGB '\r\n                        // if an indexed png defines more than one colour with transparency, we've created a smask\r\n                        +\r\n                        (img['pal'].length / 3 - 1) + ' ' + ('smask' in img ? objectNumber + 2 : objectNumber + 1) + ' 0 R]');\r\n                } else {\r\n                    out('/ColorSpace /' + img['cs']);\r\n                    if (img['cs'] === this.color_spaces.DEVICE_CMYK) {\r\n                        out('/Decode [1 0 1 0 1 0 1 0]');\r\n                    }\r\n                }\r\n                out('/BitsPerComponent ' + img['bpc']);\r\n                if ('f' in img) {\r\n                    out('/Filter /' + img['f']);\r\n                }\r\n                if ('dp' in img) {\r\n                    out('/DecodeParms <<' + img['dp'] + '>>');\r\n                }\r\n                if ('trns' in img && img['trns'].constructor == Array) {\r\n                    var trns = '',\r\n                        i = 0,\r\n                        len = img['trns'].length;\r\n                    for (; i < len; i++) {\r\n                        trns += img['trns'][i] + ' ' + img['trns'][i] + ' ';\r\n                    }\r\n                    out('/Mask [' + trns + ']');\r\n                }\r\n                if ('smask' in img) {\r\n                    out('/SMask ' + (objectNumber + 1) + ' 0 R');\r\n                }\r\n                out('/Length ' + img['data'].length + '>>');\r\n\r\n                putStream(img['data']);\r\n\r\n                out('endobj');\r\n\r\n                // Soft mask\r\n                if ('smask' in img) {\r\n                    var dp = '/Predictor ' + img['p'] + ' /Colors 1 /BitsPerComponent ' + img['bpc'] + ' /Columns ' + img['w'];\r\n                    var smask = { 'w': img['w'], 'h': img['h'], 'cs': 'DeviceGray', 'bpc': img['bpc'], 'dp': dp, 'data': img['smask'] };\r\n                    if ('f' in img) smask.f = img['f'];\r\n                    putImage.call(this, smask);\r\n                }\r\n\r\n                //Palette\r\n                if (img['cs'] === this.color_spaces.INDEXED) {\r\n\r\n                    this.internal.newObject();\r\n                    //out('<< /Filter / ' + img['f'] +' /Length ' + img['pal'].length + '>>');\r\n                    //putStream(zlib.compress(img['pal']));\r\n                    out('<< /Length ' + img['pal'].length + '>>');\r\n                    putStream(this.arrayBufferToBinaryString(new Uint8Array(img['pal'])));\r\n                    out('endobj');\r\n                }\r\n            },\r\n            putResourcesCallback = function putResourcesCallback() {\r\n                var images = this.internal.collections[namespace + 'images'];\r\n                for (var i in images) {\r\n                    putImage.call(this, images[i]);\r\n                }\r\n            },\r\n            putXObjectsDictCallback = function putXObjectsDictCallback() {\r\n                var images = this.internal.collections[namespace + 'images'],\r\n                    out = this.internal.write,\r\n                    image;\r\n                for (var i in images) {\r\n                    image = images[i];\r\n                    out('/I' + image['i'], image['n'], '0', 'R');\r\n                }\r\n            },\r\n            checkCompressValue = function checkCompressValue(value) {\r\n                if (value && typeof value === 'string') value = value.toUpperCase();\r\n                return value in jsPDFAPI.image_compression ? value : jsPDFAPI.image_compression.NONE;\r\n            },\r\n            getImages = function getImages() {\r\n                var images = this.internal.collections[namespace + 'images'];\r\n                //first run, so initialise stuff\r\n                if (!images) {\r\n                    this.internal.collections[namespace + 'images'] = images = {};\r\n                    this.internal.events.subscribe('putResources', putResourcesCallback);\r\n                    this.internal.events.subscribe('putXobjectDict', putXObjectsDictCallback);\r\n                }\r\n\r\n                return images;\r\n            },\r\n            getImageIndex = function getImageIndex(images) {\r\n                var imageIndex = 0;\r\n\r\n                if (images) {\r\n                    // this is NOT the first time this method is ran on this instance of jsPDF object.\r\n                    imageIndex = Object.keys ? Object.keys(images).length : function(o) {\r\n                        var i = 0;\r\n                        for (var e in o) {\r\n                            if (o.hasOwnProperty(e)) {\r\n                                i++;\r\n                            }\r\n                        }\r\n                        return i;\r\n                    }(images);\r\n                }\r\n\r\n                return imageIndex;\r\n            },\r\n            notDefined = function notDefined(value) {\r\n                return typeof value === 'undefined' || value === null || value.length === 0;\r\n            },\r\n            generateAliasFromData = function generateAliasFromData(data) {\r\n                return typeof data === 'string' && jsPDFAPI.sHashCode(data);\r\n            },\r\n            isImageTypeSupported = function isImageTypeSupported(type) {\r\n                return typeof jsPDFAPI[\"process\" + type.toUpperCase()] === \"function\";\r\n            },\r\n            isDOMElement = function isDOMElement(object) {\r\n                return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.nodeType === 1;\r\n            },\r\n            createDataURIFromElement = function createDataURIFromElement(element, format) {\r\n\r\n                //if element is an image which uses data url definition, just return the dataurl\r\n                if (element.nodeName === 'IMG' && element.hasAttribute('src')) {\r\n                    var src = '' + element.getAttribute('src');\r\n                    if (src.indexOf('data:image/') === 0) return src;\r\n\r\n                    // only if the user doesn't care about a format\r\n                    if (!format && /\\.png(?:[?#].*)?$/i.test(src)) format = 'png';\r\n                }\r\n\r\n                if (element.nodeName === 'CANVAS') {\r\n                    var canvas = element;\r\n                } else {\r\n                    var canvas = document.createElement('canvas');\r\n                    canvas.width = element.clientWidth || element.width;\r\n                    canvas.height = element.clientHeight || element.height;\r\n\r\n                    var ctx = canvas.getContext('2d');\r\n                    if (!ctx) {\r\n                        throw 'addImage requires canvas to be supported by browser.';\r\n                    }\r\n                    ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\r\n                }\r\n                return canvas.toDataURL(('' + format).toLowerCase() == 'png' ? 'image/png' : 'image/jpeg');\r\n            },\r\n            checkImagesForAlias = function checkImagesForAlias(alias, images) {\r\n                var cached_info;\r\n                if (images) {\r\n                    for (var e in images) {\r\n                        if (alias === images[e].alias) {\r\n                            cached_info = images[e];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return cached_info;\r\n            },\r\n            determineWidthAndHeight = function determineWidthAndHeight(w, h, info) {\r\n                if (!w && !h) {\r\n                    w = -96;\r\n                    h = -96;\r\n                }\r\n                if (w < 0) {\r\n                    w = -1 * info['w'] * 72 / w / this.internal.scaleFactor;\r\n                }\r\n                if (h < 0) {\r\n                    h = -1 * info['h'] * 72 / h / this.internal.scaleFactor;\r\n                }\r\n                if (w === 0) {\r\n                    w = h * info['w'] / info['h'];\r\n                }\r\n                if (h === 0) {\r\n                    h = w * info['h'] / info['w'];\r\n                }\r\n\r\n                return [w, h];\r\n            },\r\n            writeImageToPDF = function writeImageToPDF(x, y, w, h, info, index, images, rotation) {\r\n                var dims = determineWidthAndHeight.call(this, w, h, info),\r\n                    coord = this.internal.getCoordinateString,\r\n                    vcoord = this.internal.getVerticalCoordinateString;\r\n\r\n                w = dims[0];\r\n                h = dims[1];\r\n\r\n                images[index] = info;\r\n\r\n                if (rotation) {\r\n                    rotation *= Math.PI / 180;\r\n                    var c = Math.cos(rotation);\r\n                    var s = Math.sin(rotation);\r\n                    //like in pdf Reference do it 4 digits instead of 2\r\n                    var f4 = function f4(number) {\r\n                        return number.toFixed(4);\r\n                    };\r\n                    var rotationTransformationMatrix = [f4(c), f4(s), f4(s * -1), f4(c), 0, 0, 'cm'];\r\n                }\r\n                this.internal.write('q'); //Save graphics state\r\n                if (rotation) {\r\n                    this.internal.write([1, '0', '0', 1, coord(x), vcoord(y + h), 'cm'].join(' ')); //Translate\r\n                    this.internal.write(rotationTransformationMatrix.join(' ')); //Rotate\r\n                    this.internal.write([coord(w), '0', '0', coord(h), '0', '0', 'cm'].join(' ')); //Scale\r\n                } else {\r\n                    this.internal.write([coord(w), '0', '0', coord(h), coord(x), vcoord(y + h), 'cm'].join(' ')); //Translate and Scale\r\n                }\r\n                this.internal.write('/I' + info['i'] + ' Do'); //Paint Image\r\n                this.internal.write('Q'); //Restore graphics state\r\n            };\r\n\r\n        /**\r\n         * COLOR SPACES\r\n         */\r\n        jsPDFAPI.color_spaces = {\r\n            DEVICE_RGB: 'DeviceRGB',\r\n            DEVICE_GRAY: 'DeviceGray',\r\n            DEVICE_CMYK: 'DeviceCMYK',\r\n            CAL_GREY: 'CalGray',\r\n            CAL_RGB: 'CalRGB',\r\n            LAB: 'Lab',\r\n            ICC_BASED: 'ICCBased',\r\n            INDEXED: 'Indexed',\r\n            PATTERN: 'Pattern',\r\n            SEPARATION: 'Separation',\r\n            DEVICE_N: 'DeviceN'\r\n        };\r\n\r\n        /**\r\n         * DECODE METHODS\r\n         */\r\n        jsPDFAPI.decode = {\r\n            DCT_DECODE: 'DCTDecode',\r\n            FLATE_DECODE: 'FlateDecode',\r\n            LZW_DECODE: 'LZWDecode',\r\n            JPX_DECODE: 'JPXDecode',\r\n            JBIG2_DECODE: 'JBIG2Decode',\r\n            ASCII85_DECODE: 'ASCII85Decode',\r\n            ASCII_HEX_DECODE: 'ASCIIHexDecode',\r\n            RUN_LENGTH_DECODE: 'RunLengthDecode',\r\n            CCITT_FAX_DECODE: 'CCITTFaxDecode'\r\n        };\r\n\r\n        /**\r\n         * IMAGE COMPRESSION TYPES\r\n         */\r\n        jsPDFAPI.image_compression = {\r\n            NONE: 'NONE',\r\n            FAST: 'FAST',\r\n            MEDIUM: 'MEDIUM',\r\n            SLOW: 'SLOW'\r\n        };\r\n\r\n        jsPDFAPI.sHashCode = function(str) {\r\n            str = str || \"\";\r\n            return Array.prototype.reduce && str.split(\"\").reduce(function(a, b) {\r\n                a = (a << 5) - a + b.charCodeAt(0);\r\n                return a & a;\r\n            }, 0);\r\n        };\r\n\r\n        jsPDFAPI.isString = function(object) {\r\n            return typeof object === 'string';\r\n        };\r\n        /**\r\n         * Validates if given String is a valid Base64-String\r\n         *\r\n         * @name validateStringAsBase64\r\n         * @public\r\n         * @function\r\n         * @param {String} possible Base64-String\r\n         *\r\n         * @returns {boolean}\r\n         * @methodOf jsPDF#\r\n         */\r\n        jsPDFAPI.validateStringAsBase64 = function(possibleBase64String) {\r\n            possibleBase64String = possibleBase64String || '';\r\n\r\n            var result = true;\r\n\r\n            if (possibleBase64String.length % 4 !== 0) {\r\n                result = false;\r\n            }\r\n\r\n            if (/[A-Za-z0-9\\/]+/.test(possibleBase64String.substr(0, possibleBase64String.length - 2)) === false) {\r\n                result = false;\r\n            }\r\n\r\n            if (/[A-Za-z0-9\\/][A-Za-z0-9+\\/]|[A-Za-z0-9+\\/]=|==/.test(possibleBase64String.substr(-2)) === false) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * Strips out and returns info from a valid base64 data URI\r\n         * @param {String[dataURI]} a valid data URI of format 'data:[<MIME-type>][;base64],<data>'\r\n         * @returns an Array containing the following\r\n         * [0] the complete data URI\r\n         * [1] <MIME-type>\r\n         * [2] format - the second part of the mime-type i.e 'png' in 'image/png'\r\n         * [4] <data>\r\n         */\r\n        jsPDFAPI.extractInfoFromBase64DataURI = function(dataURI) {\r\n            return (/^data:([\\w]+?\\/([\\w]+?));base64,(.+)$/g.exec(dataURI));\r\n        };\r\n\r\n        /**\r\n         * Check to see if ArrayBuffer is supported\r\n         *\r\n         * @returns {boolean}\r\n         * @methodOf jsPDF#\r\n         */\r\n        jsPDFAPI.supportsArrayBuffer = function() {\r\n            return typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined';\r\n        };\r\n\r\n        /**\r\n         * Tests supplied object to determine if ArrayBuffer\r\n         * @param {Object[object]}\r\n         *\r\n         * @returns {boolean}\r\n         * @methodOf jsPDF#\r\n         */\r\n        jsPDFAPI.isArrayBuffer = function(object) {\r\n            if (!this.supportsArrayBuffer()) return false;\r\n            return object instanceof ArrayBuffer;\r\n        };\r\n\r\n        /**\r\n         * Tests supplied object to determine if it implements the ArrayBufferView (TypedArray) interface\r\n         * @param {Object[object]}\r\n         */\r\n        jsPDFAPI.isArrayBufferView = function(object) {\r\n            if (!this.supportsArrayBuffer()) return false;\r\n            if (typeof Uint32Array === 'undefined') return false;\r\n            return object instanceof Int8Array || object instanceof Uint8Array || typeof Uint8ClampedArray !== 'undefined' && object instanceof Uint8ClampedArray || object instanceof Int16Array || object instanceof Uint16Array || object instanceof Int32Array || object instanceof Uint32Array || object instanceof Float32Array || object instanceof Float64Array;\r\n        };\r\n\r\n        /**\r\n         * Convert the Buffer to a Binary String\r\n         *\r\n         * @name binaryStringToUint8Array\r\n         * @public\r\n         * @function\r\n         * @param {ArrayBuffer} BinaryString with ImageData\r\n         *\r\n         * @returns {Uint8Array}\r\n         */\r\n        jsPDFAPI.binaryStringToUint8Array = function(binary_string) {\r\n            /*\r\n             * not sure how efficient this will be will bigger files. Is there a native method?\r\n             */\r\n            var len = binary_string.length;\r\n            var bytes = new Uint8Array(len);\r\n            for (var i = 0; i < len; i++) {\r\n                bytes[i] = binary_string.charCodeAt(i);\r\n            }\r\n            return bytes;\r\n        };\r\n\r\n        /**\r\n         * Convert the Buffer to a Binary String\r\n         *\r\n         * @name arrayBufferToBinaryString\r\n         * @public\r\n         * @function\r\n         * @param {ArrayBuffer} ArrayBuffer with ImageData\r\n         *\r\n         * @returns {String}\r\n         */\r\n        jsPDFAPI.arrayBufferToBinaryString = function(buffer) {\r\n\r\n            if (typeof atob === \"function\") {\r\n                return atob(this.arrayBufferToBase64(buffer));\r\n            }\r\n\r\n            if (typeof TextDecoder === \"function\") {\r\n                var decoder = new TextDecoder('ascii');\r\n                // test if the encoding is supported\r\n                if (decoder.encoding === 'ascii') {\r\n                    return decoder.decode(buffer);\r\n                }\r\n            }\r\n\r\n            //Fallback-solution\r\n            var data = this.isArrayBuffer(buffer) ? buffer : new Uint8Array(buffer);\r\n            var chunkSizeForSlice = 0x5000;\r\n            var binary_string = '';\r\n            var slicesCount = Math.ceil(data.byteLength / chunkSizeForSlice);\r\n            for (var i = 0; i < slicesCount; i++) {\r\n                binary_string += String.fromCharCode.apply(null, data.slice(i * chunkSizeForSlice, i * chunkSizeForSlice + chunkSizeForSlice));\r\n            }\r\n            return binary_string;\r\n        };\r\n\r\n        /**\r\n         * Converts an ArrayBuffer directly to base64\r\n         *\r\n         * Taken from  http://jsperf.com/encoding-xhr-image-data/31\r\n         *\r\n         * Need to test if this is a better solution for larger files\r\n         *\r\n         * @name arrayBufferToBase64\r\n         * @public\r\n         * @function\r\n         *\r\n         * @returns {String}\r\n         */\r\n        jsPDFAPI.arrayBufferToBase64 = function(arrayBuffer) {\r\n            var base64 = '';\r\n            var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n            var bytes = new Uint8Array(arrayBuffer);\r\n            var byteLength = bytes.byteLength;\r\n            var byteRemainder = byteLength % 3;\r\n            var mainLength = byteLength - byteRemainder;\r\n\r\n            var a, b, c, d;\r\n            var chunk;\r\n\r\n            // Main loop deals with bytes in chunks of 3\r\n            for (var i = 0; i < mainLength; i = i + 3) {\r\n                // Combine the three bytes into a single integer\r\n                chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];\r\n\r\n                // Use bitmasks to extract 6-bit segments from the triplet\r\n                a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\r\n                b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\r\n                c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\r\n                d = chunk & 63; // 63       = 2^6 - 1\r\n\r\n                // Convert the raw binary segments to the appropriate ASCII encoding\r\n                base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\r\n            }\r\n\r\n            // Deal with the remaining bytes and padding\r\n            if (byteRemainder == 1) {\r\n                chunk = bytes[mainLength];\r\n\r\n                a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\r\n\r\n                // Set the 4 least significant bits to zero\r\n                b = (chunk & 3) << 4; // 3   = 2^2 - 1\r\n\r\n                base64 += encodings[a] + encodings[b] + '==';\r\n            } else if (byteRemainder == 2) {\r\n                chunk = bytes[mainLength] << 8 | bytes[mainLength + 1];\r\n\r\n                a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\r\n                b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\r\n\r\n                // Set the 2 least significant bits to zero\r\n                c = (chunk & 15) << 2; // 15    = 2^4 - 1\r\n\r\n                base64 += encodings[a] + encodings[b] + encodings[c] + '=';\r\n            }\r\n\r\n            return base64;\r\n        };\r\n\r\n        /**\r\n         * Converts an ArrayBuffer directly to base64\r\n         *\r\n         * Taken from  http://jsperf.com/encoding-xhr-image-data/31\r\n         *\r\n         * Need to test if this is a better solution for larger files\r\n         *\r\n         * @public\r\n         * @function\r\n         *\r\n         * @returns {String}\r\n         */\r\n        jsPDFAPI.createImageInfo = function(data, wd, ht, cs, bpc, f, imageIndex, alias, dp, trns, pal, smask, p) {\r\n            var info = {\r\n                alias: alias,\r\n                w: wd,\r\n                h: ht,\r\n                cs: cs,\r\n                bpc: bpc,\r\n                i: imageIndex,\r\n                data: data\r\n                    // n: objectNumber will be added by putImage code\r\n            };\r\n\r\n            if (f) info.f = f;\r\n            if (dp) info.dp = dp;\r\n            if (trns) info.trns = trns;\r\n            if (pal) info.pal = pal;\r\n            if (smask) info.smask = smask;\r\n            if (p) info.p = p; // predictor parameter for PNG compression\r\n\r\n            return info;\r\n        };\r\n        /**\r\n         * Adds an Image to the PDF.\r\n         *\r\n         * @name addImage\r\n         * @public\r\n         * @function\r\n         * @param {String/Image-Element/Canvas-Element/Uint8Array} imageData as base64 encoded DataUrl or Image-HTMLElement or Canvas-HTMLElement\r\n         * @param {String} format of file if filetype-recognition fails, e.g. 'JPEG'\r\n         * @param {Number} x Coordinate (in units declared at inception of PDF document) against left edge of the page\r\n         * @param {Number} y Coordinate (in units declared at inception of PDF document) against upper edge of the page\r\n         * @param {Number} width of the image (in units declared at inception of PDF document)\r\n         * @param {Number} height of the Image (in units declared at inception of PDF document)\r\n         * @param {String} alias of the image (if used multiple times)\r\n         * @param {String} compression of the generated JPEG, can have the values 'NONE', 'FAST', 'MEDIUM' and 'SLOW'\r\n         * @param {Number} rotation of the image in degrees (0-359)\r\n         *\r\n         * @returns jsPDF\r\n         * @methodOf jsPDF#\r\n         */\r\n        jsPDFAPI.addImage = function(imageData, format, x, y, w, h, alias, compression, rotation) {\r\n\r\n            var tmpImageData = '';\r\n\r\n            if (typeof format !== 'string') {\r\n                var tmp = h;\r\n                h = w;\r\n                w = y;\r\n                y = x;\r\n                x = format;\r\n                format = tmp;\r\n            }\r\n\r\n            if ((typeof imageData === 'undefined' ? 'undefined' : _typeof(imageData)) === 'object' && !isDOMElement(imageData) && \"imageData\" in imageData) {\r\n                var options = imageData;\r\n\r\n                imageData = options.imageData;\r\n                format = options.format || format;\r\n                x = options.x || x || 0;\r\n                y = options.y || y || 0;\r\n                w = options.w || w;\r\n                h = options.h || h;\r\n                alias = options.alias || alias;\r\n                compression = options.compression || compression;\r\n                rotation = options.rotation || options.angle || rotation;\r\n            }\r\n\r\n            if (isNaN(x) || isNaN(y)) {\r\n                console.error('jsPDF.addImage: Invalid coordinates', arguments);\r\n                throw new Error('Invalid coordinates passed to jsPDF.addImage');\r\n            }\r\n\r\n            var images = getImages.call(this),\r\n                info;\r\n\r\n            if (!(info = checkImagesForAlias(imageData, images))) {\r\n                var dataAsBinaryString;\r\n\r\n                if (isDOMElement(imageData)) imageData = createDataURIFromElement(imageData, format);\r\n\r\n                if (notDefined(alias)) alias = generateAliasFromData(imageData);\r\n\r\n                if (!(info = checkImagesForAlias(alias, images))) {\r\n                    if (this.isString(imageData)) {\r\n                        tmpImageData = this.convertStringToImageData(imageData);\r\n\r\n                        if (tmpImageData !== '') {\r\n                            imageData = tmpImageData;\r\n                        } else {\r\n                            tmpImageData = this.loadImageFile(imageData);\r\n                            if (tmpImageData !== undefined) {\r\n                                imageData = tmpImageData;\r\n                            }\r\n                        }\r\n                    }\r\n                    format = this.getImageFileTypeByImageData(imageData, format);\r\n\r\n                    if (!isImageTypeSupported(format)) throw new Error('addImage does not support files of type \\'' + format + '\\', please ensure that a plugin for \\'' + format + '\\' support is added.');\r\n\r\n                    /**\r\n                     * need to test if it's more efficient to convert all binary strings\r\n                     * to TypedArray - or should we just leave and process as string?\r\n                     */\r\n                    if (this.supportsArrayBuffer()) {\r\n                        // no need to convert if imageData is already uint8array\r\n                        if (!(imageData instanceof Uint8Array)) {\r\n                            dataAsBinaryString = imageData;\r\n                            imageData = this.binaryStringToUint8Array(imageData);\r\n                        }\r\n                    }\r\n\r\n                    info = this['process' + format.toUpperCase()](imageData, getImageIndex(images), alias, checkCompressValue(compression), dataAsBinaryString);\r\n\r\n                    if (!info) throw new Error('An unkwown error occurred whilst processing the image');\r\n                }\r\n            }\r\n            writeImageToPDF.call(this, x, y, w, h, info, info.i, images, rotation);\r\n\r\n            return this;\r\n        };\r\n\r\n        jsPDFAPI.convertStringToImageData = function(stringData) {\r\n            var base64Info;\r\n            var imageData = '';\r\n            if (this.isString(stringData)) {\r\n                var base64Info = this.extractInfoFromBase64DataURI(stringData);\r\n\r\n                if (base64Info !== null) {\r\n                    if (jsPDFAPI.validateStringAsBase64(base64Info[3])) {\r\n                        imageData = atob(base64Info[3]); //convert to binary string\r\n                    }\r\n                } else if (jsPDFAPI.validateStringAsBase64(stringData)) {\r\n                    imageData = atob(stringData);\r\n                }\r\n            }\r\n            return imageData;\r\n        };\r\n        /**\r\n         * JPEG SUPPORT\r\n         **/\r\n\r\n        //takes a string imgData containing the raw bytes of\r\n        //a jpeg image and returns [width, height]\r\n        //Algorithm from: http://www.64lines.com/jpeg-width-height\r\n        var getJpegSize = function getJpegSize(imgData) {\r\n\r\n                var width, height, numcomponents;\r\n                // Verify we have a valid jpeg header 0xff,0xd8,0xff,0xe0,?,?,'J','F','I','F',0x00\r\n                if (!imgData.charCodeAt(0) === 0xff || !imgData.charCodeAt(1) === 0xd8 || !imgData.charCodeAt(2) === 0xff || !imgData.charCodeAt(3) === 0xe0 || !imgData.charCodeAt(6) === 'J'.charCodeAt(0) || !imgData.charCodeAt(7) === 'F'.charCodeAt(0) || !imgData.charCodeAt(8) === 'I'.charCodeAt(0) || !imgData.charCodeAt(9) === 'F'.charCodeAt(0) || !imgData.charCodeAt(10) === 0x00) {\r\n                    throw new Error('getJpegSize requires a binary string jpeg file');\r\n                }\r\n                var blockLength = imgData.charCodeAt(4) * 256 + imgData.charCodeAt(5);\r\n                var i = 4,\r\n                    len = imgData.length;\r\n                while (i < len) {\r\n                    i += blockLength;\r\n                    if (imgData.charCodeAt(i) !== 0xff) {\r\n                        throw new Error('getJpegSize could not find the size of the image');\r\n                    }\r\n                    if (imgData.charCodeAt(i + 1) === 0xc0 || //(SOF) Huffman  - Baseline DCT\r\n                        imgData.charCodeAt(i + 1) === 0xc1 || //(SOF) Huffman  - Extended sequential DCT\r\n                        imgData.charCodeAt(i + 1) === 0xc2 || // Progressive DCT (SOF2)\r\n                        imgData.charCodeAt(i + 1) === 0xc3 || // Spatial (sequential) lossless (SOF3)\r\n                        imgData.charCodeAt(i + 1) === 0xc4 || // Differential sequential DCT (SOF5)\r\n                        imgData.charCodeAt(i + 1) === 0xc5 || // Differential progressive DCT (SOF6)\r\n                        imgData.charCodeAt(i + 1) === 0xc6 || // Differential spatial (SOF7)\r\n                        imgData.charCodeAt(i + 1) === 0xc7) {\r\n                        height = imgData.charCodeAt(i + 5) * 256 + imgData.charCodeAt(i + 6);\r\n                        width = imgData.charCodeAt(i + 7) * 256 + imgData.charCodeAt(i + 8);\r\n                        numcomponents = imgData.charCodeAt(i + 9);\r\n                        return [width, height, numcomponents];\r\n                    } else {\r\n                        i += 2;\r\n                        blockLength = imgData.charCodeAt(i) * 256 + imgData.charCodeAt(i + 1);\r\n                    }\r\n                }\r\n            },\r\n            getJpegSizeFromBytes = function getJpegSizeFromBytes(data) {\r\n\r\n                var hdr = data[0] << 8 | data[1];\r\n\r\n                if (hdr !== 0xFFD8) throw new Error('Supplied data is not a JPEG');\r\n\r\n                var len = data.length,\r\n                    block = (data[4] << 8) + data[5],\r\n                    pos = 4,\r\n                    bytes,\r\n                    width,\r\n                    height,\r\n                    numcomponents;\r\n\r\n                while (pos < len) {\r\n                    pos += block;\r\n                    bytes = readBytes(data, pos);\r\n                    block = (bytes[2] << 8) + bytes[3];\r\n                    if ((bytes[1] === 0xC0 || bytes[1] === 0xC2) && bytes[0] === 0xFF && block > 7) {\r\n                        bytes = readBytes(data, pos + 5);\r\n                        width = (bytes[2] << 8) + bytes[3];\r\n                        height = (bytes[0] << 8) + bytes[1];\r\n                        numcomponents = bytes[4];\r\n                        return { width: width, height: height, numcomponents: numcomponents };\r\n                    }\r\n\r\n                    pos += 2;\r\n                }\r\n\r\n                throw new Error('getJpegSizeFromBytes could not find the size of the image');\r\n            },\r\n            readBytes = function readBytes(data, offset) {\r\n                return data.subarray(offset, offset + 5);\r\n            };\r\n\r\n        jsPDFAPI.processJPEG = function(data, index, alias, compression, dataAsBinaryString, colorSpace) {\r\n\r\n            var filter = this.decode.DCT_DECODE,\r\n                bpc = 8,\r\n                dims;\r\n\r\n            if (!this.isString(data) && !this.isArrayBuffer(data) && !this.isArrayBufferView(data)) {\r\n                return null;\r\n            }\r\n\r\n            if (this.isString(data)) {\r\n                dims = getJpegSize(data);\r\n            }\r\n\r\n            if (this.isArrayBuffer(data)) {\r\n                data = new Uint8Array(data);\r\n            }\r\n            if (this.isArrayBufferView(data)) {\r\n\r\n                dims = getJpegSizeFromBytes(data);\r\n\r\n                // if we already have a stored binary string rep use that\r\n                data = dataAsBinaryString || this.arrayBufferToBinaryString(data);\r\n            }\r\n\r\n            if (colorSpace === undefined) {\r\n                switch (dims.numcomponents) {\r\n                    case 1:\r\n                        colorSpace = this.color_spaces.DEVICE_GRAY;\r\n                        break;\r\n                    case 4:\r\n                        colorSpace = this.color_spaces.DEVICE_CMYK;\r\n                        break;\r\n                    default:\r\n                    case 3:\r\n                        colorSpace = this.color_spaces.DEVICE_RGB;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return this.createImageInfo(data, dims.width, dims.height, colorSpace, bpc, filter, index, alias);\r\n        };\r\n\r\n        jsPDFAPI.processJPG = function() /*data, index, alias, compression, dataAsBinaryString*/ {\r\n            return this.processJPEG.apply(this, arguments);\r\n        };\r\n\r\n        jsPDFAPI.loadImageFile = function(path, sync, callback) {\r\n            sync = sync || true;\r\n            callback = callback || function() {};\r\n            var isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\r\n\r\n            var xhrMethod = function xhrMethod(url, sync, callback) {\r\n                var req = new XMLHttpRequest();\r\n                var byteArray = [];\r\n                var i = 0;\r\n\r\n                var sanitizeUnicode = function sanitizeUnicode(data) {\r\n                    var dataLength = data.length;\r\n                    var StringFromCharCode = String.fromCharCode;\r\n\r\n                    //Transform Unicode to ASCII\r\n                    for (i = 0; i < dataLength; i += 1) {\r\n                        byteArray.push(StringFromCharCode(data.charCodeAt(i) & 0xff));\r\n                    }\r\n                    return byteArray.join(\"\");\r\n                };\r\n\r\n                req.open('GET', url, !sync);\r\n                // XHR binary charset opt by Marcus Granado 2006 [http://mgran.blogspot.com]\r\n                req.overrideMimeType('text\\/plain; charset=x-user-defined');\r\n\r\n                if (sync === false) {\r\n                    req.onload = function() {\r\n                        return sanitizeUnicode(this.responseText);\r\n                    };\r\n                }\r\n                req.send(null);\r\n\r\n                if (req.status !== 200) {\r\n                    console.warn('Unable to load file \"' + url + '\"');\r\n                    return;\r\n                }\r\n\r\n                if (sync) {\r\n                    return sanitizeUnicode(req.responseText);\r\n                }\r\n            };\r\n\r\n            //we have a browser and probably no CORS-Problem\r\n            if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== undefined && (typeof location === 'undefined' ? 'undefined' : _typeof(location)) === \"object\" && location.protocol.substr(0, 4) === \"http\") {\r\n                return xhrMethod(path, sync, callback);\r\n            }\r\n        };\r\n\r\n        jsPDFAPI.getImageProperties = function(imageData) {\r\n            var info;\r\n            var tmpImageData = '';\r\n            var format;\r\n\r\n            if (isDOMElement(imageData)) {\r\n                imageData = createDataURIFromElement(imageData);\r\n            }\r\n\r\n            if (this.isString(imageData)) {\r\n                tmpImageData = this.convertStringToImageData(imageData);\r\n\r\n                if (tmpImageData !== '') {\r\n                    imageData = tmpImageData;\r\n                } else {\r\n                    tmpImageData = this.loadImageFile(imageData);\r\n                    if (tmpImageData !== undefined) {\r\n                        imageData = tmpImageData;\r\n                    }\r\n                }\r\n            }\r\n            format = this.getImageFileTypeByImageData(imageData);\r\n\r\n            if (!isImageTypeSupported(format)) throw new Error('addImage does not support files of type \\'' + format + '\\', please ensure that a plugin for \\'' + format + '\\' support is added.');\r\n\r\n            /**\r\n             * need to test if it's more efficient to convert all binary strings\r\n             * to TypedArray - or should we just leave and process as string?\r\n             */\r\n            if (this.supportsArrayBuffer()) {\r\n                // no need to convert if imageData is already uint8array\r\n                if (!(imageData instanceof Uint8Array)) {\r\n                    imageData = this.binaryStringToUint8Array(imageData);\r\n                }\r\n            }\r\n\r\n            info = this['process' + format.toUpperCase()](imageData);\r\n\r\n            if (!info) {\r\n                throw new Error('An unkwown error occurred whilst processing the image');\r\n            }\r\n\r\n            return {\r\n                fileType: format,\r\n                width: info.w,\r\n                height: info.h,\r\n                colorSpace: info.cs,\r\n                compressionMode: info.f,\r\n                bitsPerComponent: info.bpc\r\n            };\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    /**\r\n     * jsPDF Autoprint Plugin\r\n     *\r\n     * Licensed under the MIT License.\r\n     * http://opensource.org/licenses/mit-license\r\n     */\r\n\r\n    (function(jsPDFAPI) {\r\n        'use strict';\r\n\r\n        jsPDFAPI.autoPrint = function() {\r\n            'use strict';\r\n\r\n            var refAutoPrintTag;\r\n\r\n            this.internal.events.subscribe('postPutResources', function() {\r\n                refAutoPrintTag = this.internal.newObject();\r\n                this.internal.write(\"<< /S/Named /Type/Action /N/Print >>\", \"endobj\");\r\n            });\r\n\r\n            this.internal.events.subscribe(\"putCatalog\", function() {\r\n                this.internal.write(\"/OpenAction \" + refAutoPrintTag + \" 0\" + \" R\");\r\n            });\r\n            return this;\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    /** @preserve\r\n     * jsPDF split_text_to_size plugin - MIT license.\r\n     * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com\r\n     *               2014 Diego Casorran, https://github.com/diegocr\r\n     */\r\n    /**\r\n     *\r\n     * ====================================================================\r\n     */\r\n\r\n    ;\r\n    (function(API) {\r\n        'use strict';\r\n\r\n        /**\r\n     Returns an array of length matching length of the 'word' string, with each\r\n     cell ocupied by the width of the char in that position.\r\n\r\n     @function\r\n     @param word {String}\r\n     @param widths {Object}\r\n     @param kerning {Object}\r\n     @returns {Array}\r\n     */\r\n\r\n        var getCharWidthsArray = API.getCharWidthsArray = function(text, options) {\r\n\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n\r\n            var widths = options.widths ? options.widths : this.internal.getFont().metadata.Unicode.widths,\r\n                widthsFractionOf = widths.fof ? widths.fof : 1,\r\n                kerning = options.kerning ? options.kerning : this.internal.getFont().metadata.Unicode.kerning,\r\n                kerningFractionOf = kerning.fof ? kerning.fof : 1;\r\n\r\n            // console.log(\"widths, kergnings\", widths, kerning)\r\n\r\n            var i,\r\n                l,\r\n                char_code,\r\n                prior_char_code = 0 // for kerning\r\n                ,\r\n                default_char_width = widths[0] || widthsFractionOf,\r\n                output = [];\r\n\r\n            for (i = 0, l = text.length; i < l; i++) {\r\n                char_code = text.charCodeAt(i);\r\n                output.push((widths[char_code] || default_char_width) / widthsFractionOf + (kerning[char_code] && kerning[char_code][prior_char_code] || 0) / kerningFractionOf);\r\n                prior_char_code = char_code;\r\n            }\r\n\r\n            return output;\r\n        };\r\n        var getArraySum = function getArraySum(array) {\r\n            var i = array.length,\r\n                output = 0;\r\n            while (i) {;\r\n                i--;\r\n                output += array[i];\r\n            }\r\n            return output;\r\n        };\r\n        /**\r\n     Returns a widths of string in a given font, if the font size is set as 1 point.\r\n\r\n     In other words, this is \"proportional\" value. For 1 unit of font size, the length\r\n     of the string will be that much.\r\n\r\n     Multiply by font size to get actual width in *points*\r\n     Then divide by 72 to get inches or divide by (72/25.6) to get 'mm' etc.\r\n\r\n     @public\r\n     @function\r\n     @param\r\n     @returns {Type}\r\n     */\r\n        var getStringUnitWidth = API.getStringUnitWidth = function(text, options) {\r\n            return getArraySum(getCharWidthsArray.call(this, text, options));\r\n        };\r\n\r\n        /**\r\n     returns array of lines\r\n     */\r\n        var splitLongWord = function splitLongWord(word, widths_array, firstLineMaxLen, maxLen) {\r\n            var answer = [];\r\n\r\n            // 1st, chop off the piece that can fit on the hanging line.\r\n            var i = 0,\r\n                l = word.length,\r\n                workingLen = 0;\r\n            while (i !== l && workingLen + widths_array[i] < firstLineMaxLen) {\r\n                workingLen += widths_array[i];\r\n                i++;\r\n            }\r\n            // this is first line.\r\n            answer.push(word.slice(0, i));\r\n\r\n            // 2nd. Split the rest into maxLen pieces.\r\n            var startOfLine = i;\r\n            workingLen = 0;\r\n            while (i !== l) {\r\n                if (workingLen + widths_array[i] > maxLen) {\r\n                    answer.push(word.slice(startOfLine, i));\r\n                    workingLen = 0;\r\n                    startOfLine = i;\r\n                }\r\n                workingLen += widths_array[i];\r\n                i++;\r\n            }\r\n            if (startOfLine !== i) {\r\n                answer.push(word.slice(startOfLine, i));\r\n            }\r\n\r\n            return answer;\r\n        };\r\n\r\n        // Note, all sizing inputs for this function must be in \"font measurement units\"\r\n        // By default, for PDF, it's \"point\".\r\n        var splitParagraphIntoLines = function splitParagraphIntoLines(text, maxlen, options) {\r\n            // at this time works only on Western scripts, ones with space char\r\n            // separating the words. Feel free to expand.\r\n\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n\r\n            var line = [],\r\n                lines = [line],\r\n                line_length = options.textIndent || 0,\r\n                separator_length = 0,\r\n                current_word_length = 0,\r\n                word,\r\n                widths_array,\r\n                words = text.split(' '),\r\n                spaceCharWidth = getCharWidthsArray(' ', options)[0],\r\n                i,\r\n                l,\r\n                tmp,\r\n                lineIndent;\r\n\r\n            if (options.lineIndent === -1) {\r\n                lineIndent = words[0].length + 2;\r\n            } else {\r\n                lineIndent = options.lineIndent || 0;\r\n            }\r\n            if (lineIndent) {\r\n                var pad = Array(lineIndent).join(\" \"),\r\n                    wrds = [];\r\n                words.map(function(wrd) {\r\n                    wrd = wrd.split(/\\s*\\n/);\r\n                    if (wrd.length > 1) {\r\n                        wrds = wrds.concat(wrd.map(function(wrd, idx) {\r\n                            return (idx && wrd.length ? \"\\n\" : \"\") + wrd;\r\n                        }));\r\n                    } else {\r\n                        wrds.push(wrd[0]);\r\n                    }\r\n                });\r\n                words = wrds;\r\n                lineIndent = getStringUnitWidth(pad, options);\r\n            }\r\n\r\n            for (i = 0, l = words.length; i < l; i++) {\r\n                var force = 0;\r\n\r\n                word = words[i];\r\n                if (lineIndent && word[0] == \"\\n\") {\r\n                    word = word.substr(1);\r\n                    force = 1;\r\n                }\r\n                widths_array = getCharWidthsArray(word, options);\r\n                current_word_length = getArraySum(widths_array);\r\n\r\n                if (line_length + separator_length + current_word_length > maxlen || force) {\r\n                    if (current_word_length > maxlen) {\r\n                        // this happens when you have space-less long URLs for example.\r\n                        // we just chop these to size. We do NOT insert hiphens\r\n                        tmp = splitLongWord(word, widths_array, maxlen - (line_length + separator_length), maxlen);\r\n                        // first line we add to existing line object\r\n                        line.push(tmp.shift()); // it's ok to have extra space indicator there\r\n                        // last line we make into new line object\r\n                        line = [tmp.pop()];\r\n                        // lines in the middle we apped to lines object as whole lines\r\n                        while (tmp.length) {\r\n                            lines.push([tmp.shift()]); // single fragment occupies whole line\r\n                        }\r\n                        current_word_length = getArraySum(widths_array.slice(word.length - line[0].length));\r\n                    } else {\r\n                        // just put it on a new line\r\n                        line = [word];\r\n                    }\r\n\r\n                    // now we attach new line to lines\r\n                    lines.push(line);\r\n                    line_length = current_word_length + lineIndent;\r\n                    separator_length = spaceCharWidth;\r\n                } else {\r\n                    line.push(word);\r\n\r\n                    line_length += separator_length + current_word_length;\r\n                    separator_length = spaceCharWidth;\r\n                }\r\n            }\r\n\r\n            if (lineIndent) {\r\n                var postProcess = function postProcess(ln, idx) {\r\n                    return (idx ? pad : '') + ln.join(\" \");\r\n                };\r\n            } else {\r\n                var postProcess = function postProcess(ln) {\r\n                    return ln.join(\" \");\r\n                };\r\n            }\r\n\r\n            return lines.map(postProcess);\r\n        };\r\n\r\n        /**\r\n     Splits a given string into an array of strings. Uses 'size' value\r\n     (in measurement units declared as default for the jsPDF instance)\r\n     and the font's \"widths\" and \"Kerning\" tables, where available, to\r\n     determine display length of a given string for a given font.\r\n\r\n     We use character's 100% of unit size (height) as width when Width\r\n     table or other default width is not available.\r\n\r\n     @public\r\n     @function\r\n     @param text {String} Unencoded, regular JavaScript (Unicode, UTF-16 / UCS-2) string.\r\n     @param size {Number} Nominal number, measured in units default to this instance of jsPDF.\r\n     @param options {Object} Optional flags needed for chopper to do the right thing.\r\n     @returns {Array} with strings chopped to size.\r\n     */\r\n        API.splitTextToSize = function(text, maxlen, options) {\r\n            'use strict';\r\n\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n\r\n            var fsize = options.fontSize || this.internal.getFontSize(),\r\n                newOptions = function(options) {\r\n                    var widths = { 0: 1 },\r\n                        kerning = {};\r\n\r\n                    if (!options.widths || !options.kerning) {\r\n                        var f = this.internal.getFont(options.fontName, options.fontStyle),\r\n                            encoding = 'Unicode';\r\n                        // NOT UTF8, NOT UTF16BE/LE, NOT UCS2BE/LE\r\n                        // Actual JavaScript-native String's 16bit char codes used.\r\n                        // no multi-byte logic here\r\n\r\n                        if (f.metadata[encoding]) {\r\n                            return {\r\n                                widths: f.metadata[encoding].widths || widths,\r\n                                kerning: f.metadata[encoding].kerning || kerning\r\n                            };\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            widths: options.widths,\r\n                            kerning: options.kerning\r\n                        };\r\n                    }\r\n\r\n                    // then use default values\r\n                    return {\r\n                        widths: widths,\r\n                        kerning: kerning\r\n                    };\r\n                }.call(this, options);\r\n\r\n            // first we split on end-of-line chars\r\n            var paragraphs;\r\n            if (Array.isArray(text)) {\r\n                paragraphs = text;\r\n            } else {\r\n                paragraphs = text.split(/\\r?\\n/);\r\n            }\r\n\r\n            // now we convert size (max length of line) into \"font size units\"\r\n            // at present time, the \"font size unit\" is always 'point'\r\n            // 'proportional' means, \"in proportion to font size\"\r\n            var fontUnit_maxLen = 1.0 * this.internal.scaleFactor * maxlen / fsize;\r\n            // at this time, fsize is always in \"points\" regardless of the default measurement unit of the doc.\r\n            // this may change in the future?\r\n            // until then, proportional_maxlen is likely to be in 'points'\r\n\r\n            // If first line is to be indented (shorter or longer) than maxLen\r\n            // we indicate that by using CSS-style \"text-indent\" option.\r\n            // here it's in font units too (which is likely 'points')\r\n            // it can be negative (which makes the first line longer than maxLen)\r\n            newOptions.textIndent = options.textIndent ? options.textIndent * 1.0 * this.internal.scaleFactor / fsize : 0;\r\n            newOptions.lineIndent = options.lineIndent;\r\n\r\n            var i,\r\n                l,\r\n                output = [];\r\n            for (i = 0, l = paragraphs.length; i < l; i++) {\r\n                output = output.concat(splitParagraphIntoLines(paragraphs[i], fontUnit_maxLen, newOptions));\r\n            }\r\n\r\n            return output;\r\n        };\r\n    })(jsPDF.API);\r\n\r\n    (function(API) {\r\n        'use strict';\r\n\r\n        /*\r\n     # reference (Python) versions of 'compress' and 'uncompress'\r\n     # only 'uncompress' function is featured lower as JavaScript\r\n     # if you want to unit test \"roundtrip\", just transcribe the reference\r\n     # 'compress' function from Python into JavaScript\r\n\r\n     def compress(data):\r\n\r\n         keys =   '0123456789abcdef'\r\n         values = 'klmnopqrstuvwxyz'\r\n         mapping = dict(zip(keys, values))\r\n         vals = []\r\n         for key in data.keys():\r\n             value = data[key]\r\n             try:\r\n                 keystring = hex(key)[2:]\r\n                 keystring = keystring[:-1] + mapping[keystring[-1:]]\r\n             except:\r\n                 keystring = key.join([\"'\",\"'\"])\r\n                 #print('Keystring is %s' % keystring)\r\n\r\n             try:\r\n                 if value < 0:\r\n                     valuestring = hex(value)[3:]\r\n                     numberprefix = '-'\r\n                 else:\r\n                     valuestring = hex(value)[2:]\r\n                     numberprefix = ''\r\n                 valuestring = numberprefix + valuestring[:-1] + mapping[valuestring[-1:]]\r\n             except:\r\n                 if type(value) == dict:\r\n                     valuestring = compress(value)\r\n                 else:\r\n                     raise Exception(\"Don't know what to do with value type %s\" % type(value))\r\n\r\n             vals.append(keystring+valuestring)\r\n\r\n         return '{' + ''.join(vals) + '}'\r\n\r\n     def uncompress(data):\r\n\r\n         decoded = '0123456789abcdef'\r\n         encoded = 'klmnopqrstuvwxyz'\r\n         mapping = dict(zip(encoded, decoded))\r\n\r\n         sign = +1\r\n         stringmode = False\r\n         stringparts = []\r\n\r\n         output = {}\r\n\r\n         activeobject = output\r\n         parentchain = []\r\n\r\n         keyparts = ''\r\n         valueparts = ''\r\n\r\n         key = None\r\n\r\n         ending = set(encoded)\r\n\r\n         i = 1\r\n         l = len(data) - 1 # stripping starting, ending {}\r\n         while i != l: # stripping {}\r\n             # -, {, }, ' are special.\r\n\r\n             ch = data[i]\r\n             i += 1\r\n\r\n             if ch == \"'\":\r\n                 if stringmode:\r\n                     # end of string mode\r\n                     stringmode = False\r\n                     key = ''.join(stringparts)\r\n                 else:\r\n                     # start of string mode\r\n                     stringmode = True\r\n                     stringparts = []\r\n             elif stringmode == True:\r\n                 #print(\"Adding %s to stringpart\" % ch)\r\n                 stringparts.append(ch)\r\n\r\n             elif ch == '{':\r\n                 # start of object\r\n                 parentchain.append( [activeobject, key] )\r\n                 activeobject = {}\r\n                 key = None\r\n                 #DEBUG = True\r\n             elif ch == '}':\r\n                 # end of object\r\n                 parent, key = parentchain.pop()\r\n                 parent[key] = activeobject\r\n                 key = None\r\n                 activeobject = parent\r\n                 #DEBUG = False\r\n\r\n             elif ch == '-':\r\n                 sign = -1\r\n             else:\r\n                 # must be number\r\n                 if key == None:\r\n                     #debug(\"In Key. It is '%s', ch is '%s'\" % (keyparts, ch))\r\n                     if ch in ending:\r\n                         #debug(\"End of key\")\r\n                         keyparts += mapping[ch]\r\n                         key = int(keyparts, 16) * sign\r\n                         sign = +1\r\n                         keyparts = ''\r\n                     else:\r\n                         keyparts += ch\r\n                 else:\r\n                     #debug(\"In value. It is '%s', ch is '%s'\" % (valueparts, ch))\r\n                     if ch in ending:\r\n                         #debug(\"End of value\")\r\n                         valueparts += mapping[ch]\r\n                         activeobject[key] = int(valueparts, 16) * sign\r\n                         sign = +1\r\n                         key = None\r\n                         valueparts = ''\r\n                     else:\r\n                         valueparts += ch\r\n\r\n                 #debug(activeobject)\r\n\r\n         return output\r\n\r\n     */\r\n\r\n        /**\r\n     Uncompresses data compressed into custom, base16-like format.\r\n     @public\r\n     @function\r\n     @param\r\n     @returns {Type}\r\n     */\r\n\r\n        var uncompress = function uncompress(data) {\r\n\r\n            var decoded = '0123456789abcdef',\r\n                encoded = 'klmnopqrstuvwxyz',\r\n                mapping = {};\r\n\r\n            for (var i = 0; i < encoded.length; i++) {\r\n                mapping[encoded[i]] = decoded[i];\r\n            }\r\n\r\n            var undef,\r\n                output = {},\r\n                sign = 1,\r\n                stringparts // undef. will be [] in string mode\r\n\r\n            ,\r\n            activeobject = output,\r\n                parentchain = [],\r\n                parent_key_pair,\r\n                keyparts = '',\r\n                valueparts = '',\r\n                key // undef. will be Truthy when Key is resolved.\r\n                ,\r\n                datalen = data.length - 1 // stripping ending }\r\n                ,\r\n                ch;\r\n\r\n            i = 1; // stripping starting {\r\n\r\n            while (i != datalen) {\r\n                // - { } ' are special.\r\n\r\n                ch = data[i];\r\n                i += 1;\r\n\r\n                if (ch == \"'\") {\r\n                    if (stringparts) {\r\n                        // end of string mode\r\n                        key = stringparts.join('');\r\n                        stringparts = undef;\r\n                    } else {\r\n                        // start of string mode\r\n                        stringparts = [];\r\n                    }\r\n                } else if (stringparts) {\r\n                    stringparts.push(ch);\r\n                } else if (ch == '{') {\r\n                    // start of object\r\n                    parentchain.push([activeobject, key]);\r\n                    activeobject = {};\r\n                    key = undef;\r\n                } else if (ch == '}') {\r\n                    // end of object\r\n                    parent_key_pair = parentchain.pop();\r\n                    parent_key_pair[0][parent_key_pair[1]] = activeobject;\r\n                    key = undef;\r\n                    activeobject = parent_key_pair[0];\r\n                } else if (ch == '-') {\r\n                    sign = -1;\r\n                } else {\r\n                    // must be number\r\n                    if (key === undef) {\r\n                        if (mapping.hasOwnProperty(ch)) {\r\n                            keyparts += mapping[ch];\r\n                            key = parseInt(keyparts, 16) * sign;\r\n                            sign = +1;\r\n                            keyparts = '';\r\n                        } else {\r\n                            keyparts += ch;\r\n                        }\r\n                    } else {\r\n                        if (mapping.hasOwnProperty(ch)) {\r\n                            valueparts += mapping[ch];\r\n                            activeobject[key] = parseInt(valueparts, 16) * sign;\r\n                            sign = +1;\r\n                            key = undef;\r\n                            valueparts = '';\r\n                        } else {\r\n                            valueparts += ch;\r\n                        }\r\n                    }\r\n                }\r\n            } // end while\r\n\r\n            return output;\r\n        };\r\n\r\n        // encoding = 'Unicode'\r\n        // NOT UTF8, NOT UTF16BE/LE, NOT UCS2BE/LE. NO clever BOM behavior\r\n        // Actual 16bit char codes used.\r\n        // no multi-byte logic here\r\n\r\n        // Unicode characters to WinAnsiEncoding:\r\n        // {402: 131, 8211: 150, 8212: 151, 8216: 145, 8217: 146, 8218: 130, 8220: 147, 8221: 148, 8222: 132, 8224: 134, 8225: 135, 8226: 149, 8230: 133, 8364: 128, 8240:137, 8249: 139, 8250: 155, 710: 136, 8482: 153, 338: 140, 339: 156, 732: 152, 352: 138, 353: 154, 376: 159, 381: 142, 382: 158}\r\n        // as you can see, all Unicode chars are outside of 0-255 range. No char code conflicts.\r\n        // this means that you can give Win cp1252 encoded strings to jsPDF for rendering directly\r\n        // as well as give strings with some (supported by these fonts) Unicode characters and\r\n        // these will be mapped to win cp1252\r\n        // for example, you can send char code (cp1252) 0x80 or (unicode) 0x20AC, getting \"Euro\" glyph displayed in both cases.\r\n\r\n        var encodingBlock = {\r\n                'codePages': ['WinAnsiEncoding'],\r\n                'WinAnsiEncoding': uncompress(\"{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}\")\r\n            },\r\n            encodings = {\r\n                'Unicode': {\r\n                    'Courier': encodingBlock,\r\n                    'Courier-Bold': encodingBlock,\r\n                    'Courier-BoldOblique': encodingBlock,\r\n                    'Courier-Oblique': encodingBlock,\r\n                    'Helvetica': encodingBlock,\r\n                    'Helvetica-Bold': encodingBlock,\r\n                    'Helvetica-BoldOblique': encodingBlock,\r\n                    'Helvetica-Oblique': encodingBlock,\r\n                    'Times-Roman': encodingBlock,\r\n                    'Times-Bold': encodingBlock,\r\n                    'Times-BoldItalic': encodingBlock,\r\n                    'Times-Italic': encodingBlock\r\n                        //\t, 'Symbol'\r\n                        //\t, 'ZapfDingbats'\r\n                }\r\n            }\r\n            /**\r\n         Resources:\r\n         Font metrics data is reprocessed derivative of contents of\r\n         \"Font Metrics for PDF Core 14 Fonts\" package, which exhibits the following copyright and license:\r\n\r\n         Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated. All Rights Reserved.\r\n\r\n         This file and the 14 PostScript(R) AFM files it accompanies may be used,\r\n         copied, and distributed for any purpose and without charge, with or without\r\n         modification, provided that all copyright notices are retained; that the AFM\r\n         files are not distributed without this file; that all modifications to this\r\n         file or any of the AFM files are prominently noted in the modified file(s);\r\n         and that this paragraph is not modified. Adobe Systems has no responsibility\r\n         or obligation to support the use of the AFM files.\r\n\r\n         */\r\n            ,\r\n            fontMetrics = {\r\n                'Unicode': {\r\n                    // all sizing numbers are n/fontMetricsFractionOf = one font size unit\r\n                    // this means that if fontMetricsFractionOf = 1000, and letter A's width is 476, it's\r\n                    // width is 476/1000 or 47.6% of its height (regardless of font size)\r\n                    // At this time this value applies to \"widths\" and \"kerning\" numbers.\r\n\r\n                    // char code 0 represents \"default\" (average) width - use it for chars missing in this table.\r\n                    // key 'fof' represents the \"fontMetricsFractionOf\" value\r\n\r\n                    'Courier-Oblique': uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\r\n                    'Times-BoldItalic': uncompress(\"{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}\"),\r\n                    'Helvetica-Bold': uncompress(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),\r\n                    'Courier': uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\r\n                    'Courier-BoldOblique': uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\r\n                    'Times-Bold': uncompress(\"{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}\")\r\n                        //, 'Symbol': uncompress(\"{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}\")\r\n                        ,\r\n                    'Helvetica': uncompress(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"),\r\n                    'Helvetica-BoldOblique': uncompress(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\")\r\n                        //, 'ZapfDingbats': uncompress(\"{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}\")\r\n                        ,\r\n                    'Courier-Bold': uncompress(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\r\n                    'Times-Italic': uncompress(\"{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}\"),\r\n                    'Times-Roman': uncompress(\"{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}\"),\r\n                    'Helvetica-Oblique': uncompress(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\")\r\n                }\r\n            };\r\n\r\n        /*\r\n     This event handler is fired when a new jsPDF object is initialized\r\n     This event handler appends metrics data to standard fonts within\r\n     that jsPDF instance. The metrics are mapped over Unicode character\r\n     codes, NOT CIDs or other codes matching the StandardEncoding table of the\r\n     standard PDF fonts.\r\n     Future:\r\n     Also included is the encoding maping table, converting Unicode (UCS-2, UTF-16)\r\n     char codes to StandardEncoding character codes. The encoding table is to be used\r\n     somewhere around \"pdfEscape\" call.\r\n     */\r\n\r\n        API.events.push(['addFont', function(font) {\r\n            var metrics,\r\n                unicode_section,\r\n                encoding = 'Unicode',\r\n                encodingBlock;\r\n\r\n            metrics = fontMetrics[encoding][font.PostScriptName];\r\n            if (metrics) {\r\n                if (font.metadata[encoding]) {\r\n                    unicode_section = font.metadata[encoding];\r\n                } else {\r\n                    unicode_section = font.metadata[encoding] = {};\r\n                }\r\n\r\n                unicode_section.widths = metrics.widths;\r\n                unicode_section.kerning = metrics.kerning;\r\n            }\r\n\r\n            encodingBlock = encodings[encoding][font.PostScriptName];\r\n            if (encodingBlock) {\r\n                if (font.metadata[encoding]) {\r\n                    unicode_section = font.metadata[encoding];\r\n                } else {\r\n                    unicode_section = font.metadata[encoding] = {};\r\n                }\r\n\r\n                unicode_section.encoding = encodingBlock;\r\n                if (encodingBlock.codePages && encodingBlock.codePages.length) {\r\n                    font.encoding = encodingBlock.codePages[0];\r\n                }\r\n            }\r\n        }]); // end of adding event handler\r\n    })(jsPDF.API);\r\n\r\n    /* FileSaver.js\r\n     * A saveAs() FileSaver implementation.\r\n     * 1.1.20151003\r\n     *\r\n     * By Eli Grey, http://eligrey.com\r\n     * License: MIT\r\n     *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\r\n     */\r\n\r\n    /*global self */\r\n    /*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\r\n\r\n    /*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\r\n\r\n    var saveAs = saveAs || (function(view) {\r\n        \"use strict\";\r\n        // IE <10 is explicitly unsupported\r\n        if (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\r\n            return;\r\n        }\r\n        var\r\n            doc = view.document\r\n            // only get URL when necessary in case Blob.js hasn't overridden it yet\r\n            ,\r\n            get_URL = function() {\r\n                return view.URL || view.webkitURL || view;\r\n            },\r\n            save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\r\n            can_use_save_link = \"download\" in save_link,\r\n            click = function(node) {\r\n                var event = new MouseEvent(\"click\");\r\n                node.dispatchEvent(event);\r\n            },\r\n            is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),\r\n            webkit_req_fs = view.webkitRequestFileSystem,\r\n            req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\r\n            throw_outside = function(ex) {\r\n                (view.setImmediate || view.setTimeout)(function() {\r\n                    throw ex;\r\n                }, 0);\r\n            },\r\n            force_saveable_type = \"application/octet-stream\",\r\n            fs_min_size = 0\r\n            // See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\r\n            // https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\r\n            // for the reasoning behind the timeout and revocation flow\r\n            ,\r\n            arbitrary_revoke_timeout = 500 // in ms\r\n            ,\r\n            revoke = function(file) {\r\n                var revoker = function() {\r\n                    if (typeof file === \"string\") { // file is an object URL\r\n                        get_URL().revokeObjectURL(file);\r\n                    } else { // file is a File\r\n                        file.remove();\r\n                    }\r\n                };\r\n                if (view.chrome) {\r\n                    revoker();\r\n                } else {\r\n                    setTimeout(revoker, arbitrary_revoke_timeout);\r\n                }\r\n            },\r\n            dispatch = function(filesaver, event_types, event) {\r\n                event_types = [].concat(event_types);\r\n                var i = event_types.length;\r\n                while (i--) {\r\n                    var listener = filesaver[\"on\" + event_types[i]];\r\n                    if (typeof listener === \"function\") {\r\n                        try {\r\n                            listener.call(filesaver, event || filesaver);\r\n                        } catch (ex) {\r\n                            throw_outside(ex);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            auto_bom = function(blob) {\r\n                // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n                if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n                    return new Blob([\"\\ufeff\", blob], { type: blob.type });\r\n                }\r\n                return blob;\r\n            },\r\n            FileSaver = function(blob, name, no_auto_bom) {\r\n                if (!no_auto_bom) {\r\n                    blob = auto_bom(blob);\r\n                }\r\n                // First try a.download, then web filesystem, then object URLs\r\n                var\r\n                    filesaver = this,\r\n                    type = blob.type,\r\n                    blob_changed = false,\r\n                    object_url, target_view, dispatch_all = function() {\r\n                        dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\r\n                    }\r\n                    // on any filesys errors revert to saving with object URLs\r\n                    ,\r\n                    fs_error = function() {\r\n                        if (target_view && is_safari && typeof FileReader !== \"undefined\") {\r\n                            // Safari doesn't allow downloading of blob urls\r\n                            var reader = new FileReader();\r\n                            reader.onloadend = function() {\r\n                                var base64Data = reader.result;\r\n                                target_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\r\n                                filesaver.readyState = filesaver.DONE;\r\n                                dispatch_all();\r\n                            };\r\n                            reader.readAsDataURL(blob);\r\n                            filesaver.readyState = filesaver.INIT;\r\n                            return;\r\n                        }\r\n                        // don't create more object URLs than needed\r\n                        if (blob_changed || !object_url) {\r\n                            object_url = get_URL().createObjectURL(blob);\r\n                        }\r\n                        if (target_view) {\r\n                            target_view.location.href = object_url;\r\n                        } else {\r\n                            var new_tab = view.open(object_url, \"_blank\");\r\n                            if (new_tab == undefined && is_safari) {\r\n                                //Apple do not allow window.open, see http://bit.ly/1kZffRI\r\n                                view.location.href = object_url\r\n                            }\r\n                        }\r\n                        filesaver.readyState = filesaver.DONE;\r\n                        dispatch_all();\r\n                        revoke(object_url);\r\n                    },\r\n                    abortable = function(func) {\r\n                        return function() {\r\n                            if (filesaver.readyState !== filesaver.DONE) {\r\n                                return func.apply(this, arguments);\r\n                            }\r\n                        };\r\n                    },\r\n                    create_if_not_found = { create: true, exclusive: false },\r\n                    slice;\r\n                filesaver.readyState = filesaver.INIT;\r\n                if (!name) {\r\n                    name = \"download\";\r\n                }\r\n                if (can_use_save_link) {\r\n                    object_url = get_URL().createObjectURL(blob);\r\n                    setTimeout(function() {\r\n                        save_link.href = object_url;\r\n                        save_link.download = name;\r\n                        click(save_link);\r\n                        dispatch_all();\r\n                        revoke(object_url);\r\n                        filesaver.readyState = filesaver.DONE;\r\n                    });\r\n                    return;\r\n                }\r\n                // Object and web filesystem URLs have a problem saving in Google Chrome when\r\n                // viewed in a tab, so I force save with application/octet-stream\r\n                // http://code.google.com/p/chromium/issues/detail?id=91158\r\n                // Update: Google errantly closed 91158, I submitted it again:\r\n                // https://code.google.com/p/chromium/issues/detail?id=389642\r\n                if (view.chrome && type && type !== force_saveable_type) {\r\n                    slice = blob.slice || blob.webkitSlice;\r\n                    blob = slice.call(blob, 0, blob.size, force_saveable_type);\r\n                    blob_changed = true;\r\n                }\r\n                // Since I can't be sure that the guessed media type will trigger a download\r\n                // in WebKit, I append .download to the filename.\r\n                // https://bugs.webkit.org/show_bug.cgi?id=65440\r\n                if (webkit_req_fs && name !== \"download\") {\r\n                    name += \".download\";\r\n                }\r\n                if (type === force_saveable_type || webkit_req_fs) {\r\n                    target_view = view;\r\n                }\r\n                if (!req_fs) {\r\n                    fs_error();\r\n                    return;\r\n                }\r\n                fs_min_size += blob.size;\r\n                req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\r\n                    fs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\r\n                        var save = function() {\r\n                            dir.getFile(name, create_if_not_found, abortable(function(file) {\r\n                                file.createWriter(abortable(function(writer) {\r\n                                    writer.onwriteend = function(event) {\r\n                                        target_view.location.href = file.toURL();\r\n                                        filesaver.readyState = filesaver.DONE;\r\n                                        dispatch(filesaver, \"writeend\", event);\r\n                                        revoke(file);\r\n                                    };\r\n                                    writer.onerror = function() {\r\n                                        var error = writer.error;\r\n                                        if (error.code !== error.ABORT_ERR) {\r\n                                            fs_error();\r\n                                        }\r\n                                    };\r\n                                    \"writestart progress write abort\".split(\" \").forEach(function(event) {\r\n                                        writer[\"on\" + event] = filesaver[\"on\" + event];\r\n                                    });\r\n                                    writer.write(blob);\r\n                                    filesaver.abort = function() {\r\n                                        writer.abort();\r\n                                        filesaver.readyState = filesaver.DONE;\r\n                                    };\r\n                                    filesaver.readyState = filesaver.WRITING;\r\n                                }), fs_error);\r\n                            }), fs_error);\r\n                        };\r\n                        dir.getFile(name, { create: false }, abortable(function(file) {\r\n                            // delete file if it already exists\r\n                            file.remove();\r\n                            save();\r\n                        }), abortable(function(ex) {\r\n                            if (ex.code === ex.NOT_FOUND_ERR) {\r\n                                save();\r\n                            } else {\r\n                                fs_error();\r\n                            }\r\n                        }));\r\n                    }), fs_error);\r\n                }), fs_error);\r\n            },\r\n            FS_proto = FileSaver.prototype,\r\n            saveAs = function(blob, name, no_auto_bom) {\r\n                return new FileSaver(blob, name, no_auto_bom);\r\n            };\r\n        // IE 10+ (native saveAs)\r\n        if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\r\n            return function(blob, name, no_auto_bom) {\r\n                if (!no_auto_bom) {\r\n                    blob = auto_bom(blob);\r\n                }\r\n                return navigator.msSaveOrOpenBlob(blob, name || \"download\");\r\n            };\r\n        }\r\n\r\n        FS_proto.abort = function() {\r\n            var filesaver = this;\r\n            filesaver.readyState = filesaver.DONE;\r\n            dispatch(filesaver, \"abort\");\r\n        };\r\n        FS_proto.readyState = FS_proto.INIT = 0;\r\n        FS_proto.WRITING = 1;\r\n        FS_proto.DONE = 2;\r\n\r\n        FS_proto.error =\r\n            FS_proto.onwritestart =\r\n            FS_proto.onprogress =\r\n            FS_proto.onwrite =\r\n            FS_proto.onabort =\r\n            FS_proto.onerror =\r\n            FS_proto.onwriteend =\r\n            null;\r\n\r\n        return saveAs;\r\n    }(\r\n        typeof self !== \"undefined\" && self ||\r\n        typeof window !== \"undefined\" && window ||\r\n        undefined.content\r\n    ));\r\n    // `self` is undefined in Firefox for Android content script context\r\n    // while `this` is nsIContentFrameMessageManager\r\n    // with an attribute `content` that corresponds to the window\r\n\r\n    // if (typeof module !== \"undefined\" && module.exports) {\r\n    //   module.exports.saveAs = saveAs;\r\n    // } else if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\r\n    //   define([], function() {\r\n    //     return saveAs;\r\n    //   });\r\n    // }\r\n\r\n    /*\r\n     * Copyright (c) 2012 chick307 <chick307@gmail.com>\r\n     *\r\n     * Licensed under the MIT License.\r\n     * http://opensource.org/licenses/mit-license\r\n     */\r\n\r\n    /**\r\n     * CssColors\r\n     * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\r\n     *\r\n     * Licensed under the MIT License.\r\n     * http://opensource.org/licenses/mit-license\r\n     */\r\n\r\n    /**\r\n     * Usage CssColors('red');\r\n     * Returns RGB hex color with '#' prefix\r\n     */\r\n\r\n    var CssColors = {};\r\n    CssColors._colorsTable = {\r\n        \"aliceblue\": \"#f0f8ff\",\r\n        \"antiquewhite\": \"#faebd7\",\r\n        \"aqua\": \"#00ffff\",\r\n        \"aquamarine\": \"#7fffd4\",\r\n        \"azure\": \"#f0ffff\",\r\n        \"beige\": \"#f5f5dc\",\r\n        \"bisque\": \"#ffe4c4\",\r\n        \"black\": \"#000000\",\r\n        \"blanchedalmond\": \"#ffebcd\",\r\n        \"blue\": \"#0000ff\",\r\n        \"blueviolet\": \"#8a2be2\",\r\n        \"brown\": \"#a52a2a\",\r\n        \"burlywood\": \"#deb887\",\r\n        \"cadetblue\": \"#5f9ea0\",\r\n        \"chartreuse\": \"#7fff00\",\r\n        \"chocolate\": \"#d2691e\",\r\n        \"coral\": \"#ff7f50\",\r\n        \"cornflowerblue\": \"#6495ed\",\r\n        \"cornsilk\": \"#fff8dc\",\r\n        \"crimson\": \"#dc143c\",\r\n        \"cyan\": \"#00ffff\",\r\n        \"darkblue\": \"#00008b\",\r\n        \"darkcyan\": \"#008b8b\",\r\n        \"darkgoldenrod\": \"#b8860b\",\r\n        \"darkgray\": \"#a9a9a9\",\r\n        \"darkgreen\": \"#006400\",\r\n        \"darkkhaki\": \"#bdb76b\",\r\n        \"darkmagenta\": \"#8b008b\",\r\n        \"darkolivegreen\": \"#556b2f\",\r\n        \"darkorange\": \"#ff8c00\",\r\n        \"darkorchid\": \"#9932cc\",\r\n        \"darkred\": \"#8b0000\",\r\n        \"darksalmon\": \"#e9967a\",\r\n        \"darkseagreen\": \"#8fbc8f\",\r\n        \"darkslateblue\": \"#483d8b\",\r\n        \"darkslategray\": \"#2f4f4f\",\r\n        \"darkturquoise\": \"#00ced1\",\r\n        \"darkviolet\": \"#9400d3\",\r\n        \"deeppink\": \"#ff1493\",\r\n        \"deepskyblue\": \"#00bfff\",\r\n        \"dimgray\": \"#696969\",\r\n        \"dodgerblue\": \"#1e90ff\",\r\n        \"firebrick\": \"#b22222\",\r\n        \"floralwhite\": \"#fffaf0\",\r\n        \"forestgreen\": \"#228b22\",\r\n        \"fuchsia\": \"#ff00ff\",\r\n        \"gainsboro\": \"#dcdcdc\",\r\n        \"ghostwhite\": \"#f8f8ff\",\r\n        \"gold\": \"#ffd700\",\r\n        \"goldenrod\": \"#daa520\",\r\n        \"gray\": \"#808080\",\r\n        \"green\": \"#008000\",\r\n        \"greenyellow\": \"#adff2f\",\r\n        \"honeydew\": \"#f0fff0\",\r\n        \"hotpink\": \"#ff69b4\",\r\n        \"indianred \": \"#cd5c5c\",\r\n        \"indigo\": \"#4b0082\",\r\n        \"ivory\": \"#fffff0\",\r\n        \"khaki\": \"#f0e68c\",\r\n        \"lavender\": \"#e6e6fa\",\r\n        \"lavenderblush\": \"#fff0f5\",\r\n        \"lawngreen\": \"#7cfc00\",\r\n        \"lemonchiffon\": \"#fffacd\",\r\n        \"lightblue\": \"#add8e6\",\r\n        \"lightcoral\": \"#f08080\",\r\n        \"lightcyan\": \"#e0ffff\",\r\n        \"lightgoldenrodyellow\": \"#fafad2\",\r\n        \"lightgrey\": \"#d3d3d3\",\r\n        \"lightgreen\": \"#90ee90\",\r\n        \"lightpink\": \"#ffb6c1\",\r\n        \"lightsalmon\": \"#ffa07a\",\r\n        \"lightseagreen\": \"#20b2aa\",\r\n        \"lightskyblue\": \"#87cefa\",\r\n        \"lightslategray\": \"#778899\",\r\n        \"lightsteelblue\": \"#b0c4de\",\r\n        \"lightyellow\": \"#ffffe0\",\r\n        \"lime\": \"#00ff00\",\r\n        \"limegreen\": \"#32cd32\",\r\n        \"linen\": \"#faf0e6\",\r\n        \"magenta\": \"#ff00ff\",\r\n        \"maroon\": \"#800000\",\r\n        \"mediumaquamarine\": \"#66cdaa\",\r\n        \"mediumblue\": \"#0000cd\",\r\n        \"mediumorchid\": \"#ba55d3\",\r\n        \"mediumpurple\": \"#9370d8\",\r\n        \"mediumseagreen\": \"#3cb371\",\r\n        \"mediumslateblue\": \"#7b68ee\",\r\n        \"mediumspringgreen\": \"#00fa9a\",\r\n        \"mediumturquoise\": \"#48d1cc\",\r\n        \"mediumvioletred\": \"#c71585\",\r\n        \"midnightblue\": \"#191970\",\r\n        \"mintcream\": \"#f5fffa\",\r\n        \"mistyrose\": \"#ffe4e1\",\r\n        \"moccasin\": \"#ffe4b5\",\r\n        \"navajowhite\": \"#ffdead\",\r\n        \"navy\": \"#000080\",\r\n        \"oldlace\": \"#fdf5e6\",\r\n        \"olive\": \"#808000\",\r\n        \"olivedrab\": \"#6b8e23\",\r\n        \"orange\": \"#ffa500\",\r\n        \"orangered\": \"#ff4500\",\r\n        \"orchid\": \"#da70d6\",\r\n        \"palegoldenrod\": \"#eee8aa\",\r\n        \"palegreen\": \"#98fb98\",\r\n        \"paleturquoise\": \"#afeeee\",\r\n        \"palevioletred\": \"#d87093\",\r\n        \"papayawhip\": \"#ffefd5\",\r\n        \"peachpuff\": \"#ffdab9\",\r\n        \"peru\": \"#cd853f\",\r\n        \"pink\": \"#ffc0cb\",\r\n        \"plum\": \"#dda0dd\",\r\n        \"powderblue\": \"#b0e0e6\",\r\n        \"purple\": \"#800080\",\r\n        \"red\": \"#ff0000\",\r\n        \"rosybrown\": \"#bc8f8f\",\r\n        \"royalblue\": \"#4169e1\",\r\n        \"saddlebrown\": \"#8b4513\",\r\n        \"salmon\": \"#fa8072\",\r\n        \"sandybrown\": \"#f4a460\",\r\n        \"seagreen\": \"#2e8b57\",\r\n        \"seashell\": \"#fff5ee\",\r\n        \"sienna\": \"#a0522d\",\r\n        \"silver\": \"#c0c0c0\",\r\n        \"skyblue\": \"#87ceeb\",\r\n        \"slateblue\": \"#6a5acd\",\r\n        \"slategray\": \"#708090\",\r\n        \"snow\": \"#fffafa\",\r\n        \"springgreen\": \"#00ff7f\",\r\n        \"steelblue\": \"#4682b4\",\r\n        \"tan\": \"#d2b48c\",\r\n        \"teal\": \"#008080\",\r\n        \"thistle\": \"#d8bfd8\",\r\n        \"tomato\": \"#ff6347\",\r\n        \"turquoise\": \"#40e0d0\",\r\n        \"violet\": \"#ee82ee\",\r\n        \"wheat\": \"#f5deb3\",\r\n        \"white\": \"#ffffff\",\r\n        \"whitesmoke\": \"#f5f5f5\",\r\n        \"yellow\": \"#ffff00\",\r\n        \"yellowgreen\": \"#9acd32\"\r\n    };\r\n\r\n    CssColors.colorNameToHex = function(color) {\r\n        color = color.toLowerCase();\r\n        if (typeof this._colorsTable[color] != 'undefined')\r\n            return this._colorsTable[color];\r\n\r\n        return false;\r\n    };\r\n\r\n    /*\r\n     Deflate.js - https://github.com/gildas-lormeau/zip.js\r\n     Copyright (c) 2013 Gildas Lormeau. All rights reserved.\r\n\r\n     Redistribution and use in source and binary forms, with or without\r\n     modification, are permitted provided that the following conditions are met:\r\n\r\n     1. Redistributions of source code must retain the above copyright notice,\r\n     this list of conditions and the following disclaimer.\r\n\r\n     2. Redistributions in binary form must reproduce the above copyright\r\n     notice, this list of conditions and the following disclaimer in\r\n     the documentation and/or other materials provided with the distribution.\r\n\r\n     3. The names of the authors may not be used to endorse or promote products\r\n     derived from this software without specific prior written permission.\r\n\r\n     THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\r\n     INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n     FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\r\n     INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n     INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n     LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n     OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n     LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n     */\r\n\r\n    /*\r\n     * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\r\n     * JZlib is based on zlib-1.1.3, so all credit should go authors\r\n     * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\r\n     * and contributors of zlib.\r\n     */\r\n\r\n    var Deflater = (function(obj) {\r\n\r\n        // Global\r\n\r\n        var MAX_BITS = 15;\r\n        var D_CODES = 30;\r\n        var BL_CODES = 19;\r\n\r\n        var LENGTH_CODES = 29;\r\n        var LITERALS = 256;\r\n        var L_CODES = (LITERALS + 1 + LENGTH_CODES);\r\n        var HEAP_SIZE = (2 * L_CODES + 1);\r\n\r\n        var END_BLOCK = 256;\r\n\r\n        // Bit length codes must not exceed MAX_BL_BITS bits\r\n        var MAX_BL_BITS = 7;\r\n\r\n        // repeat previous bit length 3-6 times (2 bits of repeat count)\r\n        var REP_3_6 = 16;\r\n\r\n        // repeat a zero length 3-10 times (3 bits of repeat count)\r\n        var REPZ_3_10 = 17;\r\n\r\n        // repeat a zero length 11-138 times (7 bits of repeat count)\r\n        var REPZ_11_138 = 18;\r\n\r\n        // The lengths of the bit length codes are sent in order of decreasing\r\n        // probability, to avoid transmitting the lengths for unused bit\r\n        // length codes.\r\n\r\n        var Buf_size = 8 * 2;\r\n\r\n        // JZlib version : \"1.0.2\"\r\n        var Z_DEFAULT_COMPRESSION = -1;\r\n\r\n        // compression strategy\r\n        var Z_FILTERED = 1;\r\n        var Z_HUFFMAN_ONLY = 2;\r\n        var Z_DEFAULT_STRATEGY = 0;\r\n\r\n        var Z_NO_FLUSH = 0;\r\n        var Z_PARTIAL_FLUSH = 1;\r\n        var Z_FULL_FLUSH = 3;\r\n        var Z_FINISH = 4;\r\n\r\n        var Z_OK = 0;\r\n        var Z_STREAM_END = 1;\r\n        var Z_NEED_DICT = 2;\r\n        var Z_STREAM_ERROR = -2;\r\n        var Z_DATA_ERROR = -3;\r\n        var Z_BUF_ERROR = -5;\r\n\r\n        // Tree\r\n\r\n        // see definition of array dist_code below\r\n        var _dist_code = [0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\r\n            10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\r\n            12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\r\n            13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\r\n            14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\r\n            14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\r\n            15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0, 0, 16, 17, 18, 18, 19, 19,\r\n            20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n            24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\r\n            26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,\r\n            27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\r\n            28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29,\r\n            29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,\r\n            29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29\r\n        ];\r\n\r\n        function Tree() {\r\n            var that = this;\r\n\r\n            // dyn_tree; // the dynamic tree\r\n            // max_code; // largest code with non zero frequency\r\n            // stat_desc; // the corresponding static tree\r\n\r\n            // Compute the optimal bit lengths for a tree and update the total bit\r\n            // length\r\n            // for the current block.\r\n            // IN assertion: the fields freq and dad are set, heap[heap_max] and\r\n            // above are the tree nodes sorted by increasing frequency.\r\n            // OUT assertions: the field len is set to the optimal bit length, the\r\n            // array bl_count contains the frequencies for each bit length.\r\n            // The length opt_len is updated; static_len is also updated if stree is\r\n            // not null.\r\n            function gen_bitlen(s) {\r\n                var tree = that.dyn_tree;\r\n                var stree = that.stat_desc.static_tree;\r\n                var extra = that.stat_desc.extra_bits;\r\n                var base = that.stat_desc.extra_base;\r\n                var max_length = that.stat_desc.max_length;\r\n                var h; // heap index\r\n                var n, m; // iterate over the tree elements\r\n                var bits; // bit length\r\n                var xbits; // extra bits\r\n                var f; // frequency\r\n                var overflow = 0; // number of elements with bit length too large\r\n\r\n                for (bits = 0; bits <= MAX_BITS; bits++)\r\n                    s.bl_count[bits] = 0;\r\n\r\n                // In a first pass, compute the optimal bit lengths (which may\r\n                // overflow in the case of the bit length tree).\r\n                tree[s.heap[s.heap_max] * 2 + 1] = 0; // root of the heap\r\n\r\n                for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\r\n                    n = s.heap[h];\r\n                    bits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\r\n                    if (bits > max_length) {\r\n                        bits = max_length;\r\n                        overflow++;\r\n                    }\r\n                    tree[n * 2 + 1] = bits;\r\n                    // We overwrite tree[n*2+1] which is no longer needed\r\n\r\n                    if (n > that.max_code)\r\n                        continue; // not a leaf node\r\n\r\n                    s.bl_count[bits]++;\r\n                    xbits = 0;\r\n                    if (n >= base)\r\n                        xbits = extra[n - base];\r\n                    f = tree[n * 2];\r\n                    s.opt_len += f * (bits + xbits);\r\n                    if (stree)\r\n                        s.static_len += f * (stree[n * 2 + 1] + xbits);\r\n                }\r\n                if (overflow === 0)\r\n                    return;\r\n\r\n                // This happens for example on obj2 and pic of the Calgary corpus\r\n                // Find the first bit length which could increase:\r\n                do {\r\n                    bits = max_length - 1;\r\n                    while (s.bl_count[bits] === 0)\r\n                        bits--;\r\n                    s.bl_count[bits]--; // move one leaf down the tree\r\n                    s.bl_count[bits + 1] += 2; // move one overflow item as its brother\r\n                    s.bl_count[max_length]--;\r\n                    // The brother of the overflow item also moves one step up,\r\n                    // but this does not affect bl_count[max_length]\r\n                    overflow -= 2;\r\n                } while (overflow > 0);\r\n\r\n                for (bits = max_length; bits !== 0; bits--) {\r\n                    n = s.bl_count[bits];\r\n                    while (n !== 0) {\r\n                        m = s.heap[--h];\r\n                        if (m > that.max_code)\r\n                            continue;\r\n                        if (tree[m * 2 + 1] != bits) {\r\n                            s.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];\r\n                            tree[m * 2 + 1] = bits;\r\n                        }\r\n                        n--;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Reverse the first len bits of a code, using straightforward code (a\r\n            // faster\r\n            // method would use a table)\r\n            // IN assertion: 1 <= len <= 15\r\n            function bi_reverse(code, // the value to invert\r\n                len // its bit length\r\n            ) {\r\n                var res = 0;\r\n                do {\r\n                    res |= code & 1;\r\n                    code >>>= 1;\r\n                    res <<= 1;\r\n                } while (--len > 0);\r\n                return res >>> 1;\r\n            }\r\n\r\n            // Generate the codes for a given tree and bit counts (which need not be\r\n            // optimal).\r\n            // IN assertion: the array bl_count contains the bit length statistics for\r\n            // the given tree and the field len is set for all tree elements.\r\n            // OUT assertion: the field code is set for all tree elements of non\r\n            // zero code length.\r\n            function gen_codes(tree, // the tree to decorate\r\n                max_code, // largest code with non zero frequency\r\n                bl_count // number of codes at each bit length\r\n            ) {\r\n                var next_code = []; // next code value for each\r\n                // bit length\r\n                var code = 0; // running code value\r\n                var bits; // bit index\r\n                var n; // code index\r\n                var len;\r\n\r\n                // The distribution counts are first used to generate the code values\r\n                // without bit reversal.\r\n                for (bits = 1; bits <= MAX_BITS; bits++) {\r\n                    next_code[bits] = code = ((code + bl_count[bits - 1]) << 1);\r\n                }\r\n\r\n                // Check that the bit counts in bl_count are consistent. The last code\r\n                // must be all ones.\r\n                // Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\r\n                // \"inconsistent bit counts\");\r\n                // Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\r\n\r\n                for (n = 0; n <= max_code; n++) {\r\n                    len = tree[n * 2 + 1];\r\n                    if (len === 0)\r\n                        continue;\r\n                    // Now reverse the bits\r\n                    tree[n * 2] = bi_reverse(next_code[len]++, len);\r\n                }\r\n            }\r\n\r\n            // Construct one Huffman tree and assigns the code bit strings and lengths.\r\n            // Update the total bit length for the current block.\r\n            // IN assertion: the field freq is set for all tree elements.\r\n            // OUT assertions: the fields len and code are set to the optimal bit length\r\n            // and corresponding code. The length opt_len is updated; static_len is\r\n            // also updated if stree is not null. The field max_code is set.\r\n            that.build_tree = function(s) {\r\n                var tree = that.dyn_tree;\r\n                var stree = that.stat_desc.static_tree;\r\n                var elems = that.stat_desc.elems;\r\n                var n, m; // iterate over heap elements\r\n                var max_code = -1; // largest code with non zero frequency\r\n                var node; // new node being created\r\n\r\n                // Construct the initial heap, with least frequent element in\r\n                // heap[1]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\r\n                // heap[0] is not used.\r\n                s.heap_len = 0;\r\n                s.heap_max = HEAP_SIZE;\r\n\r\n                for (n = 0; n < elems; n++) {\r\n                    if (tree[n * 2] !== 0) {\r\n                        s.heap[++s.heap_len] = max_code = n;\r\n                        s.depth[n] = 0;\r\n                    } else {\r\n                        tree[n * 2 + 1] = 0;\r\n                    }\r\n                }\r\n\r\n                // The pkzip format requires that at least one distance code exists,\r\n                // and that at least one bit should be sent even if there is only one\r\n                // possible code. So to avoid special checks later on we force at least\r\n                // two codes of non zero frequency.\r\n                while (s.heap_len < 2) {\r\n                    node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\r\n                    tree[node * 2] = 1;\r\n                    s.depth[node] = 0;\r\n                    s.opt_len--;\r\n                    if (stree)\r\n                        s.static_len -= stree[node * 2 + 1];\r\n                    // node is 0 or 1 so it does not have extra bits\r\n                }\r\n                that.max_code = max_code;\r\n\r\n                // The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\r\n                // establish sub-heaps of increasing lengths:\r\n\r\n                for (n = Math.floor(s.heap_len / 2); n >= 1; n--)\r\n                    s.pqdownheap(tree, n);\r\n\r\n                // Construct the Huffman tree by repeatedly combining the least two\r\n                // frequent nodes.\r\n\r\n                node = elems; // next internal node of the tree\r\n                do {\r\n                    // n = node of least frequency\r\n                    n = s.heap[1];\r\n                    s.heap[1] = s.heap[s.heap_len--];\r\n                    s.pqdownheap(tree, 1);\r\n                    m = s.heap[1]; // m = node of next least frequency\r\n\r\n                    s.heap[--s.heap_max] = n; // keep the nodes sorted by frequency\r\n                    s.heap[--s.heap_max] = m;\r\n\r\n                    // Create a new node father of n and m\r\n                    tree[node * 2] = (tree[n * 2] + tree[m * 2]);\r\n                    s.depth[node] = Math.max(s.depth[n], s.depth[m]) + 1;\r\n                    tree[n * 2 + 1] = tree[m * 2 + 1] = node;\r\n\r\n                    // and insert the new node in the heap\r\n                    s.heap[1] = node++;\r\n                    s.pqdownheap(tree, 1);\r\n                } while (s.heap_len >= 2);\r\n\r\n                s.heap[--s.heap_max] = s.heap[1];\r\n\r\n                // At this point, the fields freq and dad are set. We can now\r\n                // generate the bit lengths.\r\n\r\n                gen_bitlen(s);\r\n\r\n                // The field len is now set, we can generate the bit codes\r\n                gen_codes(tree, that.max_code, s.bl_count);\r\n            };\r\n\r\n        }\r\n\r\n        Tree._length_code = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16,\r\n            16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20,\r\n            20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\r\n            22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n            24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,\r\n            25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\r\n            26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28\r\n        ];\r\n\r\n        Tree.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0];\r\n\r\n        Tree.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384,\r\n            24576\r\n        ];\r\n\r\n        // Mapping from a distance to a distance code. dist is the distance - 1 and\r\n        // must not have side effects. _dist_code[256] and _dist_code[257] are never\r\n        // used.\r\n        Tree.d_code = function(dist) {\r\n            return ((dist) < 256 ? _dist_code[dist] : _dist_code[256 + ((dist) >>> 7)]);\r\n        };\r\n\r\n        // extra bits for each length code\r\n        Tree.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\r\n\r\n        // extra bits for each distance code\r\n        Tree.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\r\n\r\n        // extra bits for each bit length code\r\n        Tree.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\r\n\r\n        Tree.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\r\n\r\n        // StaticTree\r\n\r\n        function StaticTree(static_tree, extra_bits, extra_base, elems, max_length) {\r\n            var that = this;\r\n            that.static_tree = static_tree;\r\n            that.extra_bits = extra_bits;\r\n            that.extra_base = extra_base;\r\n            that.elems = elems;\r\n            that.max_length = max_length;\r\n        }\r\n\r\n        StaticTree.static_ltree = [12, 8, 140, 8, 76, 8, 204, 8, 44, 8, 172, 8, 108, 8, 236, 8, 28, 8, 156, 8, 92, 8, 220, 8, 60, 8, 188, 8, 124, 8, 252, 8, 2, 8,\r\n            130, 8, 66, 8, 194, 8, 34, 8, 162, 8, 98, 8, 226, 8, 18, 8, 146, 8, 82, 8, 210, 8, 50, 8, 178, 8, 114, 8, 242, 8, 10, 8, 138, 8, 74, 8, 202, 8, 42,\r\n            8, 170, 8, 106, 8, 234, 8, 26, 8, 154, 8, 90, 8, 218, 8, 58, 8, 186, 8, 122, 8, 250, 8, 6, 8, 134, 8, 70, 8, 198, 8, 38, 8, 166, 8, 102, 8, 230, 8,\r\n            22, 8, 150, 8, 86, 8, 214, 8, 54, 8, 182, 8, 118, 8, 246, 8, 14, 8, 142, 8, 78, 8, 206, 8, 46, 8, 174, 8, 110, 8, 238, 8, 30, 8, 158, 8, 94, 8,\r\n            222, 8, 62, 8, 190, 8, 126, 8, 254, 8, 1, 8, 129, 8, 65, 8, 193, 8, 33, 8, 161, 8, 97, 8, 225, 8, 17, 8, 145, 8, 81, 8, 209, 8, 49, 8, 177, 8, 113,\r\n            8, 241, 8, 9, 8, 137, 8, 73, 8, 201, 8, 41, 8, 169, 8, 105, 8, 233, 8, 25, 8, 153, 8, 89, 8, 217, 8, 57, 8, 185, 8, 121, 8, 249, 8, 5, 8, 133, 8,\r\n            69, 8, 197, 8, 37, 8, 165, 8, 101, 8, 229, 8, 21, 8, 149, 8, 85, 8, 213, 8, 53, 8, 181, 8, 117, 8, 245, 8, 13, 8, 141, 8, 77, 8, 205, 8, 45, 8,\r\n            173, 8, 109, 8, 237, 8, 29, 8, 157, 8, 93, 8, 221, 8, 61, 8, 189, 8, 125, 8, 253, 8, 19, 9, 275, 9, 147, 9, 403, 9, 83, 9, 339, 9, 211, 9, 467, 9,\r\n            51, 9, 307, 9, 179, 9, 435, 9, 115, 9, 371, 9, 243, 9, 499, 9, 11, 9, 267, 9, 139, 9, 395, 9, 75, 9, 331, 9, 203, 9, 459, 9, 43, 9, 299, 9, 171, 9,\r\n            427, 9, 107, 9, 363, 9, 235, 9, 491, 9, 27, 9, 283, 9, 155, 9, 411, 9, 91, 9, 347, 9, 219, 9, 475, 9, 59, 9, 315, 9, 187, 9, 443, 9, 123, 9, 379,\r\n            9, 251, 9, 507, 9, 7, 9, 263, 9, 135, 9, 391, 9, 71, 9, 327, 9, 199, 9, 455, 9, 39, 9, 295, 9, 167, 9, 423, 9, 103, 9, 359, 9, 231, 9, 487, 9, 23,\r\n            9, 279, 9, 151, 9, 407, 9, 87, 9, 343, 9, 215, 9, 471, 9, 55, 9, 311, 9, 183, 9, 439, 9, 119, 9, 375, 9, 247, 9, 503, 9, 15, 9, 271, 9, 143, 9,\r\n            399, 9, 79, 9, 335, 9, 207, 9, 463, 9, 47, 9, 303, 9, 175, 9, 431, 9, 111, 9, 367, 9, 239, 9, 495, 9, 31, 9, 287, 9, 159, 9, 415, 9, 95, 9, 351, 9,\r\n            223, 9, 479, 9, 63, 9, 319, 9, 191, 9, 447, 9, 127, 9, 383, 9, 255, 9, 511, 9, 0, 7, 64, 7, 32, 7, 96, 7, 16, 7, 80, 7, 48, 7, 112, 7, 8, 7, 72, 7,\r\n            40, 7, 104, 7, 24, 7, 88, 7, 56, 7, 120, 7, 4, 7, 68, 7, 36, 7, 100, 7, 20, 7, 84, 7, 52, 7, 116, 7, 3, 8, 131, 8, 67, 8, 195, 8, 35, 8, 163, 8,\r\n            99, 8, 227, 8\r\n        ];\r\n\r\n        StaticTree.static_dtree = [0, 5, 16, 5, 8, 5, 24, 5, 4, 5, 20, 5, 12, 5, 28, 5, 2, 5, 18, 5, 10, 5, 26, 5, 6, 5, 22, 5, 14, 5, 30, 5, 1, 5, 17, 5, 9, 5,\r\n            25, 5, 5, 5, 21, 5, 13, 5, 29, 5, 3, 5, 19, 5, 11, 5, 27, 5, 7, 5, 23, 5\r\n        ];\r\n\r\n        StaticTree.static_l_desc = new StaticTree(StaticTree.static_ltree, Tree.extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\r\n\r\n        StaticTree.static_d_desc = new StaticTree(StaticTree.static_dtree, Tree.extra_dbits, 0, D_CODES, MAX_BITS);\r\n\r\n        StaticTree.static_bl_desc = new StaticTree(null, Tree.extra_blbits, 0, BL_CODES, MAX_BL_BITS);\r\n\r\n        // Deflate\r\n\r\n        var MAX_MEM_LEVEL = 9;\r\n        var DEF_MEM_LEVEL = 8;\r\n\r\n        function Config(good_length, max_lazy, nice_length, max_chain, func) {\r\n            var that = this;\r\n            that.good_length = good_length;\r\n            that.max_lazy = max_lazy;\r\n            that.nice_length = nice_length;\r\n            that.max_chain = max_chain;\r\n            that.func = func;\r\n        }\r\n\r\n        var STORED = 0;\r\n        var FAST = 1;\r\n        var SLOW = 2;\r\n        var config_table = [new Config(0, 0, 0, 0, STORED), new Config(4, 4, 8, 4, FAST), new Config(4, 5, 16, 8, FAST), new Config(4, 6, 32, 32, FAST),\r\n            new Config(4, 4, 16, 16, SLOW), new Config(8, 16, 32, 32, SLOW), new Config(8, 16, 128, 128, SLOW), new Config(8, 32, 128, 256, SLOW),\r\n            new Config(32, 128, 258, 1024, SLOW), new Config(32, 258, 258, 4096, SLOW)\r\n        ];\r\n\r\n        var z_errmsg = [\"need dictionary\", // Z_NEED_DICT\r\n            // 2\r\n            \"stream end\", // Z_STREAM_END 1\r\n            \"\", // Z_OK 0\r\n            \"\", // Z_ERRNO (-1)\r\n            \"stream error\", // Z_STREAM_ERROR (-2)\r\n            \"data error\", // Z_DATA_ERROR (-3)\r\n            \"\", // Z_MEM_ERROR (-4)\r\n            \"buffer error\", // Z_BUF_ERROR (-5)\r\n            \"\", // Z_VERSION_ERROR (-6)\r\n            \"\"\r\n        ];\r\n\r\n        // block not completed, need more input or more output\r\n        var NeedMore = 0;\r\n\r\n        // block flush performed\r\n        var BlockDone = 1;\r\n\r\n        // finish started, need only more output at next deflate\r\n        var FinishStarted = 2;\r\n\r\n        // finish done, accept no more input or output\r\n        var FinishDone = 3;\r\n\r\n        // preset dictionary flag in zlib header\r\n        var PRESET_DICT = 0x20;\r\n\r\n        var INIT_STATE = 42;\r\n        var BUSY_STATE = 113;\r\n        var FINISH_STATE = 666;\r\n\r\n        // The deflate compression method\r\n        var Z_DEFLATED = 8;\r\n\r\n        var STORED_BLOCK = 0;\r\n        var STATIC_TREES = 1;\r\n        var DYN_TREES = 2;\r\n\r\n        var MIN_MATCH = 3;\r\n        var MAX_MATCH = 258;\r\n        var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\r\n\r\n        function smaller(tree, n, m, depth) {\r\n            var tn2 = tree[n * 2];\r\n            var tm2 = tree[m * 2];\r\n            return (tn2 < tm2 || (tn2 == tm2 && depth[n] <= depth[m]));\r\n        }\r\n\r\n        function Deflate() {\r\n\r\n            var that = this;\r\n            var strm; // pointer back to this zlib stream\r\n            var status; // as the name implies\r\n            // pending_buf; // output still pending\r\n            var pending_buf_size; // size of pending_buf\r\n            // pending_out; // next pending byte to output to the stream\r\n            // pending; // nb of bytes in the pending buffer\r\n            var method; // STORED (for zip only) or DEFLATED\r\n            var last_flush; // value of flush param for previous deflate call\r\n\r\n            var w_size; // LZ77 window size (32K by default)\r\n            var w_bits; // log2(w_size) (8..16)\r\n            var w_mask; // w_size - 1\r\n\r\n            var window;\r\n            // Sliding window. Input bytes are read into the second half of the window,\r\n            // and move to the first half later to keep a dictionary of at least wSize\r\n            // bytes. With this organization, matches are limited to a distance of\r\n            // wSize-MAX_MATCH bytes, but this ensures that IO is always\r\n            // performed with a length multiple of the block size. Also, it limits\r\n            // the window size to 64K, which is quite useful on MSDOS.\r\n            // To do: use the user input buffer as sliding window.\r\n\r\n            var window_size;\r\n            // Actual size of window: 2*wSize, except when the user input buffer\r\n            // is directly used as sliding window.\r\n\r\n            var prev;\r\n            // Link to older string with same hash index. To limit the size of this\r\n            // array to 64K, this link is maintained only for the last 32K strings.\r\n            // An index in this array is thus a window index modulo 32K.\r\n\r\n            var head; // Heads of the hash chains or NIL.\r\n\r\n            var ins_h; // hash index of string to be inserted\r\n            var hash_size; // number of elements in hash table\r\n            var hash_bits; // log2(hash_size)\r\n            var hash_mask; // hash_size-1\r\n\r\n            // Number of bits by which ins_h must be shifted at each input\r\n            // step. It must be such that after MIN_MATCH steps, the oldest\r\n            // byte no longer takes part in the hash key, that is:\r\n            // hash_shift * MIN_MATCH >= hash_bits\r\n            var hash_shift;\r\n\r\n            // Window position at the beginning of the current output block. Gets\r\n            // negative when the window is moved backwards.\r\n\r\n            var block_start;\r\n\r\n            var match_length; // length of best match\r\n            var prev_match; // previous match\r\n            var match_available; // set if previous match exists\r\n            var strstart; // start of string to insert\r\n            var match_start; // start of matching string\r\n            var lookahead; // number of valid bytes ahead in window\r\n\r\n            // Length of the best match at previous step. Matches not greater than this\r\n            // are discarded. This is used in the lazy match evaluation.\r\n            var prev_length;\r\n\r\n            // To speed up deflation, hash chains are never searched beyond this\r\n            // length. A higher limit improves compression ratio but degrades the speed.\r\n            var max_chain_length;\r\n\r\n            // Attempt to find a better match only when the current match is strictly\r\n            // smaller than this value. This mechanism is used only for compression\r\n            // levels >= 4.\r\n            var max_lazy_match;\r\n\r\n            // Insert new strings in the hash table only if the match length is not\r\n            // greater than this length. This saves time but degrades compression.\r\n            // max_insert_length is used only for compression levels <= 3.\r\n\r\n            var level; // compression level (1..9)\r\n            var strategy; // favor or force Huffman coding\r\n\r\n            // Use a faster search when the previous match is longer than this\r\n            var good_match;\r\n\r\n            // Stop searching when current match exceeds this\r\n            var nice_match;\r\n\r\n            var dyn_ltree; // literal and length tree\r\n            var dyn_dtree; // distance tree\r\n            var bl_tree; // Huffman tree for bit lengths\r\n\r\n            var l_desc = new Tree(); // desc for literal tree\r\n            var d_desc = new Tree(); // desc for distance tree\r\n            var bl_desc = new Tree(); // desc for bit length tree\r\n\r\n            // that.heap_len; // number of elements in the heap\r\n            // that.heap_max; // element of largest frequency\r\n            // The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\r\n            // The same heap array is used to build all trees.\r\n\r\n            // Depth of each subtree used as tie breaker for trees of equal frequency\r\n            that.depth = [];\r\n\r\n            var l_buf; // index for literals or lengths */\r\n\r\n            // Size of match buffer for literals/lengths. There are 4 reasons for\r\n            // limiting lit_bufsize to 64K:\r\n            // - frequencies can be kept in 16 bit counters\r\n            // - if compression is not successful for the first block, all input\r\n            // data is still in the window so we can still emit a stored block even\r\n            // when input comes from standard input. (This can also be done for\r\n            // all blocks if lit_bufsize is not greater than 32K.)\r\n            // - if compression is not successful for a file smaller than 64K, we can\r\n            // even emit a stored file instead of a stored block (saving 5 bytes).\r\n            // This is applicable only for zip (not gzip or zlib).\r\n            // - creating new Huffman trees less frequently may not provide fast\r\n            // adaptation to changes in the input data statistics. (Take for\r\n            // example a binary file with poorly compressible code followed by\r\n            // a highly compressible string table.) Smaller buffer sizes give\r\n            // fast adaptation but have of course the overhead of transmitting\r\n            // trees more frequently.\r\n            // - I can't count above 4\r\n            var lit_bufsize;\r\n\r\n            var last_lit; // running index in l_buf\r\n\r\n            // Buffer for distances. To simplify the code, d_buf and l_buf have\r\n            // the same number of elements. To use different lengths, an extra flag\r\n            // array would be necessary.\r\n\r\n            var d_buf; // index of pendig_buf\r\n\r\n            // that.opt_len; // bit length of current block with optimal trees\r\n            // that.static_len; // bit length of current block with static trees\r\n            var matches; // number of string matches in current block\r\n            var last_eob_len; // bit length of EOB code for last block\r\n\r\n            // Output buffer. bits are inserted starting at the bottom (least\r\n            // significant bits).\r\n            var bi_buf;\r\n\r\n            // Number of valid bits in bi_buf. All bits above the last valid bit\r\n            // are always zero.\r\n            var bi_valid;\r\n\r\n            // number of codes at each bit length for an optimal tree\r\n            that.bl_count = [];\r\n\r\n            // heap used to build the Huffman trees\r\n            that.heap = [];\r\n\r\n            dyn_ltree = [];\r\n            dyn_dtree = [];\r\n            bl_tree = [];\r\n\r\n            function lm_init() {\r\n                var i;\r\n                window_size = 2 * w_size;\r\n\r\n                head[hash_size - 1] = 0;\r\n                for (i = 0; i < hash_size - 1; i++) {\r\n                    head[i] = 0;\r\n                }\r\n\r\n                // Set the default configuration parameters:\r\n                max_lazy_match = config_table[level].max_lazy;\r\n                good_match = config_table[level].good_length;\r\n                nice_match = config_table[level].nice_length;\r\n                max_chain_length = config_table[level].max_chain;\r\n\r\n                strstart = 0;\r\n                block_start = 0;\r\n                lookahead = 0;\r\n                match_length = prev_length = MIN_MATCH - 1;\r\n                match_available = 0;\r\n                ins_h = 0;\r\n            }\r\n\r\n            function init_block() {\r\n                var i;\r\n                // Initialize the trees.\r\n                for (i = 0; i < L_CODES; i++)\r\n                    dyn_ltree[i * 2] = 0;\r\n                for (i = 0; i < D_CODES; i++)\r\n                    dyn_dtree[i * 2] = 0;\r\n                for (i = 0; i < BL_CODES; i++)\r\n                    bl_tree[i * 2] = 0;\r\n\r\n                dyn_ltree[END_BLOCK * 2] = 1;\r\n                that.opt_len = that.static_len = 0;\r\n                last_lit = matches = 0;\r\n            }\r\n\r\n            // Initialize the tree data structures for a new zlib stream.\r\n            function tr_init() {\r\n\r\n                l_desc.dyn_tree = dyn_ltree;\r\n                l_desc.stat_desc = StaticTree.static_l_desc;\r\n\r\n                d_desc.dyn_tree = dyn_dtree;\r\n                d_desc.stat_desc = StaticTree.static_d_desc;\r\n\r\n                bl_desc.dyn_tree = bl_tree;\r\n                bl_desc.stat_desc = StaticTree.static_bl_desc;\r\n\r\n                bi_buf = 0;\r\n                bi_valid = 0;\r\n                last_eob_len = 8; // enough lookahead for inflate\r\n\r\n                // Initialize the first block of the first file:\r\n                init_block();\r\n            }\r\n\r\n            // Restore the heap property by moving down the tree starting at node k,\r\n            // exchanging a node with the smallest of its two sons if necessary,\r\n            // stopping\r\n            // when the heap property is re-established (each father smaller than its\r\n            // two sons).\r\n            that.pqdownheap = function(tree, // the tree to restore\r\n                k // node to move down\r\n            ) {\r\n                var heap = that.heap;\r\n                var v = heap[k];\r\n                var j = k << 1; // left son of k\r\n                while (j <= that.heap_len) {\r\n                    // Set j to the smallest of the two sons:\r\n                    if (j < that.heap_len && smaller(tree, heap[j + 1], heap[j], that.depth)) {\r\n                        j++;\r\n                    }\r\n                    // Exit if v is smaller than both sons\r\n                    if (smaller(tree, v, heap[j], that.depth))\r\n                        break;\r\n\r\n                    // Exchange v with the smallest son\r\n                    heap[k] = heap[j];\r\n                    k = j;\r\n                    // And continue down the tree, setting j to the left son of k\r\n                    j <<= 1;\r\n                }\r\n                heap[k] = v;\r\n            };\r\n\r\n            // Scan a literal or distance tree to determine the frequencies of the codes\r\n            // in the bit length tree.\r\n            function scan_tree(tree, // the tree to be scanned\r\n                max_code // and its largest code of non zero frequency\r\n            ) {\r\n                var n; // iterates over all tree elements\r\n                var prevlen = -1; // last emitted length\r\n                var curlen; // length of current code\r\n                var nextlen = tree[0 * 2 + 1]; // length of next code\r\n                var count = 0; // repeat count of the current code\r\n                var max_count = 7; // max repeat count\r\n                var min_count = 4; // min repeat count\r\n\r\n                if (nextlen === 0) {\r\n                    max_count = 138;\r\n                    min_count = 3;\r\n                }\r\n                tree[(max_code + 1) * 2 + 1] = 0xffff; // guard\r\n\r\n                for (n = 0; n <= max_code; n++) {\r\n                    curlen = nextlen;\r\n                    nextlen = tree[(n + 1) * 2 + 1];\r\n                    if (++count < max_count && curlen == nextlen) {\r\n                        continue;\r\n                    } else if (count < min_count) {\r\n                        bl_tree[curlen * 2] += count;\r\n                    } else if (curlen !== 0) {\r\n                        if (curlen != prevlen)\r\n                            bl_tree[curlen * 2]++;\r\n                        bl_tree[REP_3_6 * 2]++;\r\n                    } else if (count <= 10) {\r\n                        bl_tree[REPZ_3_10 * 2]++;\r\n                    } else {\r\n                        bl_tree[REPZ_11_138 * 2]++;\r\n                    }\r\n                    count = 0;\r\n                    prevlen = curlen;\r\n                    if (nextlen === 0) {\r\n                        max_count = 138;\r\n                        min_count = 3;\r\n                    } else if (curlen == nextlen) {\r\n                        max_count = 6;\r\n                        min_count = 3;\r\n                    } else {\r\n                        max_count = 7;\r\n                        min_count = 4;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Construct the Huffman tree for the bit lengths and return the index in\r\n            // bl_order of the last bit length code to send.\r\n            function build_bl_tree() {\r\n                var max_blindex; // index of last bit length code of non zero freq\r\n\r\n                // Determine the bit length frequencies for literal and distance trees\r\n                scan_tree(dyn_ltree, l_desc.max_code);\r\n                scan_tree(dyn_dtree, d_desc.max_code);\r\n\r\n                // Build the bit length tree:\r\n                bl_desc.build_tree(that);\r\n                // opt_len now includes the length of the tree representations, except\r\n                // the lengths of the bit lengths codes and the 5+5+4 bits for the\r\n                // counts.\r\n\r\n                // Determine the number of bit length codes to send. The pkzip format\r\n                // requires that at least 4 bit length codes be sent. (appnote.txt says\r\n                // 3 but the actual value used is 4.)\r\n                for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\r\n                    if (bl_tree[Tree.bl_order[max_blindex] * 2 + 1] !== 0)\r\n                        break;\r\n                }\r\n                // Update opt_len to include the bit length tree and counts\r\n                that.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\r\n\r\n                return max_blindex;\r\n            }\r\n\r\n            // Output a byte on the stream.\r\n            // IN assertion: there is enough room in pending_buf.\r\n            function put_byte(p) {\r\n                that.pending_buf[that.pending++] = p;\r\n            }\r\n\r\n            function put_short(w) {\r\n                put_byte(w & 0xff);\r\n                put_byte((w >>> 8) & 0xff);\r\n            }\r\n\r\n            function putShortMSB(b) {\r\n                put_byte((b >> 8) & 0xff);\r\n                put_byte((b & 0xff) & 0xff);\r\n            }\r\n\r\n            function send_bits(value, length) {\r\n                var val, len = length;\r\n                if (bi_valid > Buf_size - len) {\r\n                    val = value;\r\n                    // bi_buf |= (val << bi_valid);\r\n                    bi_buf |= ((val << bi_valid) & 0xffff);\r\n                    put_short(bi_buf);\r\n                    bi_buf = val >>> (Buf_size - bi_valid);\r\n                    bi_valid += len - Buf_size;\r\n                } else {\r\n                    // bi_buf |= (value) << bi_valid;\r\n                    bi_buf |= (((value) << bi_valid) & 0xffff);\r\n                    bi_valid += len;\r\n                }\r\n            }\r\n\r\n            function send_code(c, tree) {\r\n                var c2 = c * 2;\r\n                send_bits(tree[c2] & 0xffff, tree[c2 + 1] & 0xffff);\r\n            }\r\n\r\n            // Send a literal or distance tree in compressed form, using the codes in\r\n            // bl_tree.\r\n            function send_tree(tree, // the tree to be sent\r\n                max_code // and its largest code of non zero frequency\r\n            ) {\r\n                var n; // iterates over all tree elements\r\n                var prevlen = -1; // last emitted length\r\n                var curlen; // length of current code\r\n                var nextlen = tree[0 * 2 + 1]; // length of next code\r\n                var count = 0; // repeat count of the current code\r\n                var max_count = 7; // max repeat count\r\n                var min_count = 4; // min repeat count\r\n\r\n                if (nextlen === 0) {\r\n                    max_count = 138;\r\n                    min_count = 3;\r\n                }\r\n\r\n                for (n = 0; n <= max_code; n++) {\r\n                    curlen = nextlen;\r\n                    nextlen = tree[(n + 1) * 2 + 1];\r\n                    if (++count < max_count && curlen == nextlen) {\r\n                        continue;\r\n                    } else if (count < min_count) {\r\n                        do {\r\n                            send_code(curlen, bl_tree);\r\n                        } while (--count !== 0);\r\n                    } else if (curlen !== 0) {\r\n                        if (curlen != prevlen) {\r\n                            send_code(curlen, bl_tree);\r\n                            count--;\r\n                        }\r\n                        send_code(REP_3_6, bl_tree);\r\n                        send_bits(count - 3, 2);\r\n                    } else if (count <= 10) {\r\n                        send_code(REPZ_3_10, bl_tree);\r\n                        send_bits(count - 3, 3);\r\n                    } else {\r\n                        send_code(REPZ_11_138, bl_tree);\r\n                        send_bits(count - 11, 7);\r\n                    }\r\n                    count = 0;\r\n                    prevlen = curlen;\r\n                    if (nextlen === 0) {\r\n                        max_count = 138;\r\n                        min_count = 3;\r\n                    } else if (curlen == nextlen) {\r\n                        max_count = 6;\r\n                        min_count = 3;\r\n                    } else {\r\n                        max_count = 7;\r\n                        min_count = 4;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Send the header for a block using dynamic Huffman trees: the counts, the\r\n            // lengths of the bit length codes, the literal tree and the distance tree.\r\n            // IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\r\n            function send_all_trees(lcodes, dcodes, blcodes) {\r\n                var rank; // index in bl_order\r\n\r\n                send_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\r\n                send_bits(dcodes - 1, 5);\r\n                send_bits(blcodes - 4, 4); // not -3 as stated in appnote.txt\r\n                for (rank = 0; rank < blcodes; rank++) {\r\n                    send_bits(bl_tree[Tree.bl_order[rank] * 2 + 1], 3);\r\n                }\r\n                send_tree(dyn_ltree, lcodes - 1); // literal tree\r\n                send_tree(dyn_dtree, dcodes - 1); // distance tree\r\n            }\r\n\r\n            // Flush the bit buffer, keeping at most 7 bits in it.\r\n            function bi_flush() {\r\n                if (bi_valid == 16) {\r\n                    put_short(bi_buf);\r\n                    bi_buf = 0;\r\n                    bi_valid = 0;\r\n                } else if (bi_valid >= 8) {\r\n                    put_byte(bi_buf & 0xff);\r\n                    bi_buf >>>= 8;\r\n                    bi_valid -= 8;\r\n                }\r\n            }\r\n\r\n            // Send one empty static block to give enough lookahead for inflate.\r\n            // This takes 10 bits, of which 7 may remain in the bit buffer.\r\n            // The current inflate code requires 9 bits of lookahead. If the\r\n            // last two codes for the previous block (real code plus EOB) were coded\r\n            // on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode\r\n            // the last real code. In this case we send two empty static blocks instead\r\n            // of one. (There are no problems if the previous block is stored or fixed.)\r\n            // To simplify the code, we assume the worst case of last real code encoded\r\n            // on one bit only.\r\n            function _tr_align() {\r\n                send_bits(STATIC_TREES << 1, 3);\r\n                send_code(END_BLOCK, StaticTree.static_ltree);\r\n\r\n                bi_flush();\r\n\r\n                // Of the 10 bits for the empty block, we have already sent\r\n                // (10 - bi_valid) bits. The lookahead for the last real code (before\r\n                // the EOB of the previous block) was thus at least one plus the length\r\n                // of the EOB plus what we have just sent of the empty static block.\r\n                if (1 + last_eob_len + 10 - bi_valid < 9) {\r\n                    send_bits(STATIC_TREES << 1, 3);\r\n                    send_code(END_BLOCK, StaticTree.static_ltree);\r\n                    bi_flush();\r\n                }\r\n                last_eob_len = 7;\r\n            }\r\n\r\n            // Save the match info and tally the frequency counts. Return true if\r\n            // the current block must be flushed.\r\n            function _tr_tally(dist, // distance of matched string\r\n                lc // match length-MIN_MATCH or unmatched char (if dist==0)\r\n            ) {\r\n                var out_length, in_length, dcode;\r\n                that.pending_buf[d_buf + last_lit * 2] = (dist >>> 8) & 0xff;\r\n                that.pending_buf[d_buf + last_lit * 2 + 1] = dist & 0xff;\r\n\r\n                that.pending_buf[l_buf + last_lit] = lc & 0xff;\r\n                last_lit++;\r\n\r\n                if (dist === 0) {\r\n                    // lc is the unmatched char\r\n                    dyn_ltree[lc * 2]++;\r\n                } else {\r\n                    matches++;\r\n                    // Here, lc is the match length - MIN_MATCH\r\n                    dist--; // dist = match distance - 1\r\n                    dyn_ltree[(Tree._length_code[lc] + LITERALS + 1) * 2]++;\r\n                    dyn_dtree[Tree.d_code(dist) * 2]++;\r\n                }\r\n\r\n                if ((last_lit & 0x1fff) === 0 && level > 2) {\r\n                    // Compute an upper bound for the compressed length\r\n                    out_length = last_lit * 8;\r\n                    in_length = strstart - block_start;\r\n                    for (dcode = 0; dcode < D_CODES; dcode++) {\r\n                        out_length += dyn_dtree[dcode * 2] * (5 + Tree.extra_dbits[dcode]);\r\n                    }\r\n                    out_length >>>= 3;\r\n                    if ((matches < Math.floor(last_lit / 2)) && out_length < Math.floor(in_length / 2))\r\n                        return true;\r\n                }\r\n\r\n                return (last_lit == lit_bufsize - 1);\r\n                // We avoid equality with lit_bufsize because of wraparound at 64K\r\n                // on 16 bit machines and because stored blocks are restricted to\r\n                // 64K-1 bytes.\r\n            }\r\n\r\n            // Send the block data compressed using the given Huffman trees\r\n            function compress_block(ltree, dtree) {\r\n                var dist; // distance of matched string\r\n                var lc; // match length or unmatched char (if dist === 0)\r\n                var lx = 0; // running index in l_buf\r\n                var code; // the code to send\r\n                var extra; // number of extra bits to send\r\n\r\n                if (last_lit !== 0) {\r\n                    do {\r\n                        dist = ((that.pending_buf[d_buf + lx * 2] << 8) & 0xff00) | (that.pending_buf[d_buf + lx * 2 + 1] & 0xff);\r\n                        lc = (that.pending_buf[l_buf + lx]) & 0xff;\r\n                        lx++;\r\n\r\n                        if (dist === 0) {\r\n                            send_code(lc, ltree); // send a literal byte\r\n                        } else {\r\n                            // Here, lc is the match length - MIN_MATCH\r\n                            code = Tree._length_code[lc];\r\n\r\n                            send_code(code + LITERALS + 1, ltree); // send the length\r\n                            // code\r\n                            extra = Tree.extra_lbits[code];\r\n                            if (extra !== 0) {\r\n                                lc -= Tree.base_length[code];\r\n                                send_bits(lc, extra); // send the extra length bits\r\n                            }\r\n                            dist--; // dist is now the match distance - 1\r\n                            code = Tree.d_code(dist);\r\n\r\n                            send_code(code, dtree); // send the distance code\r\n                            extra = Tree.extra_dbits[code];\r\n                            if (extra !== 0) {\r\n                                dist -= Tree.base_dist[code];\r\n                                send_bits(dist, extra); // send the extra distance bits\r\n                            }\r\n                        } // literal or match pair ?\r\n\r\n                        // Check that the overlay between pending_buf and d_buf+l_buf is\r\n                        // ok:\r\n                    } while (lx < last_lit);\r\n                }\r\n\r\n                send_code(END_BLOCK, ltree);\r\n                last_eob_len = ltree[END_BLOCK * 2 + 1];\r\n            }\r\n\r\n            // Flush the bit buffer and align the output on a byte boundary\r\n            function bi_windup() {\r\n                if (bi_valid > 8) {\r\n                    put_short(bi_buf);\r\n                } else if (bi_valid > 0) {\r\n                    put_byte(bi_buf & 0xff);\r\n                }\r\n                bi_buf = 0;\r\n                bi_valid = 0;\r\n            }\r\n\r\n            // Copy a stored block, storing first the length and its\r\n            // one's complement if requested.\r\n            function copy_block(buf, // the input data\r\n                len, // its length\r\n                header // true if block header must be written\r\n            ) {\r\n                bi_windup(); // align on byte boundary\r\n                last_eob_len = 8; // enough lookahead for inflate\r\n\r\n                if (header) {\r\n                    put_short(len);\r\n                    put_short(~len);\r\n                }\r\n\r\n                that.pending_buf.set(window.subarray(buf, buf + len), that.pending);\r\n                that.pending += len;\r\n            }\r\n\r\n            // Send a stored block\r\n            function _tr_stored_block(buf, // input block\r\n                stored_len, // length of input block\r\n                eof // true if this is the last block for a file\r\n            ) {\r\n                send_bits((STORED_BLOCK << 1) + (eof ? 1 : 0), 3); // send block type\r\n                copy_block(buf, stored_len, true); // with header\r\n            }\r\n\r\n            // Determine the best encoding for the current block: dynamic trees, static\r\n            // trees or store, and output the encoded block to the zip file.\r\n            function _tr_flush_block(buf, // input block, or NULL if too old\r\n                stored_len, // length of input block\r\n                eof // true if this is the last block for a file\r\n            ) {\r\n                var opt_lenb, static_lenb; // opt_len and static_len in bytes\r\n                var max_blindex = 0; // index of last bit length code of non zero freq\r\n\r\n                // Build the Huffman trees unless a stored block is forced\r\n                if (level > 0) {\r\n                    // Construct the literal and distance trees\r\n                    l_desc.build_tree(that);\r\n\r\n                    d_desc.build_tree(that);\r\n\r\n                    // At this point, opt_len and static_len are the total bit lengths\r\n                    // of\r\n                    // the compressed block data, excluding the tree representations.\r\n\r\n                    // Build the bit length tree for the above two trees, and get the\r\n                    // index\r\n                    // in bl_order of the last bit length code to send.\r\n                    max_blindex = build_bl_tree();\r\n\r\n                    // Determine the best encoding. Compute first the block length in\r\n                    // bytes\r\n                    opt_lenb = (that.opt_len + 3 + 7) >>> 3;\r\n                    static_lenb = (that.static_len + 3 + 7) >>> 3;\r\n\r\n                    if (static_lenb <= opt_lenb)\r\n                        opt_lenb = static_lenb;\r\n                } else {\r\n                    opt_lenb = static_lenb = stored_len + 5; // force a stored block\r\n                }\r\n\r\n                if ((stored_len + 4 <= opt_lenb) && buf != -1) {\r\n                    // 4: two words for the lengths\r\n                    // The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\r\n                    // Otherwise we can't have processed more than WSIZE input bytes\r\n                    // since\r\n                    // the last block flush, because compression would have been\r\n                    // successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\r\n                    // transform a block into a stored block.\r\n                    _tr_stored_block(buf, stored_len, eof);\r\n                } else if (static_lenb == opt_lenb) {\r\n                    send_bits((STATIC_TREES << 1) + (eof ? 1 : 0), 3);\r\n                    compress_block(StaticTree.static_ltree, StaticTree.static_dtree);\r\n                } else {\r\n                    send_bits((DYN_TREES << 1) + (eof ? 1 : 0), 3);\r\n                    send_all_trees(l_desc.max_code + 1, d_desc.max_code + 1, max_blindex + 1);\r\n                    compress_block(dyn_ltree, dyn_dtree);\r\n                }\r\n\r\n                // The above check is made mod 2^32, for files larger than 512 MB\r\n                // and uLong implemented on 32 bits.\r\n\r\n                init_block();\r\n\r\n                if (eof) {\r\n                    bi_windup();\r\n                }\r\n            }\r\n\r\n            function flush_block_only(eof) {\r\n                _tr_flush_block(block_start >= 0 ? block_start : -1, strstart - block_start, eof);\r\n                block_start = strstart;\r\n                strm.flush_pending();\r\n            }\r\n\r\n            // Fill the window when the lookahead becomes insufficient.\r\n            // Updates strstart and lookahead.\r\n            //\r\n            // IN assertion: lookahead < MIN_LOOKAHEAD\r\n            // OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\r\n            // At least one byte has been read, or avail_in === 0; reads are\r\n            // performed for at least two bytes (required for the zip translate_eol\r\n            // option -- not supported here).\r\n            function fill_window() {\r\n                var n, m;\r\n                var p;\r\n                var more; // Amount of free space at the end of the window.\r\n\r\n                do {\r\n                    more = (window_size - lookahead - strstart);\r\n\r\n                    // Deal with !@#$% 64K limit:\r\n                    if (more === 0 && strstart === 0 && lookahead === 0) {\r\n                        more = w_size;\r\n                    } else if (more == -1) {\r\n                        // Very unlikely, but possible on 16 bit machine if strstart ==\r\n                        // 0\r\n                        // and lookahead == 1 (input done one byte at time)\r\n                        more--;\r\n\r\n                        // If the window is almost full and there is insufficient\r\n                        // lookahead,\r\n                        // move the upper half to the lower one to make room in the\r\n                        // upper half.\r\n                    } else if (strstart >= w_size + w_size - MIN_LOOKAHEAD) {\r\n                        window.set(window.subarray(w_size, w_size + w_size), 0);\r\n\r\n                        match_start -= w_size;\r\n                        strstart -= w_size; // we now have strstart >= MAX_DIST\r\n                        block_start -= w_size;\r\n\r\n                        // Slide the hash table (could be avoided with 32 bit values\r\n                        // at the expense of memory usage). We slide even when level ==\r\n                        // 0\r\n                        // to keep the hash table consistent if we switch back to level\r\n                        // > 0\r\n                        // later. (Using level 0 permanently is not an optimal usage of\r\n                        // zlib, so we don't care about this pathological case.)\r\n\r\n                        n = hash_size;\r\n                        p = n;\r\n                        do {\r\n                            m = (head[--p] & 0xffff);\r\n                            head[p] = (m >= w_size ? m - w_size : 0);\r\n                        } while (--n !== 0);\r\n\r\n                        n = w_size;\r\n                        p = n;\r\n                        do {\r\n                            m = (prev[--p] & 0xffff);\r\n                            prev[p] = (m >= w_size ? m - w_size : 0);\r\n                            // If n is not on any hash chain, prev[n] is garbage but\r\n                            // its value will never be used.\r\n                        } while (--n !== 0);\r\n                        more += w_size;\r\n                    }\r\n\r\n                    if (strm.avail_in === 0)\r\n                        return;\r\n\r\n                    // If there was no sliding:\r\n                    // strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\r\n                    // more == window_size - lookahead - strstart\r\n                    // => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\r\n                    // => more >= window_size - 2*WSIZE + 2\r\n                    // In the BIG_MEM or MMAP case (not yet supported),\r\n                    // window_size == input_size + MIN_LOOKAHEAD &&\r\n                    // strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\r\n                    // Otherwise, window_size == 2*WSIZE so more >= 2.\r\n                    // If there was sliding, more >= WSIZE. So in all cases, more >= 2.\r\n\r\n                    n = strm.read_buf(window, strstart + lookahead, more);\r\n                    lookahead += n;\r\n\r\n                    // Initialize the hash value now that we have some input:\r\n                    if (lookahead >= MIN_MATCH) {\r\n                        ins_h = window[strstart] & 0xff;\r\n                        ins_h = (((ins_h) << hash_shift) ^ (window[strstart + 1] & 0xff)) & hash_mask;\r\n                    }\r\n                    // If the whole input has less than MIN_MATCH bytes, ins_h is\r\n                    // garbage,\r\n                    // but this is not important since only literal bytes will be\r\n                    // emitted.\r\n                } while (lookahead < MIN_LOOKAHEAD && strm.avail_in !== 0);\r\n            }\r\n\r\n            // Copy without compression as much as possible from the input stream,\r\n            // return\r\n            // the current block state.\r\n            // This function does not insert new strings in the dictionary since\r\n            // uncompressible data is probably not useful. This function is used\r\n            // only for the level=0 compression option.\r\n            // NOTE: this function should be optimized to avoid extra copying from\r\n            // window to pending_buf.\r\n            function deflate_stored(flush) {\r\n                // Stored blocks are limited to 0xffff bytes, pending_buf is limited\r\n                // to pending_buf_size, and each stored block has a 5 byte header:\r\n\r\n                var max_block_size = 0xffff;\r\n                var max_start;\r\n\r\n                if (max_block_size > pending_buf_size - 5) {\r\n                    max_block_size = pending_buf_size - 5;\r\n                }\r\n\r\n                // Copy as much as possible from input to output:\r\n                while (true) {\r\n                    // Fill the window as much as possible:\r\n                    if (lookahead <= 1) {\r\n                        fill_window();\r\n                        if (lookahead === 0 && flush == Z_NO_FLUSH)\r\n                            return NeedMore;\r\n                        if (lookahead === 0)\r\n                            break; // flush the current block\r\n                    }\r\n\r\n                    strstart += lookahead;\r\n                    lookahead = 0;\r\n\r\n                    // Emit a stored block if pending_buf will be full:\r\n                    max_start = block_start + max_block_size;\r\n                    if (strstart === 0 || strstart >= max_start) {\r\n                        // strstart === 0 is possible when wraparound on 16-bit machine\r\n                        lookahead = (strstart - max_start);\r\n                        strstart = max_start;\r\n\r\n                        flush_block_only(false);\r\n                        if (strm.avail_out === 0)\r\n                            return NeedMore;\r\n\r\n                    }\r\n\r\n                    // Flush if we may have to slide, otherwise block_start may become\r\n                    // negative and the data will be gone:\r\n                    if (strstart - block_start >= w_size - MIN_LOOKAHEAD) {\r\n                        flush_block_only(false);\r\n                        if (strm.avail_out === 0)\r\n                            return NeedMore;\r\n                    }\r\n                }\r\n\r\n                flush_block_only(flush == Z_FINISH);\r\n                if (strm.avail_out === 0)\r\n                    return (flush == Z_FINISH) ? FinishStarted : NeedMore;\r\n\r\n                return flush == Z_FINISH ? FinishDone : BlockDone;\r\n            }\r\n\r\n            function longest_match(cur_match) {\r\n                var chain_length = max_chain_length; // max hash chain length\r\n                var scan = strstart; // current string\r\n                var match; // matched string\r\n                var len; // length of current match\r\n                var best_len = prev_length; // best match length so far\r\n                var limit = strstart > (w_size - MIN_LOOKAHEAD) ? strstart - (w_size - MIN_LOOKAHEAD) : 0;\r\n                var _nice_match = nice_match;\r\n\r\n                // Stop when cur_match becomes <= limit. To simplify the code,\r\n                // we prevent matches with the string of window index 0.\r\n\r\n                var wmask = w_mask;\r\n\r\n                var strend = strstart + MAX_MATCH;\r\n                var scan_end1 = window[scan + best_len - 1];\r\n                var scan_end = window[scan + best_len];\r\n\r\n                // The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of\r\n                // 16.\r\n                // It is easy to get rid of this optimization if necessary.\r\n\r\n                // Do not waste too much time if we already have a good match:\r\n                if (prev_length >= good_match) {\r\n                    chain_length >>= 2;\r\n                }\r\n\r\n                // Do not look for matches beyond the end of the input. This is\r\n                // necessary\r\n                // to make deflate deterministic.\r\n                if (_nice_match > lookahead)\r\n                    _nice_match = lookahead;\r\n\r\n                do {\r\n                    match = cur_match;\r\n\r\n                    // Skip to next match if the match length cannot increase\r\n                    // or if the match length is less than 2:\r\n                    if (window[match + best_len] != scan_end || window[match + best_len - 1] != scan_end1 || window[match] != window[scan] ||\r\n                        window[++match] != window[scan + 1])\r\n                        continue;\r\n\r\n                    // The check at best_len-1 can be removed because it will be made\r\n                    // again later. (This heuristic is not always a win.)\r\n                    // It is not necessary to compare scan[2] and match[2] since they\r\n                    // are always equal when the other bytes match, given that\r\n                    // the hash keys are equal and that HASH_BITS >= 8.\r\n                    scan += 2;\r\n                    match++;\r\n\r\n                    // We check for insufficient lookahead only every 8th comparison;\r\n                    // the 256th check will be made at strstart+258.\r\n                    do {} while (window[++scan] == window[++match] && window[++scan] == window[++match] && window[++scan] == window[++match] &&\r\n                        window[++scan] == window[++match] && window[++scan] == window[++match] && window[++scan] == window[++match] &&\r\n                        window[++scan] == window[++match] && window[++scan] == window[++match] && scan < strend);\r\n\r\n                    len = MAX_MATCH - (strend - scan);\r\n                    scan = strend - MAX_MATCH;\r\n\r\n                    if (len > best_len) {\r\n                        match_start = cur_match;\r\n                        best_len = len;\r\n                        if (len >= _nice_match)\r\n                            break;\r\n                        scan_end1 = window[scan + best_len - 1];\r\n                        scan_end = window[scan + best_len];\r\n                    }\r\n\r\n                } while ((cur_match = (prev[cur_match & wmask] & 0xffff)) > limit && --chain_length !== 0);\r\n\r\n                if (best_len <= lookahead)\r\n                    return best_len;\r\n                return lookahead;\r\n            }\r\n\r\n            // Compress as much as possible from the input stream, return the current\r\n            // block state.\r\n            // This function does not perform lazy evaluation of matches and inserts\r\n            // new strings in the dictionary only for unmatched strings or for short\r\n            // matches. It is used only for the fast compression options.\r\n            function deflate_fast(flush) {\r\n                // short hash_head = 0; // head of the hash chain\r\n                var hash_head = 0; // head of the hash chain\r\n                var bflush; // set if current block must be flushed\r\n\r\n                while (true) {\r\n                    // Make sure that we always have enough lookahead, except\r\n                    // at the end of the input file. We need MAX_MATCH bytes\r\n                    // for the next match, plus MIN_MATCH bytes to insert the\r\n                    // string following the next match.\r\n                    if (lookahead < MIN_LOOKAHEAD) {\r\n                        fill_window();\r\n                        if (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\r\n                            return NeedMore;\r\n                        }\r\n                        if (lookahead === 0)\r\n                            break; // flush the current block\r\n                    }\r\n\r\n                    // Insert the string window[strstart .. strstart+2] in the\r\n                    // dictionary, and set hash_head to the head of the hash chain:\r\n                    if (lookahead >= MIN_MATCH) {\r\n                        ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\r\n\r\n                        // prev[strstart&w_mask]=hash_head=head[ins_h];\r\n                        hash_head = (head[ins_h] & 0xffff);\r\n                        prev[strstart & w_mask] = head[ins_h];\r\n                        head[ins_h] = strstart;\r\n                    }\r\n\r\n                    // Find the longest match, discarding those <= prev_length.\r\n                    // At this point we have always match_length < MIN_MATCH\r\n\r\n                    if (hash_head !== 0 && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\r\n                        // To simplify the code, we prevent matches with the string\r\n                        // of window index 0 (in particular we have to avoid a match\r\n                        // of the string with itself at the start of the input file).\r\n                        if (strategy != Z_HUFFMAN_ONLY) {\r\n                            match_length = longest_match(hash_head);\r\n                        }\r\n                        // longest_match() sets match_start\r\n                    }\r\n                    if (match_length >= MIN_MATCH) {\r\n                        // check_match(strstart, match_start, match_length);\r\n\r\n                        bflush = _tr_tally(strstart - match_start, match_length - MIN_MATCH);\r\n\r\n                        lookahead -= match_length;\r\n\r\n                        // Insert new strings in the hash table only if the match length\r\n                        // is not too large. This saves time but degrades compression.\r\n                        if (match_length <= max_lazy_match && lookahead >= MIN_MATCH) {\r\n                            match_length--; // string at strstart already in hash table\r\n                            do {\r\n                                strstart++;\r\n\r\n                                ins_h = ((ins_h << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\r\n                                // prev[strstart&w_mask]=hash_head=head[ins_h];\r\n                                hash_head = (head[ins_h] & 0xffff);\r\n                                prev[strstart & w_mask] = head[ins_h];\r\n                                head[ins_h] = strstart;\r\n\r\n                                // strstart never exceeds WSIZE-MAX_MATCH, so there are\r\n                                // always MIN_MATCH bytes ahead.\r\n                            } while (--match_length !== 0);\r\n                            strstart++;\r\n                        } else {\r\n                            strstart += match_length;\r\n                            match_length = 0;\r\n                            ins_h = window[strstart] & 0xff;\r\n\r\n                            ins_h = (((ins_h) << hash_shift) ^ (window[strstart + 1] & 0xff)) & hash_mask;\r\n                            // If lookahead < MIN_MATCH, ins_h is garbage, but it does\r\n                            // not\r\n                            // matter since it will be recomputed at next deflate call.\r\n                        }\r\n                    } else {\r\n                        // No match, output a literal byte\r\n\r\n                        bflush = _tr_tally(0, window[strstart] & 0xff);\r\n                        lookahead--;\r\n                        strstart++;\r\n                    }\r\n                    if (bflush) {\r\n\r\n                        flush_block_only(false);\r\n                        if (strm.avail_out === 0)\r\n                            return NeedMore;\r\n                    }\r\n                }\r\n\r\n                flush_block_only(flush == Z_FINISH);\r\n                if (strm.avail_out === 0) {\r\n                    if (flush == Z_FINISH)\r\n                        return FinishStarted;\r\n                    else\r\n                        return NeedMore;\r\n                }\r\n                return flush == Z_FINISH ? FinishDone : BlockDone;\r\n            }\r\n\r\n            // Same as above, but achieves better compression. We use a lazy\r\n            // evaluation for matches: a match is finally adopted only if there is\r\n            // no better match at the next window position.\r\n            function deflate_slow(flush) {\r\n                // short hash_head = 0; // head of hash chain\r\n                var hash_head = 0; // head of hash chain\r\n                var bflush; // set if current block must be flushed\r\n                var max_insert;\r\n\r\n                // Process the input block.\r\n                while (true) {\r\n                    // Make sure that we always have enough lookahead, except\r\n                    // at the end of the input file. We need MAX_MATCH bytes\r\n                    // for the next match, plus MIN_MATCH bytes to insert the\r\n                    // string following the next match.\r\n\r\n                    if (lookahead < MIN_LOOKAHEAD) {\r\n                        fill_window();\r\n                        if (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\r\n                            return NeedMore;\r\n                        }\r\n                        if (lookahead === 0)\r\n                            break; // flush the current block\r\n                    }\r\n\r\n                    // Insert the string window[strstart .. strstart+2] in the\r\n                    // dictionary, and set hash_head to the head of the hash chain:\r\n\r\n                    if (lookahead >= MIN_MATCH) {\r\n                        ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\r\n                        // prev[strstart&w_mask]=hash_head=head[ins_h];\r\n                        hash_head = (head[ins_h] & 0xffff);\r\n                        prev[strstart & w_mask] = head[ins_h];\r\n                        head[ins_h] = strstart;\r\n                    }\r\n\r\n                    // Find the longest match, discarding those <= prev_length.\r\n                    prev_length = match_length;\r\n                    prev_match = match_start;\r\n                    match_length = MIN_MATCH - 1;\r\n\r\n                    if (hash_head !== 0 && prev_length < max_lazy_match && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\r\n                        // To simplify the code, we prevent matches with the string\r\n                        // of window index 0 (in particular we have to avoid a match\r\n                        // of the string with itself at the start of the input file).\r\n\r\n                        if (strategy != Z_HUFFMAN_ONLY) {\r\n                            match_length = longest_match(hash_head);\r\n                        }\r\n                        // longest_match() sets match_start\r\n\r\n                        if (match_length <= 5 && (strategy == Z_FILTERED || (match_length == MIN_MATCH && strstart - match_start > 4096))) {\r\n\r\n                            // If prev_match is also MIN_MATCH, match_start is garbage\r\n                            // but we will ignore the current match anyway.\r\n                            match_length = MIN_MATCH - 1;\r\n                        }\r\n                    }\r\n\r\n                    // If there was a match at the previous step and the current\r\n                    // match is not better, output the previous match:\r\n                    if (prev_length >= MIN_MATCH && match_length <= prev_length) {\r\n                        max_insert = strstart + lookahead - MIN_MATCH;\r\n                        // Do not insert strings in hash table beyond this.\r\n\r\n                        // check_match(strstart-1, prev_match, prev_length);\r\n\r\n                        bflush = _tr_tally(strstart - 1 - prev_match, prev_length - MIN_MATCH);\r\n\r\n                        // Insert in hash table all strings up to the end of the match.\r\n                        // strstart-1 and strstart are already inserted. If there is not\r\n                        // enough lookahead, the last two strings are not inserted in\r\n                        // the hash table.\r\n                        lookahead -= prev_length - 1;\r\n                        prev_length -= 2;\r\n                        do {\r\n                            if (++strstart <= max_insert) {\r\n                                ins_h = (((ins_h) << hash_shift) ^ (window[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\r\n                                // prev[strstart&w_mask]=hash_head=head[ins_h];\r\n                                hash_head = (head[ins_h] & 0xffff);\r\n                                prev[strstart & w_mask] = head[ins_h];\r\n                                head[ins_h] = strstart;\r\n                            }\r\n                        } while (--prev_length !== 0);\r\n                        match_available = 0;\r\n                        match_length = MIN_MATCH - 1;\r\n                        strstart++;\r\n\r\n                        if (bflush) {\r\n                            flush_block_only(false);\r\n                            if (strm.avail_out === 0)\r\n                                return NeedMore;\r\n                        }\r\n                    } else if (match_available !== 0) {\r\n\r\n                        // If there was no match at the previous position, output a\r\n                        // single literal. If there was a match but the current match\r\n                        // is longer, truncate the previous match to a single literal.\r\n\r\n                        bflush = _tr_tally(0, window[strstart - 1] & 0xff);\r\n\r\n                        if (bflush) {\r\n                            flush_block_only(false);\r\n                        }\r\n                        strstart++;\r\n                        lookahead--;\r\n                        if (strm.avail_out === 0)\r\n                            return NeedMore;\r\n                    } else {\r\n                        // There is no previous match to compare with, wait for\r\n                        // the next step to decide.\r\n\r\n                        match_available = 1;\r\n                        strstart++;\r\n                        lookahead--;\r\n                    }\r\n                }\r\n\r\n                if (match_available !== 0) {\r\n                    bflush = _tr_tally(0, window[strstart - 1] & 0xff);\r\n                    match_available = 0;\r\n                }\r\n                flush_block_only(flush == Z_FINISH);\r\n\r\n                if (strm.avail_out === 0) {\r\n                    if (flush == Z_FINISH)\r\n                        return FinishStarted;\r\n                    else\r\n                        return NeedMore;\r\n                }\r\n\r\n                return flush == Z_FINISH ? FinishDone : BlockDone;\r\n            }\r\n\r\n            function deflateReset(strm) {\r\n                strm.total_in = strm.total_out = 0;\r\n                strm.msg = null; //\r\n\r\n                that.pending = 0;\r\n                that.pending_out = 0;\r\n\r\n                status = BUSY_STATE;\r\n\r\n                last_flush = Z_NO_FLUSH;\r\n\r\n                tr_init();\r\n                lm_init();\r\n                return Z_OK;\r\n            }\r\n\r\n            that.deflateInit = function(strm, _level, bits, _method, memLevel, _strategy) {\r\n                if (!_method)\r\n                    _method = Z_DEFLATED;\r\n                if (!memLevel)\r\n                    memLevel = DEF_MEM_LEVEL;\r\n                if (!_strategy)\r\n                    _strategy = Z_DEFAULT_STRATEGY;\r\n\r\n                // byte[] my_version=ZLIB_VERSION;\r\n\r\n                //\r\n                // if (!version || version[0] != my_version[0]\r\n                // || stream_size != sizeof(z_stream)) {\r\n                // return Z_VERSION_ERROR;\r\n                // }\r\n\r\n                strm.msg = null;\r\n\r\n                if (_level == Z_DEFAULT_COMPRESSION)\r\n                    _level = 6;\r\n\r\n                if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || _method != Z_DEFLATED || bits < 9 || bits > 15 || _level < 0 || _level > 9 || _strategy < 0 ||\r\n                    _strategy > Z_HUFFMAN_ONLY) {\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n\r\n                strm.dstate = that;\r\n\r\n                w_bits = bits;\r\n                w_size = 1 << w_bits;\r\n                w_mask = w_size - 1;\r\n\r\n                hash_bits = memLevel + 7;\r\n                hash_size = 1 << hash_bits;\r\n                hash_mask = hash_size - 1;\r\n                hash_shift = Math.floor((hash_bits + MIN_MATCH - 1) / MIN_MATCH);\r\n\r\n                window = new Uint8Array(w_size * 2);\r\n                prev = [];\r\n                head = [];\r\n\r\n                lit_bufsize = 1 << (memLevel + 6); // 16K elements by default\r\n\r\n                // We overlay pending_buf and d_buf+l_buf. This works since the average\r\n                // output size for (length,distance) codes is <= 24 bits.\r\n                that.pending_buf = new Uint8Array(lit_bufsize * 4);\r\n                pending_buf_size = lit_bufsize * 4;\r\n\r\n                d_buf = Math.floor(lit_bufsize / 2);\r\n                l_buf = (1 + 2) * lit_bufsize;\r\n\r\n                level = _level;\r\n\r\n                strategy = _strategy;\r\n                method = _method & 0xff;\r\n\r\n                return deflateReset(strm);\r\n            };\r\n\r\n            that.deflateEnd = function() {\r\n                if (status != INIT_STATE && status != BUSY_STATE && status != FINISH_STATE) {\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n                // Deallocate in reverse order of allocations:\r\n                that.pending_buf = null;\r\n                head = null;\r\n                prev = null;\r\n                window = null;\r\n                // free\r\n                that.dstate = null;\r\n                return status == BUSY_STATE ? Z_DATA_ERROR : Z_OK;\r\n            };\r\n\r\n            that.deflateParams = function(strm, _level, _strategy) {\r\n                var err = Z_OK;\r\n\r\n                if (_level == Z_DEFAULT_COMPRESSION) {\r\n                    _level = 6;\r\n                }\r\n                if (_level < 0 || _level > 9 || _strategy < 0 || _strategy > Z_HUFFMAN_ONLY) {\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n\r\n                if (config_table[level].func != config_table[_level].func && strm.total_in !== 0) {\r\n                    // Flush the last buffer:\r\n                    err = strm.deflate(Z_PARTIAL_FLUSH);\r\n                }\r\n\r\n                if (level != _level) {\r\n                    level = _level;\r\n                    max_lazy_match = config_table[level].max_lazy;\r\n                    good_match = config_table[level].good_length;\r\n                    nice_match = config_table[level].nice_length;\r\n                    max_chain_length = config_table[level].max_chain;\r\n                }\r\n                strategy = _strategy;\r\n                return err;\r\n            };\r\n\r\n            that.deflateSetDictionary = function(strm, dictionary, dictLength) {\r\n                var length = dictLength;\r\n                var n, index = 0;\r\n\r\n                if (!dictionary || status != INIT_STATE)\r\n                    return Z_STREAM_ERROR;\r\n\r\n                if (length < MIN_MATCH)\r\n                    return Z_OK;\r\n                if (length > w_size - MIN_LOOKAHEAD) {\r\n                    length = w_size - MIN_LOOKAHEAD;\r\n                    index = dictLength - length; // use the tail of the dictionary\r\n                }\r\n                window.set(dictionary.subarray(index, index + length), 0);\r\n\r\n                strstart = length;\r\n                block_start = length;\r\n\r\n                // Insert all strings in the hash table (except for the last two bytes).\r\n                // s->lookahead stays null, so s->ins_h will be recomputed at the next\r\n                // call of fill_window.\r\n\r\n                ins_h = window[0] & 0xff;\r\n                ins_h = (((ins_h) << hash_shift) ^ (window[1] & 0xff)) & hash_mask;\r\n\r\n                for (n = 0; n <= length - MIN_MATCH; n++) {\r\n                    ins_h = (((ins_h) << hash_shift) ^ (window[(n) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\r\n                    prev[n & w_mask] = head[ins_h];\r\n                    head[ins_h] = n;\r\n                }\r\n                return Z_OK;\r\n            };\r\n\r\n            that.deflate = function(_strm, flush) {\r\n                var i, header, level_flags, old_flush, bstate;\r\n\r\n                if (flush > Z_FINISH || flush < 0) {\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n\r\n                if (!_strm.next_out || (!_strm.next_in && _strm.avail_in !== 0) || (status == FINISH_STATE && flush != Z_FINISH)) {\r\n                    _strm.msg = z_errmsg[Z_NEED_DICT - (Z_STREAM_ERROR)];\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n                if (_strm.avail_out === 0) {\r\n                    _strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\r\n                    return Z_BUF_ERROR;\r\n                }\r\n\r\n                strm = _strm; // just in case\r\n                old_flush = last_flush;\r\n                last_flush = flush;\r\n\r\n                // Write the zlib header\r\n                if (status == INIT_STATE) {\r\n                    header = (Z_DEFLATED + ((w_bits - 8) << 4)) << 8;\r\n                    level_flags = ((level - 1) & 0xff) >> 1;\r\n\r\n                    if (level_flags > 3)\r\n                        level_flags = 3;\r\n                    header |= (level_flags << 6);\r\n                    if (strstart !== 0)\r\n                        header |= PRESET_DICT;\r\n                    header += 31 - (header % 31);\r\n\r\n                    status = BUSY_STATE;\r\n                    putShortMSB(header);\r\n                }\r\n\r\n                // Flush as much pending output as possible\r\n                if (that.pending !== 0) {\r\n                    strm.flush_pending();\r\n                    if (strm.avail_out === 0) {\r\n                        // console.log(\" avail_out==0\");\r\n                        // Since avail_out is 0, deflate will be called again with\r\n                        // more output space, but possibly with both pending and\r\n                        // avail_in equal to zero. There won't be anything to do,\r\n                        // but this is not an error situation so make sure we\r\n                        // return OK instead of BUF_ERROR at next call of deflate:\r\n                        last_flush = -1;\r\n                        return Z_OK;\r\n                    }\r\n\r\n                    // Make sure there is something to do and avoid duplicate\r\n                    // consecutive\r\n                    // flushes. For repeated and useless calls with Z_FINISH, we keep\r\n                    // returning Z_STREAM_END instead of Z_BUFF_ERROR.\r\n                } else if (strm.avail_in === 0 && flush <= old_flush && flush != Z_FINISH) {\r\n                    strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\r\n                    return Z_BUF_ERROR;\r\n                }\r\n\r\n                // User must not provide more input after the first FINISH:\r\n                if (status == FINISH_STATE && strm.avail_in !== 0) {\r\n                    _strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\r\n                    return Z_BUF_ERROR;\r\n                }\r\n\r\n                // Start a new block or continue the current one.\r\n                if (strm.avail_in !== 0 || lookahead !== 0 || (flush != Z_NO_FLUSH && status != FINISH_STATE)) {\r\n                    bstate = -1;\r\n                    switch (config_table[level].func) {\r\n                        case STORED:\r\n                            bstate = deflate_stored(flush);\r\n                            break;\r\n                        case FAST:\r\n                            bstate = deflate_fast(flush);\r\n                            break;\r\n                        case SLOW:\r\n                            bstate = deflate_slow(flush);\r\n                            break;\r\n                        default:\r\n                    }\r\n\r\n                    if (bstate == FinishStarted || bstate == FinishDone) {\r\n                        status = FINISH_STATE;\r\n                    }\r\n                    if (bstate == NeedMore || bstate == FinishStarted) {\r\n                        if (strm.avail_out === 0) {\r\n                            last_flush = -1; // avoid BUF_ERROR next call, see above\r\n                        }\r\n                        return Z_OK;\r\n                        // If flush != Z_NO_FLUSH && avail_out === 0, the next call\r\n                        // of deflate should use the same flush parameter to make sure\r\n                        // that the flush is complete. So we don't have to output an\r\n                        // empty block here, this will be done at next call. This also\r\n                        // ensures that for a very small output buffer, we emit at most\r\n                        // one empty block.\r\n                    }\r\n\r\n                    if (bstate == BlockDone) {\r\n                        if (flush == Z_PARTIAL_FLUSH) {\r\n                            _tr_align();\r\n                        } else { // FULL_FLUSH or SYNC_FLUSH\r\n                            _tr_stored_block(0, 0, false);\r\n                            // For a full flush, this empty block will be recognized\r\n                            // as a special marker by inflate_sync().\r\n                            if (flush == Z_FULL_FLUSH) {\r\n                                // state.head[s.hash_size-1]=0;\r\n                                for (i = 0; i < hash_size /*-1*/ ; i++)\r\n                                // forget history\r\n                                    head[i] = 0;\r\n                            }\r\n                        }\r\n                        strm.flush_pending();\r\n                        if (strm.avail_out === 0) {\r\n                            last_flush = -1; // avoid BUF_ERROR at next call, see above\r\n                            return Z_OK;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (flush != Z_FINISH)\r\n                    return Z_OK;\r\n                return Z_STREAM_END;\r\n            };\r\n        }\r\n\r\n        // ZStream\r\n\r\n        function ZStream() {\r\n            var that = this;\r\n            that.next_in_index = 0;\r\n            that.next_out_index = 0;\r\n            // that.next_in; // next input byte\r\n            that.avail_in = 0; // number of bytes available at next_in\r\n            that.total_in = 0; // total nb of input bytes read so far\r\n            // that.next_out; // next output byte should be put there\r\n            that.avail_out = 0; // remaining free space at next_out\r\n            that.total_out = 0; // total nb of bytes output so far\r\n            // that.msg;\r\n            // that.dstate;\r\n        }\r\n\r\n        ZStream.prototype = {\r\n            deflateInit: function(level, bits) {\r\n                var that = this;\r\n                that.dstate = new Deflate();\r\n                if (!bits)\r\n                    bits = MAX_BITS;\r\n                return that.dstate.deflateInit(that, level, bits);\r\n            },\r\n\r\n            deflate: function(flush) {\r\n                var that = this;\r\n                if (!that.dstate) {\r\n                    return Z_STREAM_ERROR;\r\n                }\r\n                return that.dstate.deflate(that, flush);\r\n            },\r\n\r\n            deflateEnd: function() {\r\n                var that = this;\r\n                if (!that.dstate)\r\n                    return Z_STREAM_ERROR;\r\n                var ret = that.dstate.deflateEnd();\r\n                that.dstate = null;\r\n                return ret;\r\n            },\r\n\r\n            deflateParams: function(level, strategy) {\r\n                var that = this;\r\n                if (!that.dstate)\r\n                    return Z_STREAM_ERROR;\r\n                return that.dstate.deflateParams(that, level, strategy);\r\n            },\r\n\r\n            deflateSetDictionary: function(dictionary, dictLength) {\r\n                var that = this;\r\n                if (!that.dstate)\r\n                    return Z_STREAM_ERROR;\r\n                return that.dstate.deflateSetDictionary(that, dictionary, dictLength);\r\n            },\r\n\r\n            // Read a new buffer from the current input stream, update the\r\n            // total number of bytes read. All deflate() input goes through\r\n            // this function so some applications may wish to modify it to avoid\r\n            // allocating a large strm->next_in buffer and copying from it.\r\n            // (See also flush_pending()).\r\n            read_buf: function(buf, start, size) {\r\n                var that = this;\r\n                var len = that.avail_in;\r\n                if (len > size)\r\n                    len = size;\r\n                if (len === 0)\r\n                    return 0;\r\n                that.avail_in -= len;\r\n                buf.set(that.next_in.subarray(that.next_in_index, that.next_in_index + len), start);\r\n                that.next_in_index += len;\r\n                that.total_in += len;\r\n                return len;\r\n            },\r\n\r\n            // Flush as much pending output as possible. All deflate() output goes\r\n            // through this function so some applications may wish to modify it\r\n            // to avoid allocating a large strm->next_out buffer and copying into it.\r\n            // (See also read_buf()).\r\n            flush_pending: function() {\r\n                var that = this;\r\n                var len = that.dstate.pending;\r\n\r\n                if (len > that.avail_out)\r\n                    len = that.avail_out;\r\n                if (len === 0)\r\n                    return;\r\n\r\n                // if (that.dstate.pending_buf.length <= that.dstate.pending_out || that.next_out.length <= that.next_out_index\r\n                // || that.dstate.pending_buf.length < (that.dstate.pending_out + len) || that.next_out.length < (that.next_out_index +\r\n                // len)) {\r\n                // console.log(that.dstate.pending_buf.length + \", \" + that.dstate.pending_out + \", \" + that.next_out.length + \", \" +\r\n                // that.next_out_index + \", \" + len);\r\n                // console.log(\"avail_out=\" + that.avail_out);\r\n                // }\r\n\r\n                that.next_out.set(that.dstate.pending_buf.subarray(that.dstate.pending_out, that.dstate.pending_out + len), that.next_out_index);\r\n\r\n                that.next_out_index += len;\r\n                that.dstate.pending_out += len;\r\n                that.total_out += len;\r\n                that.avail_out -= len;\r\n                that.dstate.pending -= len;\r\n                if (that.dstate.pending === 0) {\r\n                    that.dstate.pending_out = 0;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Deflater\r\n\r\n        return function Deflater(level) {\r\n            var that = this;\r\n            var z = new ZStream();\r\n            var bufsize = 512;\r\n            var flush = Z_NO_FLUSH;\r\n            var buf = new Uint8Array(bufsize);\r\n\r\n            if (typeof level == \"undefined\")\r\n                level = Z_DEFAULT_COMPRESSION;\r\n            z.deflateInit(level);\r\n            z.next_out = buf;\r\n\r\n            that.append = function(data, onprogress) {\r\n                var err, buffers = [],\r\n                    lastIndex = 0,\r\n                    bufferIndex = 0,\r\n                    bufferSize = 0,\r\n                    array;\r\n                if (!data.length)\r\n                    return;\r\n                z.next_in_index = 0;\r\n                z.next_in = data;\r\n                z.avail_in = data.length;\r\n                do {\r\n                    z.next_out_index = 0;\r\n                    z.avail_out = bufsize;\r\n                    err = z.deflate(flush);\r\n                    if (err != Z_OK)\r\n                        throw \"deflating: \" + z.msg;\r\n                    if (z.next_out_index)\r\n                        if (z.next_out_index == bufsize)\r\n                            buffers.push(new Uint8Array(buf));\r\n                        else\r\n                            buffers.push(new Uint8Array(buf.subarray(0, z.next_out_index)));\r\n                    bufferSize += z.next_out_index;\r\n                    if (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\r\n                        onprogress(z.next_in_index);\r\n                        lastIndex = z.next_in_index;\r\n                    }\r\n                } while (z.avail_in > 0 || z.avail_out === 0);\r\n                array = new Uint8Array(bufferSize);\r\n                buffers.forEach(function(chunk) {\r\n                    array.set(chunk, bufferIndex);\r\n                    bufferIndex += chunk.length;\r\n                });\r\n                return array;\r\n            };\r\n            that.flush = function() {\r\n                var err, buffers = [],\r\n                    bufferIndex = 0,\r\n                    bufferSize = 0,\r\n                    array;\r\n                do {\r\n                    z.next_out_index = 0;\r\n                    z.avail_out = bufsize;\r\n                    err = z.deflate(Z_FINISH);\r\n                    if (err != Z_STREAM_END && err != Z_OK)\r\n                        throw \"deflating: \" + z.msg;\r\n                    if (bufsize - z.avail_out > 0)\r\n                        buffers.push(new Uint8Array(buf.subarray(0, z.next_out_index)));\r\n                    bufferSize += z.next_out_index;\r\n                } while (z.avail_in > 0 || z.avail_out === 0);\r\n                z.deflateEnd();\r\n                array = new Uint8Array(bufferSize);\r\n                buffers.forEach(function(chunk) {\r\n                    array.set(chunk, bufferIndex);\r\n                    bufferIndex += chunk.length;\r\n                });\r\n                return array;\r\n            };\r\n        };\r\n    })(undefined);\r\n\r\n\r\n    /*\r\n      html2canvas 0.5.0-beta3 <http://html2canvas.hertzen.com>\r\n      Copyright (c) 2016 Niklas von Hertzen\r\n\r\n      Released under  License\r\n    */\r\n\r\n    // Generated by CoffeeScript 1.4.0\r\n\r\n    /*\r\n    # PNG.js\r\n    # Copyright (c) 2011 Devon Govett\r\n    # MIT LICENSE\r\n    #\r\n    #\r\n    */\r\n\r\n\r\n    (function(global) {\r\n        var PNG;\r\n\r\n        PNG = (function() {\r\n            var APNG_BLEND_OP_OVER, APNG_BLEND_OP_SOURCE, APNG_DISPOSE_OP_BACKGROUND, APNG_DISPOSE_OP_NONE, APNG_DISPOSE_OP_PREVIOUS, makeImage, scratchCanvas, scratchCtx;\r\n\r\n            PNG.load = function(url, canvas, callback) {\r\n                var xhr,\r\n                    _this = this;\r\n                if (typeof canvas === 'function') {\r\n                    callback = canvas;\r\n                }\r\n                xhr = new XMLHttpRequest;\r\n                xhr.open(\"GET\", url, true);\r\n                xhr.responseType = \"arraybuffer\";\r\n                xhr.onload = function() {\r\n                    var data, png;\r\n                    data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\r\n                    png = new PNG(data);\r\n                    if (typeof(canvas != null ? canvas.getContext : void 0) === 'function') {\r\n                        png.render(canvas);\r\n                    }\r\n                    return typeof callback === \"function\" ? callback(png) : void 0;\r\n                };\r\n                return xhr.send(null);\r\n            };\r\n\r\n            APNG_DISPOSE_OP_NONE = 0;\r\n\r\n            APNG_DISPOSE_OP_BACKGROUND = 1;\r\n\r\n            APNG_DISPOSE_OP_PREVIOUS = 2;\r\n\r\n            APNG_BLEND_OP_SOURCE = 0;\r\n\r\n            APNG_BLEND_OP_OVER = 1;\r\n\r\n            function PNG(data) {\r\n                var chunkSize, colors, palLen, delayDen, delayNum, frame, i, index, key, section, palShort, text, _i, _j, _ref;\r\n                this.data = data;\r\n                this.pos = 8;\r\n                this.palette = [];\r\n                this.imgData = [];\r\n                this.transparency = {};\r\n                this.animation = null;\r\n                this.text = {};\r\n                frame = null;\r\n                while (true) {\r\n                    chunkSize = this.readUInt32();\r\n                    section = ((function() {\r\n                        var _i, _results;\r\n                        _results = [];\r\n                        for (i = _i = 0; _i < 4; i = ++_i) {\r\n                            _results.push(String.fromCharCode(this.data[this.pos++]));\r\n                        }\r\n                        return _results;\r\n                    }).call(this)).join('');\r\n                    switch (section) {\r\n                        case 'IHDR':\r\n                            this.width = this.readUInt32();\r\n                            this.height = this.readUInt32();\r\n                            this.bits = this.data[this.pos++];\r\n                            this.colorType = this.data[this.pos++];\r\n                            this.compressionMethod = this.data[this.pos++];\r\n                            this.filterMethod = this.data[this.pos++];\r\n                            this.interlaceMethod = this.data[this.pos++];\r\n                            break;\r\n                        case 'acTL':\r\n                            this.animation = {\r\n                                numFrames: this.readUInt32(),\r\n                                numPlays: this.readUInt32() || Infinity,\r\n                                frames: []\r\n                            };\r\n                            break;\r\n                        case 'PLTE':\r\n                            this.palette = this.read(chunkSize);\r\n                            break;\r\n                        case 'fcTL':\r\n                            if (frame) {\r\n                                this.animation.frames.push(frame);\r\n                            }\r\n                            this.pos += 4;\r\n                            frame = {\r\n                                width: this.readUInt32(),\r\n                                height: this.readUInt32(),\r\n                                xOffset: this.readUInt32(),\r\n                                yOffset: this.readUInt32()\r\n                            };\r\n                            delayNum = this.readUInt16();\r\n                            delayDen = this.readUInt16() || 100;\r\n                            frame.delay = 1000 * delayNum / delayDen;\r\n                            frame.disposeOp = this.data[this.pos++];\r\n                            frame.blendOp = this.data[this.pos++];\r\n                            frame.data = [];\r\n                            break;\r\n                        case 'IDAT':\r\n                        case 'fdAT':\r\n                            if (section === 'fdAT') {\r\n                                this.pos += 4;\r\n                                chunkSize -= 4;\r\n                            }\r\n                            data = (frame != null ? frame.data : void 0) || this.imgData;\r\n                            for (i = _i = 0; 0 <= chunkSize ? _i < chunkSize : _i > chunkSize; i = 0 <= chunkSize ? ++_i : --_i) {\r\n                                data.push(this.data[this.pos++]);\r\n                            }\r\n                            break;\r\n                        case 'tRNS':\r\n                            this.transparency = {};\r\n                            switch (this.colorType) {\r\n                                case 3:\r\n                                    palLen = this.palette.length / 3;\r\n                                    this.transparency.indexed = this.read(chunkSize);\r\n                                    if (this.transparency.indexed.length > palLen)\r\n                                        throw new Error('More transparent colors than palette size');\r\n                                    /*\r\n                                     * According to the PNG spec trns should be increased to the same size as palette if shorter\r\n                                     */\r\n                                    //palShort = 255 - this.transparency.indexed.length;\r\n                                    palShort = palLen - this.transparency.indexed.length;\r\n                                    if (palShort > 0) {\r\n                                        for (i = _j = 0; 0 <= palShort ? _j < palShort : _j > palShort; i = 0 <= palShort ? ++_j : --_j) {\r\n                                            this.transparency.indexed.push(255);\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 0:\r\n                                    this.transparency.grayscale = this.read(chunkSize)[0];\r\n                                    break;\r\n                                case 2:\r\n                                    this.transparency.rgb = this.read(chunkSize);\r\n                            }\r\n                            break;\r\n                        case 'tEXt':\r\n                            text = this.read(chunkSize);\r\n                            index = text.indexOf(0);\r\n                            key = String.fromCharCode.apply(String, text.slice(0, index));\r\n                            this.text[key] = String.fromCharCode.apply(String, text.slice(index + 1));\r\n                            break;\r\n                        case 'IEND':\r\n                            if (frame) {\r\n                                this.animation.frames.push(frame);\r\n                            }\r\n                            this.colors = (function() {\r\n                                switch (this.colorType) {\r\n                                    case 0:\r\n                                    case 3:\r\n                                    case 4:\r\n                                        return 1;\r\n                                    case 2:\r\n                                    case 6:\r\n                                        return 3;\r\n                                }\r\n                            }).call(this);\r\n                            this.hasAlphaChannel = (_ref = this.colorType) === 4 || _ref === 6;\r\n                            colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\r\n                            this.pixelBitlength = this.bits * colors;\r\n                            this.colorSpace = (function() {\r\n                                switch (this.colors) {\r\n                                    case 1:\r\n                                        return 'DeviceGray';\r\n                                    case 3:\r\n                                        return 'DeviceRGB';\r\n                                }\r\n                            }).call(this);\r\n                            this.imgData = new Uint8Array(this.imgData);\r\n                            return;\r\n                        default:\r\n                            this.pos += chunkSize;\r\n                    }\r\n                    this.pos += 4;\r\n                    if (this.pos > this.data.length) {\r\n                        throw new Error(\"Incomplete or corrupt PNG file\");\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            PNG.prototype.read = function(bytes) {\r\n                var i, _i, _results;\r\n                _results = [];\r\n                for (i = _i = 0; 0 <= bytes ? _i < bytes : _i > bytes; i = 0 <= bytes ? ++_i : --_i) {\r\n                    _results.push(this.data[this.pos++]);\r\n                }\r\n                return _results;\r\n            };\r\n\r\n            PNG.prototype.readUInt32 = function() {\r\n                var b1, b2, b3, b4;\r\n                b1 = this.data[this.pos++] << 24;\r\n                b2 = this.data[this.pos++] << 16;\r\n                b3 = this.data[this.pos++] << 8;\r\n                b4 = this.data[this.pos++];\r\n                return b1 | b2 | b3 | b4;\r\n            };\r\n\r\n            PNG.prototype.readUInt16 = function() {\r\n                var b1, b2;\r\n                b1 = this.data[this.pos++] << 8;\r\n                b2 = this.data[this.pos++];\r\n                return b1 | b2;\r\n            };\r\n\r\n            PNG.prototype.decodePixels = function(data) {\r\n                var abyte, c, col, i, left, length, p, pa, paeth, pb, pc, pixelBytes, pixels, pos, row, scanlineLength, upper, upperLeft, _i, _j, _k, _l, _m;\r\n                if (data == null) {\r\n                    data = this.imgData;\r\n                }\r\n                if (data.length === 0) {\r\n                    return new Uint8Array(0);\r\n                }\r\n                data = new FlateStream(data);\r\n                data = data.getBytes();\r\n                pixelBytes = this.pixelBitlength / 8;\r\n                scanlineLength = pixelBytes * this.width;\r\n                pixels = new Uint8Array(scanlineLength * this.height);\r\n                length = data.length;\r\n                row = 0;\r\n                pos = 0;\r\n                c = 0;\r\n                while (pos < length) {\r\n                    switch (data[pos++]) {\r\n                        case 0:\r\n                            for (i = _i = 0; _i < scanlineLength; i = _i += 1) {\r\n                                pixels[c++] = data[pos++];\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            for (i = _j = 0; _j < scanlineLength; i = _j += 1) {\r\n                                abyte = data[pos++];\r\n                                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\r\n                                pixels[c++] = (abyte + left) % 256;\r\n                            }\r\n                            break;\r\n                        case 2:\r\n                            for (i = _k = 0; _k < scanlineLength; i = _k += 1) {\r\n                                abyte = data[pos++];\r\n                                col = (i - (i % pixelBytes)) / pixelBytes;\r\n                                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\r\n                                pixels[c++] = (upper + abyte) % 256;\r\n                            }\r\n                            break;\r\n                        case 3:\r\n                            for (i = _l = 0; _l < scanlineLength; i = _l += 1) {\r\n                                abyte = data[pos++];\r\n                                col = (i - (i % pixelBytes)) / pixelBytes;\r\n                                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\r\n                                upper = row && pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\r\n                                pixels[c++] = (abyte + Math.floor((left + upper) / 2)) % 256;\r\n                            }\r\n                            break;\r\n                        case 4:\r\n                            for (i = _m = 0; _m < scanlineLength; i = _m += 1) {\r\n                                abyte = data[pos++];\r\n                                col = (i - (i % pixelBytes)) / pixelBytes;\r\n                                left = i < pixelBytes ? 0 : pixels[c - pixelBytes];\r\n                                if (row === 0) {\r\n                                    upper = upperLeft = 0;\r\n                                } else {\r\n                                    upper = pixels[(row - 1) * scanlineLength + col * pixelBytes + (i % pixelBytes)];\r\n                                    upperLeft = col && pixels[(row - 1) * scanlineLength + (col - 1) * pixelBytes + (i % pixelBytes)];\r\n                                }\r\n                                p = left + upper - upperLeft;\r\n                                pa = Math.abs(p - left);\r\n                                pb = Math.abs(p - upper);\r\n                                pc = Math.abs(p - upperLeft);\r\n                                if (pa <= pb && pa <= pc) {\r\n                                    paeth = left;\r\n                                } else if (pb <= pc) {\r\n                                    paeth = upper;\r\n                                } else {\r\n                                    paeth = upperLeft;\r\n                                }\r\n                                pixels[c++] = (abyte + paeth) % 256;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            throw new Error(\"Invalid filter algorithm: \" + data[pos - 1]);\r\n                    }\r\n                    row++;\r\n                }\r\n                return pixels;\r\n            };\r\n\r\n            PNG.prototype.decodePalette = function() {\r\n                var c, i, length, palette, pos, ret, transparency, _i, _ref, _ref1;\r\n                palette = this.palette;\r\n                transparency = this.transparency.indexed || [];\r\n                ret = new Uint8Array((transparency.length || 0) + palette.length);\r\n                pos = 0;\r\n                length = palette.length;\r\n                c = 0;\r\n                for (i = _i = 0, _ref = palette.length; _i < _ref; i = _i += 3) {\r\n                    ret[pos++] = palette[i];\r\n                    ret[pos++] = palette[i + 1];\r\n                    ret[pos++] = palette[i + 2];\r\n                    ret[pos++] = (_ref1 = transparency[c++]) != null ? _ref1 : 255;\r\n                }\r\n                return ret;\r\n            };\r\n\r\n            PNG.prototype.copyToImageData = function(imageData, pixels) {\r\n                var alpha, colors, data, i, input, j, k, length, palette, v, _ref;\r\n                colors = this.colors;\r\n                palette = null;\r\n                alpha = this.hasAlphaChannel;\r\n                if (this.palette.length) {\r\n                    palette = (_ref = this._decodedPalette) != null ? _ref : this._decodedPalette = this.decodePalette();\r\n                    colors = 4;\r\n                    alpha = true;\r\n                }\r\n                data = imageData.data || imageData;\r\n                length = data.length;\r\n                input = palette || pixels;\r\n                i = j = 0;\r\n                if (colors === 1) {\r\n                    while (i < length) {\r\n                        k = palette ? pixels[i / 4] * 4 : j;\r\n                        v = input[k++];\r\n                        data[i++] = v;\r\n                        data[i++] = v;\r\n                        data[i++] = v;\r\n                        data[i++] = alpha ? input[k++] : 255;\r\n                        j = k;\r\n                    }\r\n                } else {\r\n                    while (i < length) {\r\n                        k = palette ? pixels[i / 4] * 4 : j;\r\n                        data[i++] = input[k++];\r\n                        data[i++] = input[k++];\r\n                        data[i++] = input[k++];\r\n                        data[i++] = alpha ? input[k++] : 255;\r\n                        j = k;\r\n                    }\r\n                }\r\n            };\r\n\r\n            PNG.prototype.decode = function() {\r\n                var ret;\r\n                ret = new Uint8Array(this.width * this.height * 4);\r\n                this.copyToImageData(ret, this.decodePixels());\r\n                return ret;\r\n            };\r\n\r\n            try {\r\n                scratchCanvas = global.document.createElement('canvas');\r\n                scratchCtx = scratchCanvas.getContext('2d');\r\n            } catch (e) {\r\n                return -1;\r\n            }\r\n\r\n            makeImage = function(imageData) {\r\n                var img;\r\n                scratchCtx.width = imageData.width;\r\n                scratchCtx.height = imageData.height;\r\n                scratchCtx.clearRect(0, 0, imageData.width, imageData.height);\r\n                scratchCtx.putImageData(imageData, 0, 0);\r\n                img = new Image;\r\n                img.src = scratchCanvas.toDataURL();\r\n                return img;\r\n            };\r\n\r\n            PNG.prototype.decodeFrames = function(ctx) {\r\n                var frame, i, imageData, pixels, _i, _len, _ref, _results;\r\n                if (!this.animation) {\r\n                    return;\r\n                }\r\n                _ref = this.animation.frames;\r\n                _results = [];\r\n                for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\r\n                    frame = _ref[i];\r\n                    imageData = ctx.createImageData(frame.width, frame.height);\r\n                    pixels = this.decodePixels(new Uint8Array(frame.data));\r\n                    this.copyToImageData(imageData, pixels);\r\n                    frame.imageData = imageData;\r\n                    _results.push(frame.image = makeImage(imageData));\r\n                }\r\n                return _results;\r\n            };\r\n\r\n            PNG.prototype.renderFrame = function(ctx, number) {\r\n                var frame, frames, prev;\r\n                frames = this.animation.frames;\r\n                frame = frames[number];\r\n                prev = frames[number - 1];\r\n                if (number === 0) {\r\n                    ctx.clearRect(0, 0, this.width, this.height);\r\n                }\r\n                if ((prev != null ? prev.disposeOp : void 0) === APNG_DISPOSE_OP_BACKGROUND) {\r\n                    ctx.clearRect(prev.xOffset, prev.yOffset, prev.width, prev.height);\r\n                } else if ((prev != null ? prev.disposeOp : void 0) === APNG_DISPOSE_OP_PREVIOUS) {\r\n                    ctx.putImageData(prev.imageData, prev.xOffset, prev.yOffset);\r\n                }\r\n                if (frame.blendOp === APNG_BLEND_OP_SOURCE) {\r\n                    ctx.clearRect(frame.xOffset, frame.yOffset, frame.width, frame.height);\r\n                }\r\n                return ctx.drawImage(frame.image, frame.xOffset, frame.yOffset);\r\n            };\r\n\r\n            PNG.prototype.animate = function(ctx) {\r\n                var doFrame, frameNumber, frames, numFrames, numPlays, _ref,\r\n                    _this = this;\r\n                frameNumber = 0;\r\n                _ref = this.animation, numFrames = _ref.numFrames, frames = _ref.frames, numPlays = _ref.numPlays;\r\n                return (doFrame = function() {\r\n                    var f, frame;\r\n                    f = frameNumber++ % numFrames;\r\n                    frame = frames[f];\r\n                    _this.renderFrame(ctx, f);\r\n                    if (numFrames > 1 && frameNumber / numFrames < numPlays) {\r\n                        return _this.animation._timeout = setTimeout(doFrame, frame.delay);\r\n                    }\r\n                })();\r\n            };\r\n\r\n            PNG.prototype.stopAnimation = function() {\r\n                var _ref;\r\n                return clearTimeout((_ref = this.animation) != null ? _ref._timeout : void 0);\r\n            };\r\n\r\n            PNG.prototype.render = function(canvas) {\r\n                var ctx, data;\r\n                if (canvas._png) {\r\n                    canvas._png.stopAnimation();\r\n                }\r\n                canvas._png = this;\r\n                canvas.width = this.width;\r\n                canvas.height = this.height;\r\n                ctx = canvas.getContext(\"2d\");\r\n                if (this.animation) {\r\n                    this.decodeFrames(ctx);\r\n                    return this.animate(ctx);\r\n                } else {\r\n                    data = ctx.createImageData(this.width, this.height);\r\n                    this.copyToImageData(data, this.decodePixels());\r\n                    return ctx.putImageData(data, 0, 0);\r\n                }\r\n            };\r\n\r\n            return PNG;\r\n\r\n        })();\r\n\r\n        global.PNG = PNG;\r\n\r\n    })(typeof window !== \"undefined\" && window || undefined);\r\n\r\n    /*\r\n     * Extracted from pdf.js\r\n     * https://github.com/andreasgal/pdf.js\r\n     *\r\n     * Copyright (c) 2011 Mozilla Foundation\r\n     *\r\n     * Contributors: Andreas Gal <gal@mozilla.com>\r\n     *               Chris G Jones <cjones@mozilla.com>\r\n     *               Shaon Barman <shaon.barman@gmail.com>\r\n     *               Vivien Nicolas <21@vingtetun.org>\r\n     *               Justin D'Arcangelo <justindarc@gmail.com>\r\n     *               Yury Delendik\r\n     *\r\n     *\r\n     */\r\n\r\n    var DecodeStream = (function() {\r\n        function constructor() {\r\n            this.pos = 0;\r\n            this.bufferLength = 0;\r\n            this.eof = false;\r\n            this.buffer = null;\r\n        }\r\n\r\n        constructor.prototype = {\r\n            ensureBuffer: function decodestream_ensureBuffer(requested) {\r\n                var buffer = this.buffer;\r\n                var current = buffer ? buffer.byteLength : 0;\r\n                if (requested < current)\r\n                    return buffer;\r\n                var size = 512;\r\n                while (size < requested)\r\n                    size <<= 1;\r\n                var buffer2 = new Uint8Array(size);\r\n                for (var i = 0; i < current; ++i)\r\n                    buffer2[i] = buffer[i];\r\n                return this.buffer = buffer2;\r\n            },\r\n            getByte: function decodestream_getByte() {\r\n                var pos = this.pos;\r\n                while (this.bufferLength <= pos) {\r\n                    if (this.eof)\r\n                        return null;\r\n                    this.readBlock();\r\n                }\r\n                return this.buffer[this.pos++];\r\n            },\r\n            getBytes: function decodestream_getBytes(length) {\r\n                var pos = this.pos;\r\n\r\n                if (length) {\r\n                    this.ensureBuffer(pos + length);\r\n                    var end = pos + length;\r\n\r\n                    while (!this.eof && this.bufferLength < end)\r\n                        this.readBlock();\r\n\r\n                    var bufEnd = this.bufferLength;\r\n                    if (end > bufEnd)\r\n                        end = bufEnd;\r\n                } else {\r\n                    while (!this.eof)\r\n                        this.readBlock();\r\n\r\n                    var end = this.bufferLength;\r\n                }\r\n\r\n                this.pos = end;\r\n                return this.buffer.subarray(pos, end);\r\n            },\r\n            lookChar: function decodestream_lookChar() {\r\n                var pos = this.pos;\r\n                while (this.bufferLength <= pos) {\r\n                    if (this.eof)\r\n                        return null;\r\n                    this.readBlock();\r\n                }\r\n                return String.fromCharCode(this.buffer[this.pos]);\r\n            },\r\n            getChar: function decodestream_getChar() {\r\n                var pos = this.pos;\r\n                while (this.bufferLength <= pos) {\r\n                    if (this.eof)\r\n                        return null;\r\n                    this.readBlock();\r\n                }\r\n                return String.fromCharCode(this.buffer[this.pos++]);\r\n            },\r\n            makeSubStream: function decodestream_makeSubstream(start, length, dict) {\r\n                var end = start + length;\r\n                while (this.bufferLength <= end && !this.eof)\r\n                    this.readBlock();\r\n                return new Stream(this.buffer, start, length, dict);\r\n            },\r\n            skip: function decodestream_skip(n) {\r\n                if (!n)\r\n                    n = 1;\r\n                this.pos += n;\r\n            },\r\n            reset: function decodestream_reset() {\r\n                this.pos = 0;\r\n            }\r\n        };\r\n\r\n        return constructor;\r\n    })();\r\n\r\n    var FlateStream = (function() {\r\n        if (typeof Uint32Array === 'undefined') {\r\n            return undefined;\r\n        }\r\n        var codeLenCodeMap = new Uint32Array([\r\n            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\r\n        ]);\r\n\r\n        var lengthDecode = new Uint32Array([\r\n            0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\r\n            0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\r\n            0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\r\n            0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\r\n        ]);\r\n\r\n        var distDecode = new Uint32Array([\r\n            0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\r\n            0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\r\n            0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\r\n            0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\r\n        ]);\r\n\r\n        var fixedLitCodeTab = [new Uint32Array([\r\n            0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\r\n            0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\r\n            0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\r\n            0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\r\n            0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\r\n            0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\r\n            0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\r\n            0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\r\n            0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\r\n            0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\r\n            0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\r\n            0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\r\n            0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\r\n            0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\r\n            0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\r\n            0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\r\n            0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\r\n            0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\r\n            0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\r\n            0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\r\n            0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\r\n            0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\r\n            0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\r\n            0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\r\n            0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\r\n            0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\r\n            0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\r\n            0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\r\n            0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\r\n            0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\r\n            0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\r\n            0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\r\n            0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\r\n            0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\r\n            0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\r\n            0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\r\n            0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\r\n            0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\r\n            0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\r\n            0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\r\n            0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\r\n            0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\r\n            0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\r\n            0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\r\n            0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\r\n            0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\r\n            0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\r\n            0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\r\n            0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\r\n            0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\r\n            0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\r\n            0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\r\n            0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\r\n            0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\r\n            0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\r\n            0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\r\n            0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\r\n            0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\r\n            0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\r\n            0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\r\n            0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\r\n            0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\r\n            0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\r\n            0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\r\n        ]), 9];\r\n\r\n        var fixedDistCodeTab = [new Uint32Array([\r\n            0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\r\n            0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\r\n            0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\r\n            0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\r\n        ]), 5];\r\n\r\n        function error(e) {\r\n            throw new Error(e)\r\n        }\r\n\r\n        function constructor(bytes) {\r\n            //var bytes = stream.getBytes();\r\n            var bytesPos = 0;\r\n\r\n            var cmf = bytes[bytesPos++];\r\n            var flg = bytes[bytesPos++];\r\n            if (cmf == -1 || flg == -1)\r\n                error('Invalid header in flate stream');\r\n            if ((cmf & 0x0f) != 0x08)\r\n                error('Unknown compression method in flate stream');\r\n            if ((((cmf << 8) + flg) % 31) != 0)\r\n                error('Bad FCHECK in flate stream');\r\n            if (flg & 0x20)\r\n                error('FDICT bit set in flate stream');\r\n\r\n            this.bytes = bytes;\r\n            this.bytesPos = bytesPos;\r\n\r\n            this.codeSize = 0;\r\n            this.codeBuf = 0;\r\n\r\n            DecodeStream.call(this);\r\n        }\r\n\r\n        constructor.prototype = Object.create(DecodeStream.prototype);\r\n\r\n        constructor.prototype.getBits = function(bits) {\r\n            var codeSize = this.codeSize;\r\n            var codeBuf = this.codeBuf;\r\n            var bytes = this.bytes;\r\n            var bytesPos = this.bytesPos;\r\n\r\n            var b;\r\n            while (codeSize < bits) {\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad encoding in flate stream');\r\n                codeBuf |= b << codeSize;\r\n                codeSize += 8;\r\n            }\r\n            b = codeBuf & ((1 << bits) - 1);\r\n            this.codeBuf = codeBuf >> bits;\r\n            this.codeSize = codeSize -= bits;\r\n            this.bytesPos = bytesPos;\r\n            return b;\r\n        };\r\n\r\n        constructor.prototype.getCode = function(table) {\r\n            var codes = table[0];\r\n            var maxLen = table[1];\r\n            var codeSize = this.codeSize;\r\n            var codeBuf = this.codeBuf;\r\n            var bytes = this.bytes;\r\n            var bytesPos = this.bytesPos;\r\n\r\n            while (codeSize < maxLen) {\r\n                var b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad encoding in flate stream');\r\n                codeBuf |= (b << codeSize);\r\n                codeSize += 8;\r\n            }\r\n            var code = codes[codeBuf & ((1 << maxLen) - 1)];\r\n            var codeLen = code >> 16;\r\n            var codeVal = code & 0xffff;\r\n            if (codeSize == 0 || codeSize < codeLen || codeLen == 0)\r\n                error('Bad encoding in flate stream');\r\n            this.codeBuf = (codeBuf >> codeLen);\r\n            this.codeSize = (codeSize - codeLen);\r\n            this.bytesPos = bytesPos;\r\n            return codeVal;\r\n        };\r\n\r\n        constructor.prototype.generateHuffmanTable = function(lengths) {\r\n            var n = lengths.length;\r\n\r\n            // find max code length\r\n            var maxLen = 0;\r\n            for (var i = 0; i < n; ++i) {\r\n                if (lengths[i] > maxLen)\r\n                    maxLen = lengths[i];\r\n            }\r\n\r\n            // build the table\r\n            var size = 1 << maxLen;\r\n            var codes = new Uint32Array(size);\r\n            for (var len = 1, code = 0, skip = 2; len <= maxLen;\r\n                ++len, code <<= 1, skip <<= 1) {\r\n                for (var val = 0; val < n; ++val) {\r\n                    if (lengths[val] == len) {\r\n                        // bit-reverse the code\r\n                        var code2 = 0;\r\n                        var t = code;\r\n                        for (var i = 0; i < len; ++i) {\r\n                            code2 = (code2 << 1) | (t & 1);\r\n                            t >>= 1;\r\n                        }\r\n\r\n                        // fill the table entries\r\n                        for (var i = code2; i < size; i += skip)\r\n                            codes[i] = (len << 16) | val;\r\n\r\n                        ++code;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return [codes, maxLen];\r\n        };\r\n\r\n        constructor.prototype.readBlock = function() {\r\n            function repeat(stream, array, len, offset, what) {\r\n                var repeat = stream.getBits(len) + offset;\r\n                while (repeat-- > 0)\r\n                    array[i++] = what;\r\n            }\r\n\r\n            // read block header\r\n            var hdr = this.getBits(3);\r\n            if (hdr & 1)\r\n                this.eof = true;\r\n            hdr >>= 1;\r\n\r\n            if (hdr == 0) { // uncompressed block\r\n                var bytes = this.bytes;\r\n                var bytesPos = this.bytesPos;\r\n                var b;\r\n\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                var blockLen = b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                blockLen |= (b << 8);\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                var check = b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                check |= (b << 8);\r\n                if (check != (~blockLen & 0xffff))\r\n                    error('Bad uncompressed block length in flate stream');\r\n\r\n                this.codeBuf = 0;\r\n                this.codeSize = 0;\r\n\r\n                var bufferLength = this.bufferLength;\r\n                var buffer = this.ensureBuffer(bufferLength + blockLen);\r\n                var end = bufferLength + blockLen;\r\n                this.bufferLength = end;\r\n                for (var n = bufferLength; n < end; ++n) {\r\n                    if (typeof(b = bytes[bytesPos++]) == 'undefined') {\r\n                        this.eof = true;\r\n                        break;\r\n                    }\r\n                    buffer[n] = b;\r\n                }\r\n                this.bytesPos = bytesPos;\r\n                return;\r\n            }\r\n\r\n            var litCodeTable;\r\n            var distCodeTable;\r\n            if (hdr == 1) { // compressed block, fixed codes\r\n                litCodeTable = fixedLitCodeTab;\r\n                distCodeTable = fixedDistCodeTab;\r\n            } else if (hdr == 2) { // compressed block, dynamic codes\r\n                var numLitCodes = this.getBits(5) + 257;\r\n                var numDistCodes = this.getBits(5) + 1;\r\n                var numCodeLenCodes = this.getBits(4) + 4;\r\n\r\n                // build the code lengths code table\r\n                var codeLenCodeLengths = Array(codeLenCodeMap.length);\r\n                var i = 0;\r\n                while (i < numCodeLenCodes)\r\n                    codeLenCodeLengths[codeLenCodeMap[i++]] = this.getBits(3);\r\n                var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\r\n\r\n                // build the literal and distance code tables\r\n                var len = 0;\r\n                var i = 0;\r\n                var codes = numLitCodes + numDistCodes;\r\n                var codeLengths = new Array(codes);\r\n                while (i < codes) {\r\n                    var code = this.getCode(codeLenCodeTab);\r\n                    if (code == 16) {\r\n                        repeat(this, codeLengths, 2, 3, len);\r\n                    } else if (code == 17) {\r\n                        repeat(this, codeLengths, 3, 3, len = 0);\r\n                    } else if (code == 18) {\r\n                        repeat(this, codeLengths, 7, 11, len = 0);\r\n                    } else {\r\n                        codeLengths[i++] = len = code;\r\n                    }\r\n                }\r\n\r\n                litCodeTable =\r\n                    this.generateHuffmanTable(codeLengths.slice(0, numLitCodes));\r\n                distCodeTable =\r\n                    this.generateHuffmanTable(codeLengths.slice(numLitCodes, codes));\r\n            } else {\r\n                error('Unknown block type in flate stream');\r\n            }\r\n\r\n            var buffer = this.buffer;\r\n            var limit = buffer ? buffer.length : 0;\r\n            var pos = this.bufferLength;\r\n            while (true) {\r\n                var code1 = this.getCode(litCodeTable);\r\n                if (code1 < 256) {\r\n                    if (pos + 1 >= limit) {\r\n                        buffer = this.ensureBuffer(pos + 1);\r\n                        limit = buffer.length;\r\n                    }\r\n                    buffer[pos++] = code1;\r\n                    continue;\r\n                }\r\n                if (code1 == 256) {\r\n                    this.bufferLength = pos;\r\n                    return;\r\n                }\r\n                code1 -= 257;\r\n                code1 = lengthDecode[code1];\r\n                var code2 = code1 >> 16;\r\n                if (code2 > 0)\r\n                    code2 = this.getBits(code2);\r\n                var len = (code1 & 0xffff) + code2;\r\n                code1 = this.getCode(distCodeTable);\r\n                code1 = distDecode[code1];\r\n                code2 = code1 >> 16;\r\n                if (code2 > 0)\r\n                    code2 = this.getBits(code2);\r\n                var dist = (code1 & 0xffff) + code2;\r\n                if (pos + len >= limit) {\r\n                    buffer = this.ensureBuffer(pos + len);\r\n                    limit = buffer.length;\r\n                }\r\n                for (var k = 0; k < len; ++k, ++pos)\r\n                    buffer[pos] = buffer[pos - dist];\r\n            }\r\n        };\r\n\r\n        return constructor;\r\n    })();\r\n\r\n    /**\r\n     * JavaScript Polyfill functions for jsPDF\r\n     * Collected from public resources by\r\n     * https://github.com/diegocr\r\n     */\r\n\r\n    (function(global) {\r\n        var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\n        if (typeof global.btoa === 'undefined') {\r\n            global.btoa = function(data) {\r\n                //  discuss at: http://phpjs.org/functions/base64_encode/\r\n                // original by: Tyler Akins (http://rumkin.com)\r\n                // improved by: Bayron Guevara\r\n                // improved by: Thunder.m\r\n                // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n                // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n                // improved by: Rafal Kukawski (http://kukawski.pl)\r\n                // bugfixed by: Pellentesque Malesuada\r\n                //   example 1: base64_encode('Kevin van Zonneveld');\r\n                //   returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\r\n\r\n                var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\r\n                    ac = 0,\r\n                    enc = '',\r\n                    tmp_arr = [];\r\n\r\n                if (!data) {\r\n                    return data;\r\n                }\r\n\r\n                do { // pack three octets into four hexets\r\n                    o1 = data.charCodeAt(i++);\r\n                    o2 = data.charCodeAt(i++);\r\n                    o3 = data.charCodeAt(i++);\r\n\r\n                    bits = o1 << 16 | o2 << 8 | o3;\r\n\r\n                    h1 = bits >> 18 & 0x3f;\r\n                    h2 = bits >> 12 & 0x3f;\r\n                    h3 = bits >> 6 & 0x3f;\r\n                    h4 = bits & 0x3f;\r\n\r\n                    // use hexets to index into b64, and append result to encoded string\r\n                    tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n                } while (i < data.length);\r\n\r\n                enc = tmp_arr.join('');\r\n\r\n                var r = data.length % 3;\r\n\r\n                return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n            };\r\n        }\r\n\r\n        if (typeof global.atob === 'undefined') {\r\n            global.atob = function(data) {\r\n                //  discuss at: http://phpjs.org/functions/base64_decode/\r\n                // original by: Tyler Akins (http://rumkin.com)\r\n                // improved by: Thunder.m\r\n                // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n                // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n                //    input by: Aman Gupta\r\n                //    input by: Brett Zamir (http://brett-zamir.me)\r\n                // bugfixed by: Onno Marsman\r\n                // bugfixed by: Pellentesque Malesuada\r\n                // bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n                //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\r\n                //   returns 1: 'Kevin van Zonneveld'\r\n\r\n                var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\r\n                    ac = 0,\r\n                    dec = '',\r\n                    tmp_arr = [];\r\n\r\n                if (!data) {\r\n                    return data;\r\n                }\r\n\r\n                data += '';\r\n\r\n                do { // unpack four hexets into three octets using index points in b64\r\n                    h1 = b64.indexOf(data.charAt(i++));\r\n                    h2 = b64.indexOf(data.charAt(i++));\r\n                    h3 = b64.indexOf(data.charAt(i++));\r\n                    h4 = b64.indexOf(data.charAt(i++));\r\n\r\n                    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n\r\n                    o1 = bits >> 16 & 0xff;\r\n                    o2 = bits >> 8 & 0xff;\r\n                    o3 = bits & 0xff;\r\n\r\n                    if (h3 == 64) {\r\n                        tmp_arr[ac++] = String.fromCharCode(o1);\r\n                    } else if (h4 == 64) {\r\n                        tmp_arr[ac++] = String.fromCharCode(o1, o2);\r\n                    } else {\r\n                        tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\r\n                    }\r\n                } while (i < data.length);\r\n\r\n                dec = tmp_arr.join('');\r\n\r\n                return dec;\r\n            };\r\n        }\r\n\r\n        if (!Array.prototype.map) {\r\n            Array.prototype.map = function(fun /*, thisArg */ ) {\r\n                if (this === void 0 || this === null || typeof fun !== \"function\")\r\n                    throw new TypeError();\r\n\r\n                var t = Object(this),\r\n                    len = t.length >>> 0,\r\n                    res = new Array(len);\r\n                var thisArg = arguments.length > 1 ? arguments[1] : void 0;\r\n                for (var i = 0; i < len; i++) {\r\n                    // NOTE: Absolute correctness would demand Object.defineProperty\r\n                    //       be used.  But this method is fairly new, and failure is\r\n                    //       possible only if Object.prototype or Array.prototype\r\n                    //       has a property |i| (very unlikely), so use a less-correct\r\n                    //       but more portable alternative.\r\n                    if (i in t)\r\n                        res[i] = fun.call(thisArg, t[i], i, t);\r\n                }\r\n\r\n                return res;\r\n            };\r\n        }\r\n\r\n\r\n        if (!Array.isArray) {\r\n            Array.isArray = function(arg) {\r\n                return Object.prototype.toString.call(arg) === '[object Array]';\r\n            };\r\n        }\r\n\r\n        if (!Array.prototype.forEach) {\r\n            Array.prototype.forEach = function(fun, thisArg) {\r\n                \"use strict\";\r\n\r\n                if (this === void 0 || this === null || typeof fun !== \"function\")\r\n                    throw new TypeError();\r\n\r\n                var t = Object(this),\r\n                    len = t.length >>> 0;\r\n                for (var i = 0; i < len; i++) {\r\n                    if (i in t)\r\n                        fun.call(thisArg, t[i], i, t);\r\n                }\r\n            };\r\n        }\r\n\r\n        if (!Object.keys) {\r\n            Object.keys = (function() {\r\n                'use strict';\r\n\r\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\r\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\r\n                    dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\r\n                        'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\r\n                    ],\r\n                    dontEnumsLength = dontEnums.length;\r\n\r\n                return function(obj) {\r\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\r\n                        throw new TypeError();\r\n                    }\r\n                    var result = [],\r\n                        prop, i;\r\n\r\n                    for (prop in obj) {\r\n                        if (hasOwnProperty.call(obj, prop)) {\r\n                            result.push(prop);\r\n                        }\r\n                    }\r\n\r\n                    if (hasDontEnumBug) {\r\n                        for (i = 0; i < dontEnumsLength; i++) {\r\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\r\n                                result.push(dontEnums[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                    return result;\r\n                };\r\n            }());\r\n        }\r\n\r\n        if (!String.prototype.trim) {\r\n            String.prototype.trim = function() {\r\n                return this.replace(/^\\s+|\\s+$/g, '');\r\n            };\r\n        }\r\n        if (!String.prototype.trimLeft) {\r\n            String.prototype.trimLeft = function() {\r\n                return this.replace(/^\\s+/g, \"\");\r\n            };\r\n        }\r\n        if (!String.prototype.trimRight) {\r\n            String.prototype.trimRight = function() {\r\n                return this.replace(/\\s+$/g, \"\");\r\n            };\r\n        }\r\n    });\r\n\r\n    return jsPDF;\r\n});"],"file":"jspdf.min.js"}